{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner_",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"OwnershipTransferred(address,address)": {
					"details": "This emits when ownership of a contract changes."
				}
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"returns": {
						"owner_": "The address of the owner."
					}
				},
				"transferOwnership(address)": {
					"details": "Set _newOwner to address(0) to renounce any ownership.",
					"params": {
						"_newOwner": "The address of the new owner of the contract"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"owner()": {
					"notice": "Get the address of the owner"
				},
				"transferOwnership(address)": {
					"notice": "Set the address of the new owner of the contract"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/facets/OwnershipFacet.sol": "OwnershipFacet"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/facets/OwnershipFacet.sol": {
			"keccak256": "0x85142bcb3bae531dc7ef29a93144bd62dee1090163cfca0060248c6a16cfb37b",
			"license": "MIT",
			"urls": [
				"bzz-raw://b514c1db5de15d850956a60dbfd249153fa01ace9061355f3ab82dbce49838da",
				"dweb:/ipfs/QmdCLJcr3w8xh6T6Dv4tguqiggYkyVuMXjw48QjPtnM6kp"
			]
		},
		"contracts/interfaces/IDiamondCut.sol": {
			"keccak256": "0x505614747ed08d5ec99c8691db646e9304cb42b1c7559848be7b7638f35cfde6",
			"license": "MIT",
			"urls": [
				"bzz-raw://d71ea5d8030e3cb6c54f23cabc3c9574487d0d108f6623624609c27f054ee2d8",
				"dweb:/ipfs/QmXAzjDW5zGrMwAUtJqhKY8iH3VX5CfuPtWzzmHC4v1PFc"
			]
		},
		"contracts/interfaces/IERC173.sol": {
			"keccak256": "0x0617cc298103723214d1987960e4a4f7482dd327362cb9a9d3dc6d69e42bb7dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://8185929193f990515307fff065852b7888cb75deda60438765068e55320fb27a",
				"dweb:/ipfs/QmUTuour3ykVTggjbUsdYxMqRvUdkvimR5fJNPVQix6cgk"
			]
		},
		"contracts/libraries/LibDiamond.sol": {
			"keccak256": "0xcf67083445d7c9a8dba92c4c6b4e38f815e73869740fd5e93d38532e70643095",
			"license": "MIT",
			"urls": [
				"bzz-raw://87463555b2292c72ecadfbf124e4a31d0ec6a94f46bdc9c533c4c349eb3a6f29",
				"dweb:/ipfs/Qmer9P7zBuAofTm31TQ9DNy23vxczVmi9BaCVJoDHyPQrG"
			]
		}
	},
	"version": 1
}