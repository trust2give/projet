{
	"id": "4fcdcadf0b49a544c23068c592c0c296",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/facets/ERC721Facet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\r\nimport {IERC721Metadata} from \"../interfaces/IERC721Metadata.sol\";\r\nimport {IERC721Enumerable} from \"../interfaces/IERC721Enumerable.sol\";\r\nimport {LibERC721} from \"../libraries/LibERC721.sol\";\r\nimport {ERC721Errors} from \"../libraries/Errors.sol\";\r\n\r\ncontract ERC721Facet is IERC721Metadata, IERC721Enumerable {\r\n    using Strings for uint;\r\n\r\n    function name() public view returns (string memory) {\r\n        return LibERC721.layout().name;\r\n    }\r\n\r\n    function symbol() public view returns (string memory) {\r\n        return LibERC721.layout().symbol;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return LibERC721.layout().allTokens.length;\r\n    }\r\n\r\n    function tokenOfOwnerByIndex(\r\n        address owner,\r\n        uint256 index\r\n    ) public view virtual returns (uint256) {\r\n        if (index >= balanceOf(owner)) {\r\n            revert ERC721Errors.ERC721OutOfBoundsIndex(owner, index);\r\n        }\r\n        return LibERC721.layout().ownedTokens[owner][index];\r\n    }\r\n\r\n    function tokenByIndex(uint256 index) public view virtual returns (uint256) {\r\n        if (index >= totalSupply()) {\r\n            revert ERC721Errors.ERC721OutOfBoundsIndex(address(0), index);\r\n        }\r\n        return LibERC721.layout().allTokens[index];\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        if (owner == address(0)) revert ERC721Errors.ERC721InvalidOwner(owner);\r\n        return LibERC721.layout().balances[owner];\r\n    }\r\n\r\n    function ownerOf(uint256 tokenId) public view returns (address) {\r\n        return LibERC721._requireOwned(tokenId);\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public {\r\n        safeTransferFrom(from, to, tokenId, \"\");\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) public {\r\n        transferFrom(from, to, tokenId);\r\n        LibERC721.checkOnERC721Received(msg.sender, from, to, tokenId, data);\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) public virtual {\r\n        if (to == address(0))\r\n            revert ERC721Errors.ERC721InvalidReceiver(address(0));\r\n\r\n        address previousOwner = LibERC721._update(to, tokenId, msg.sender);\r\n        if (previousOwner != from)\r\n            revert ERC721Errors.ERC721IncorrectOwner(\r\n                from,\r\n                tokenId,\r\n                previousOwner\r\n            );\r\n    }\r\n\r\n    function approve(address to, uint256 tokenId) public {\r\n        LibERC721._approve(to, tokenId, msg.sender);\r\n    }\r\n\r\n    function setApprovalForAll(address operator, bool approved) public virtual {\r\n        LibERC721._setApprovalForAll(msg.sender, operator, approved);\r\n    }\r\n\r\n    function getApproved(uint256 tokenId) public view returns (address) {\r\n        LibERC721._requireOwned(tokenId);\r\n\r\n        return LibERC721._getApproved(tokenId);\r\n    }\r\n\r\n    function isApprovedForAll(\r\n        address owner,\r\n        address operator\r\n    ) public view returns (bool) {\r\n        return LibERC721.layout().operatorApprovals[owner][operator];\r\n    }\r\n\r\n    function contractURI() public view returns (string memory) {\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    /* solhint-disable */\r\n                    \"data:application/json;base64,\",\r\n                    Base64.encode(\r\n                        abi.encodePacked(\r\n                            '{\"name\":\"',\r\n                            name(),\r\n                            '\",\"description\":\"',\r\n                            _contractDescription(),\r\n                            '\",\"image\":\"',\r\n                            _contractImage(),\r\n                            '\"}'\r\n                        )\r\n                    )\r\n                    /* solhint-enable */\r\n                )\r\n            );\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view returns (string memory) {\r\n        LibERC721._requireOwned(tokenId);\r\n\r\n        string memory baseURI = _baseURI();\r\n        return\r\n            bytes(baseURI).length > 0\r\n                ? string.concat(baseURI, tokenId.toString(), \".json\")\r\n                : \"\";\r\n    }\r\n\r\n    function _baseURI() internal view virtual returns (string memory) {\r\n        return \"ipfs://something/\";\r\n    }\r\n\r\n    function _contractImage() internal pure returns (bytes memory) {\r\n        return \"ipfs://Qmcig9eH8XWEZZuF9ZGQD7gAAHMDj79sT8ud787PgD57uN\";\r\n    }\r\n\r\n    function _contractDescription() internal pure returns (string memory) {\r\n        return\r\n            'This is contract description.'\r\n            \"Depolyed by justwei's ERC721 Diamond implementation.\";\r\n    }\r\n}"
			},
			"contracts/libraries/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.18;\r\n\r\nlibrary ERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev An `owner`'s token query was out of bounds for `index`.\r\n     *\r\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\r\n     */\r\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\r\n\r\n    /**\r\n     * @dev Batch mint is not allowed.\r\n     */\r\n    error ERC721EnumerableForbiddenBatchMint();\r\n}"
			},
			"contracts/libraries/LibERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport {ERC721Errors} from \"./Errors.sol\";\r\nimport {ERC721Events} from \"./Events.sol\";\r\n\r\nlibrary LibERC721 {\r\n    bytes32 internal constant STORAGE_SLOT =\r\n        keccak256(\"diamond.storage.erc721\");\r\n\r\n    struct Layout {\r\n        string name;\r\n        string symbol;\r\n        uint256[] allTokens;\r\n        mapping(uint256 tokenId => address) owners;\r\n        mapping(address owner => uint) balances;\r\n        mapping(uint256 tokenId => address) tokenApprovals;\r\n        mapping(address owner => mapping(address oprator => bool)) operatorApprovals;\r\n        mapping(address owner => mapping(uint256 index => uint256)) ownedTokens;\r\n        mapping(uint256 => uint256) ownedTokensIndex;\r\n        mapping(uint256 tokenId => uint256) allTokensIndex;\r\n        uint256[88] _gaps;\r\n    }\r\n\r\n    function layout() internal pure returns (Layout storage l) {\r\n        bytes32 slot = STORAGE_SLOT;\r\n        assembly {\r\n            l.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view returns (address) {\r\n        return layout().owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view returns (address) {\r\n        return layout().tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(\r\n        address owner,\r\n        address spender,\r\n        uint256 tokenId\r\n    ) internal view returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender ||\r\n                layout().operatorApprovals[owner][spender] ||\r\n                _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(\r\n        address owner,\r\n        address spender,\r\n        uint256 tokenId\r\n    ) internal view {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721Errors.ERC721InsufficientApproval(\r\n                    spender,\r\n                    tokenId\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 amount) internal {\r\n        if (amount > 0) {\r\n            revert ERC721Errors.ERC721EnumerableForbiddenBatchMint();\r\n        }\r\n        unchecked {\r\n            layout().balances[account] += amount;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth\r\n    ) internal returns (address) {\r\n        address previousOwner = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(previousOwner, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (previousOwner != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                layout().balances[previousOwner] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                layout().balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        layout().owners[tokenId] = to;\r\n\r\n        emit ERC721Events.Transfer(previousOwner, to, tokenId);\r\n\r\n        if (previousOwner == address(0)) {\r\n            _addTokenToAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\r\n        }\r\n        if (to == address(0)) {\r\n            _removeTokenFromAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _addTokenToOwnerEnumeration(to, tokenId);\r\n        }\r\n\r\n        return previousOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\r\n     * @param to address representing the new owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\r\n     */\r\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {\r\n        uint256 length = layout().balances[to] - 1;\r\n        layout().ownedTokens[to][length] = tokenId;\r\n        layout().ownedTokensIndex[tokenId] = length;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's token tracking data structures.\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list\r\n     */\r\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {\r\n        layout().allTokensIndex[tokenId] = layout().allTokens.length;\r\n        layout().allTokens.push(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\r\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\r\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\r\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\r\n     */\r\n    function _removeTokenFromOwnerEnumeration(\r\n        address from,\r\n        uint256 tokenId\r\n    ) internal {\r\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = layout().balances[from];\r\n        uint256 tokenIndex = layout().ownedTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary\r\n        if (tokenIndex != lastTokenIndex) {\r\n            uint256 lastTokenId = layout().ownedTokens[from][lastTokenIndex];\r\n\r\n            layout().ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n            layout().ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n        }\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete layout().ownedTokensIndex[tokenId];\r\n        delete layout().ownedTokens[from][lastTokenIndex];\r\n    }\r\n\r\n        /**\r\n     * @dev Private function to remove a token from this extension's token tracking data structures.\r\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\r\n     */\r\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {\r\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = layout().allTokens.length - 1;\r\n        uint256 tokenIndex = layout().allTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\r\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\r\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\r\n        uint256 lastTokenId = layout().allTokens[lastTokenIndex];\r\n\r\n        layout().allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n        layout().allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete layout().allTokensIndex[tokenId];\r\n        layout().allTokens.pop();\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721Errors.ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        _mint(to, tokenId);\r\n        checkOnERC721Received(msg.sender, address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721Errors.ERC721IncorrectOwner(\r\n                from,\r\n                tokenId,\r\n                previousOwner\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        _transfer(from, to, tokenId);\r\n        checkOnERC721Received(msg.sender, from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth,\r\n        bool emitEvent\r\n    ) internal {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (\r\n                auth != address(0) &&\r\n                owner != auth &&\r\n                !layout().operatorApprovals[owner][auth]\r\n            ) {\r\n                revert ERC721Errors.ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit ERC721Events.Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        layout().tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal {\r\n        if (operator == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidOperator(operator);\r\n        }\r\n        layout().operatorApprovals[owner][operator] = approved;\r\n        emit ERC721Events.ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\r\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\r\n     *\r\n     * The acceptance call is not executed and treated as a no-op if the target address is doesn't contain code (i.e. an EOA).\r\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\r\n     * the transfer.\r\n     */\r\n    function checkOnERC721Received(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        if (to.code.length > 0) {\r\n            try\r\n                IERC721Receiver(to).onERC721Received(\r\n                    operator,\r\n                    from,\r\n                    tokenId,\r\n                    data\r\n                )\r\n            returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    // Token rejected\r\n                    revert ERC721Errors.ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    // non-IERC721Receiver implementer\r\n                    revert ERC721Errors.ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/interfaces/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport { IERC721 } from \"./IERC721.sol\";\r\n\r\n/**\r\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\r\n * @dev See https://eips.ethereum.org/EIPS/eip-721\r\n */\r\ninterface IERC721Enumerable is IERC721 {\r\n    /**\r\n     * @dev Returns the total amount of tokens stored by the contract.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\r\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\r\n     */\r\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\r\n     * Use along with {totalSupply} to enumerate all tokens.\r\n     */\r\n    function tokenByIndex(uint256 index) external view returns (uint256);\r\n}"
			},
			"contracts/interfaces/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport { IERC721 } from \"./IERC721.sol\";\r\n\r\ninterface IERC721Metadata is IERC721 {\r\n    /**\r\n     * @dev Returns the token collection name.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the token collection symbol.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\r\n     */\r\n    function tokenURI(uint256 tokenId) external view returns (string memory);\r\n}"
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.2) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // Loads the table into memory\n        string memory table = _TABLE;\n\n        // Encoding takes 3 bytes chunks of binary data from `bytes` data parameter\n        // and split into 4 numbers of 6 bits.\n        // The final Base64 length should be `bytes` data length multiplied by 4/3 rounded up\n        // - `data.length + 2`  -> Round up\n        // - `/ 3`              -> Number of 3-bytes chunks\n        // - `4 *`              -> 4 characters for each chunk\n        string memory result = new string(4 * ((data.length + 2) / 3));\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            // When data `bytes` is not exactly 3 bytes long\n            // it is padded with `=` characters at the end\n            switch mod(mload(data), 3)\n            case 1 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n                mstore8(sub(resultPtr, 2), 0x3d)\n            }\n            case 2 {\n                mstore8(sub(resultPtr, 1), 0x3d)\n            }\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"contracts/libraries/Events.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.18;\r\n\r\nlibrary ERC721Events {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed approved,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(\r\n        address indexed owner,\r\n        address indexed operator,\r\n        bool approved\r\n    );\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.18;\r\n\r\ninterface IERC721 {\r\n    /**\r\n     * @dev Returns the number of tokens in ``owner``'s account.\r\n     */\r\n    function balanceOf(address owner) external view returns (uint256 balance);\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function ownerOf(uint256 tokenId) external view returns (address owner);\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\r\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\r\n     *   {setApprovalForAll}.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\r\n     *   a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` token from `from` to `to`.\r\n     *\r\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\r\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\r\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\r\n     * The approval is cleared when the token is transferred.\r\n     *\r\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The caller must own the token or be an approved operator.\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address to, uint256 tokenId) external;\r\n\r\n    /**\r\n     * @dev Approve or remove `operator` as an operator for the caller.\r\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The `operator` cannot be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns the account approved for `tokenId` token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     */\r\n    function getApproved(\r\n        uint256 tokenId\r\n    ) external view returns (address operator);\r\n\r\n    /**\r\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\r\n     *\r\n     * See {setApprovalForAll}\r\n     */\r\n    function isApprovedForAll(\r\n        address owner,\r\n        address operator\r\n    ) external view returns (bool);\r\n}"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // â†’ `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // â†’ `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"Base64": {
					"abi": [],
					"devdoc": {
						"details": "Provides a set of functions to operate with Base64 strings.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_TABLE": {
								"details": "Base64 Encoding/Decoding Table"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3860  library Base64 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":202:3860  library Base64 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212208f77e47278b63e0775f1d521bbbb1c725d4aeba11c3300785ce4ba5ae6ca167e64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208f77e47278b63e0775f1d521bbbb1c725d4aeba11c3300785ce4ba5ae6ca167e64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH24 0xE47278B63E0775F1D521BBBB1C725D4AEBA11C3300785CE4 0xBA GAS 0xE6 0xCA AND PUSH31 0x64736F6C634300081B00330000000000000000000000000000000000000000 ",
							"sourceMap": "202:3658:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:3658:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212208f77e47278b63e0775f1d521bbbb1c725d4aeba11c3300785ce4ba5ae6ca167e64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH24 0xE47278B63E0775F1D521BBBB1C725D4AEBA11C3300785CE4 0xBA GAS 0xE6 0xCA AND PUSH31 0x64736F6C634300081B00330000000000000000000000000000000000000000 ",
							"sourceMap": "202:3658:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"encode(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 202,
									"end": 3860,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f77e47278b63e0775f1d521bbbb1c725d4aeba11c3300785ce4ba5ae6ca167e64736f6c634300081b0033",
									".code": [
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 3860,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4\",\"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220afc3ae4006eaf508201fafaf78ba751bc2263348b14a02eccab4be58d704fd9364736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220afc3ae4006eaf508201fafaf78ba751bc2263348b14a02eccab4be58d704fd9364736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC3 0xAE BLOCKHASH MOD 0xEA CREATE2 ADDMOD KECCAK256 0x1F 0xAF 0xAF PUSH25 0xBA751BC2263348B14A02ECCAB4BE58D704FD9364736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "251:2847:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220afc3ae4006eaf508201fafaf78ba751bc2263348b14a02eccab4be58d704fd9364736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF 0xC3 0xAE BLOCKHASH MOD 0xEA CREATE2 ADDMOD KECCAK256 0x1F 0xAF 0xAF PUSH25 0xBA751BC2263348B14A02ECCAB4BE58D704FD9364736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "251:2847:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220afc3ae4006eaf508201fafaf78ba751bc2263348b14a02eccab4be58d704fd9364736f6c634300081b0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220445ef083ed71eca4ba31a5586bbda9a1e6c51ab674aaa0356f5633eadc85e32064736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220445ef083ed71eca4ba31a5586bbda9a1e6c51ab674aaa0356f5633eadc85e32064736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO MCOPY CREATE DUP4 0xED PUSH18 0xECA4BA31A5586BBDA9A1E6C51AB674AAA035 PUSH16 0x5633EADC85E32064736F6C634300081B STOP CALLER ",
							"sourceMap": "203:14914:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220445ef083ed71eca4ba31a5586bbda9a1e6c51ab674aaa0356f5633eadc85e32064736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO MCOPY CREATE DUP4 0xED PUSH18 0xECA4BA31A5586BBDA9A1E6C51AB674AAA035 PUSH16 0x5633EADC85E32064736F6C634300081B STOP CALLER ",
							"sourceMap": "203:14914:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220445ef083ed71eca4ba31a5586bbda9a1e6c51ab674aaa0356f5633eadc85e32064736f6c634300081b0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205b3de779f61f0a64c0676307272a2699a4b426975f852aaad0e9377d65330e8c64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b3de779f61f0a64c0676307272a2699a4b426975f852aaad0e9377d65330e8c64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST RETURNDATASIZE 0xE7 PUSH26 0xF61F0A64C0676307272A2699A4B426975F852AAAD0E9377D6533 0xE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "216:1047:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205b3de779f61f0a64c0676307272a2699a4b426975f852aaad0e9377d65330e8c64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST RETURNDATASIZE 0xE7 PUSH26 0xF61F0A64C0676307272A2699A4B426975F852AAAD0E9377D6533 0xE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "216:1047:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b3de779f61f0a64c0676307272a2699a4b426975f852aaad0e9377d65330e8c64736f6c634300081b0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/facets/ERC721Facet.sol": {
				"ERC721Facet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/facets/ERC721Facet.sol\":418:4968  contract ERC721Facet is IERC721Metadata, IERC721Enumerable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/facets/ERC721Facet.sol\":418:4968  contract ERC721Facet is IERC721Metadata, IERC721Enumerable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe8a3d485\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f745c59\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/facets/ERC721Facet.sol\":515:616  function name() public view returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/facets/ERC721Facet.sol\":3027:3197  function getApproved(uint256 tokenId) public view returns (address) {... */\n    tag_4:\n      tag_26\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":932:983   */\n      dup2\n      mstore\n        /* \"#utility.yul\":920:922   */\n      0x20\n        /* \"#utility.yul\":905:923   */\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":3027:3197  function getApproved(uint256 tokenId) public view returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":2742:2857  function approve(address to, uint256 tokenId) public {... */\n    tag_5:\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/facets/ERC721Facet.sol\":737:851  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1623:1648   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1611:1613   */\n      0x20\n        /* \"#utility.yul\":1596:1614   */\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":737:851  function totalSupply() public view returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":1477:1654   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":2247:2734  function transferFrom(... */\n    tag_7:\n      tag_32\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":859:1175  function tokenOfOwnerByIndex(... */\n    tag_8:\n      tag_36\n      tag_45\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1796:1964  function safeTransferFrom(... */\n    tag_9:\n      tag_32\n      tag_49\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1183:1445  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_36\n      tag_52\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1666:1788  function ownerOf(uint256 tokenId) public view returns (address) {... */\n    tag_11:\n      tag_26\n      tag_56\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1453:1658  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_12:\n      tag_36\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":624:729  function symbol() public view returns (string memory) {... */\n    tag_13:\n      tag_22\n      tag_65\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":2865:3019  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_32\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1972:2239  function safeTransferFrom(... */\n    tag_15:\n      tag_32\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":4160:4478  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_16:\n      tag_22\n      tag_76\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":3403:4152  function contractURI() public view returns (string memory) {... */\n    tag_17:\n      tag_22\n      tag_80\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":3205:3395  function isApprovedForAll(... */\n    tag_18:\n      tag_82\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n        /* \"#utility.yul\":4355:4369   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4348:4370   */\n      iszero\n        /* \"#utility.yul\":4330:4371   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4303:4321   */\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":3205:3395  function isApprovedForAll(... */\n      tag_24\n        /* \"#utility.yul\":4190:4377   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":515:616  function name() public view returns (string memory) {... */\n    tag_23:\n        /* \"contracts/facets/ERC721Facet.sol\":552:565  string memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":585:603  LibERC721.layout() */\n      tag_89\n        /* \"contracts/facets/ERC721Facet.sol\":585:601  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":585:603  LibERC721.layout() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/facets/ERC721Facet.sol\":578:608  return LibERC721.layout().name */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      dup1\n      iszero\n      tag_94\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_95\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_94)\n    tag_95:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_96:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_96\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":515:616  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":3027:3197  function getApproved(uint256 tokenId) public view returns (address) {... */\n    tag_29:\n        /* \"contracts/facets/ERC721Facet.sol\":3086:3093  address */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":3106:3138  LibERC721._requireOwned(tokenId) */\n      tag_98\n        /* \"contracts/facets/ERC721Facet.sol\":3130:3137  tokenId */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":3106:3129  LibERC721._requireOwned */\n      tag_99\n        /* \"contracts/facets/ERC721Facet.sol\":3106:3138  LibERC721._requireOwned(tokenId) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":3158:3189  LibERC721._getApproved(tokenId) */\n      tag_100\n        /* \"contracts/facets/ERC721Facet.sol\":3181:3188  tokenId */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":3158:3180  LibERC721._getApproved */\n      tag_101\n        /* \"contracts/facets/ERC721Facet.sol\":3158:3189  LibERC721._getApproved(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/facets/ERC721Facet.sol\":3151:3189  return LibERC721._getApproved(tokenId) */\n      swap3\n        /* \"contracts/facets/ERC721Facet.sol\":3027:3197  function getApproved(uint256 tokenId) public view returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":2742:2857  function approve(address to, uint256 tokenId) public {... */\n    tag_35:\n        /* \"contracts/facets/ERC721Facet.sol\":2806:2849  LibERC721._approve(to, tokenId, msg.sender) */\n      tag_103\n        /* \"contracts/facets/ERC721Facet.sol\":2825:2827  to */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":2829:2836  tokenId */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":2838:2848  msg.sender */\n      caller\n        /* \"contracts/facets/ERC721Facet.sol\":2806:2824  LibERC721._approve */\n      tag_104\n        /* \"contracts/facets/ERC721Facet.sol\":2806:2849  LibERC721._approve(to, tokenId, msg.sender) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/facets/ERC721Facet.sol\":2742:2857  function approve(address to, uint256 tokenId) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":737:851  function totalSupply() public view returns (uint256) {... */\n    tag_37:\n        /* \"contracts/facets/ERC721Facet.sol\":781:788  uint256 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":808:826  LibERC721.layout() */\n      tag_106\n        /* \"contracts/facets/ERC721Facet.sol\":808:824  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":808:826  LibERC721.layout() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/facets/ERC721Facet.sol\":808:836  LibERC721.layout().allTokens */\n      0x02\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":808:843  LibERC721.layout().allTokens.length */\n      sload\n      swap2\n        /* \"contracts/facets/ERC721Facet.sol\":737:851  function totalSupply() public view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":2247:2734  function transferFrom(... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":2376:2392  to == address(0) */\n      dup3\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":2372:2460  if (to == address(0))... */\n      tag_108\n      jumpi\n        /* \"contracts/facets/ERC721Facet.sol\":2414:2460  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":2457:2458  0 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":2414:2460  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":2414:2460  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/facets/ERC721Facet.sol\":2372:2460  if (to == address(0))... */\n    tag_108:\n        /* \"contracts/facets/ERC721Facet.sol\":2473:2494  address previousOwner */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":2497:2539  LibERC721._update(to, tokenId, msg.sender) */\n      tag_110\n        /* \"contracts/facets/ERC721Facet.sol\":2515:2517  to */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":2519:2526  tokenId */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":2528:2538  msg.sender */\n      caller\n        /* \"contracts/facets/ERC721Facet.sol\":2497:2514  LibERC721._update */\n      tag_111\n        /* \"contracts/facets/ERC721Facet.sol\":2497:2539  LibERC721._update(to, tokenId, msg.sender) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/facets/ERC721Facet.sol\":2473:2539  address previousOwner = LibERC721._update(to, tokenId, msg.sender) */\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":2571:2575  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":2554:2575  previousOwner != from */\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":2554:2567  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":2554:2575  previousOwner != from */\n      and\n      eq\n        /* \"contracts/facets/ERC721Facet.sol\":2550:2726  if (previousOwner != from)... */\n      tag_112\n      jumpi\n        /* \"contracts/facets/ERC721Facet.sol\":2597:2726  ERC721Errors.ERC721IncorrectOwner(... */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4987:5019   */\n      dup1\n      dup7\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":2597:2726  ERC721Errors.ERC721IncorrectOwner(... */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4969:5020   */\n      mstore\n        /* \"#utility.yul\":5036:5054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5029:5063   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":5099:5131   */\n      dup3\n      and\n        /* \"#utility.yul\":5079:5097   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5072:5132   */\n      mstore\n        /* \"#utility.yul\":4942:4960   */\n      0x64\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":2597:2726  ERC721Errors.ERC721IncorrectOwner(... */\n      tag_109\n        /* \"#utility.yul\":4767:5138   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":2550:2726  if (previousOwner != from)... */\n    tag_112:\n        /* \"contracts/facets/ERC721Facet.sol\":2361:2734  {... */\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":2247:2734  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":859:1175  function tokenOfOwnerByIndex(... */\n    tag_46:\n        /* \"contracts/facets/ERC721Facet.sol\":972:979  uint256 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":1005:1021  balanceOf(owner) */\n      tag_116\n        /* \"contracts/facets/ERC721Facet.sol\":1015:1020  owner */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":1005:1014  balanceOf */\n      tag_62\n        /* \"contracts/facets/ERC721Facet.sol\":1005:1021  balanceOf(owner) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/facets/ERC721Facet.sol\":996:1001  index */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":996:1021  index >= balanceOf(owner) */\n      lt\n        /* \"contracts/facets/ERC721Facet.sol\":992:1106  if (index >= balanceOf(owner)) {... */\n      tag_117\n      jumpi\n        /* \"contracts/facets/ERC721Facet.sol\":1045:1094  ERC721Errors.ERC721OutOfBoundsIndex(owner, index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5335:5367   */\n      dup5\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":1045:1094  ERC721Errors.ERC721OutOfBoundsIndex(owner, index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5317:5368   */\n      mstore\n        /* \"#utility.yul\":5384:5402   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5377:5411   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5290:5308   */\n      0x44\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1045:1094  ERC721Errors.ERC721OutOfBoundsIndex(owner, index) */\n      tag_109\n        /* \"#utility.yul\":5143:5417   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":992:1106  if (index >= balanceOf(owner)) {... */\n    tag_117:\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1141  LibERC721.layout() */\n      tag_120\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1139  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1141  LibERC721.layout() */\n      jump\t// in\n    tag_120:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1160  LibERC721.layout().ownedTokens[owner] */\n      swap4\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1153  LibERC721.layout().ownedTokens */\n      0x07\n      swap1\n      swap4\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1160  LibERC721.layout().ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/facets/ERC721Facet.sol\":1123:1167  LibERC721.layout().ownedTokens[owner][index] */\n      swap4\n      dup6\n      mstore\n      swap3\n      swap1\n      mstore\n      pop\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/facets/ERC721Facet.sol\":859:1175  function tokenOfOwnerByIndex(... */\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":1796:1964  function safeTransferFrom(... */\n    tag_50:\n        /* \"contracts/facets/ERC721Facet.sol\":1917:1956  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_122\n        /* \"contracts/facets/ERC721Facet.sol\":1934:1938  from */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":1940:1942  to */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":1944:1951  tokenId */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":1917:1956  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":1917:1933  safeTransferFrom */\n      tag_74\n        /* \"contracts/facets/ERC721Facet.sol\":1917:1956  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_122:\n        /* \"contracts/facets/ERC721Facet.sol\":1796:1964  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":1183:1445  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"contracts/facets/ERC721Facet.sol\":1249:1256  uint256 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":1282:1295  totalSupply() */\n      tag_124\n        /* \"contracts/facets/ERC721Facet.sol\":1282:1293  totalSupply */\n      tag_37\n        /* \"contracts/facets/ERC721Facet.sol\":1282:1295  totalSupply() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/facets/ERC721Facet.sol\":1273:1278  index */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":1273:1295  index >= totalSupply() */\n      lt\n        /* \"contracts/facets/ERC721Facet.sol\":1269:1385  if (index >= totalSupply()) {... */\n      tag_125\n      jumpi\n        /* \"contracts/facets/ERC721Facet.sol\":1319:1373  ERC721Errors.ERC721OutOfBoundsIndex(address(0), index) */\n      mload(0x40)\n      shl(0xe2, 0x295f44f7)\n      dup2\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":1363:1364  0 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":1319:1373  ERC721Errors.ERC721OutOfBoundsIndex(address(0), index) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5317:5368   */\n      mstore\n        /* \"#utility.yul\":5384:5402   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5377:5411   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5290:5308   */\n      0x44\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1319:1373  ERC721Errors.ERC721OutOfBoundsIndex(address(0), index) */\n      tag_109\n        /* \"#utility.yul\":5143:5417   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":1269:1385  if (index >= totalSupply()) {... */\n    tag_125:\n        /* \"contracts/facets/ERC721Facet.sol\":1402:1420  LibERC721.layout() */\n      tag_127\n        /* \"contracts/facets/ERC721Facet.sol\":1402:1418  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":1402:1420  LibERC721.layout() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/facets/ERC721Facet.sol\":1402:1430  LibERC721.layout().allTokens */\n      0x02\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1431:1436  index */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":1402:1437  LibERC721.layout().allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_129\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/facets/ERC721Facet.sol\":1395:1437  return LibERC721.layout().allTokens[index] */\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":1183:1445  function tokenByIndex(uint256 index) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":1666:1788  function ownerOf(uint256 tokenId) public view returns (address) {... */\n    tag_57:\n        /* \"contracts/facets/ERC721Facet.sol\":1721:1728  address */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":1748:1780  LibERC721._requireOwned(tokenId) */\n      tag_100\n        /* \"contracts/facets/ERC721Facet.sol\":1772:1779  tokenId */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":1748:1771  LibERC721._requireOwned */\n      tag_99\n        /* \"contracts/facets/ERC721Facet.sol\":1748:1780  LibERC721._requireOwned(tokenId) */\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1453:1658  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_62:\n        /* \"contracts/facets/ERC721Facet.sol\":1508:1515  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":1532:1551  owner == address(0) */\n      dup3\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":1528:1598  if (owner == address(0)) revert ERC721Errors.ERC721InvalidOwner(owner) */\n      tag_135\n      jumpi\n        /* \"contracts/facets/ERC721Facet.sol\":1560:1598  ERC721Errors.ERC721InvalidOwner(owner) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      dup4\n      and\n        /* \"contracts/facets/ERC721Facet.sol\":1560:1598  ERC721Errors.ERC721InvalidOwner(owner) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1560:1598  ERC721Errors.ERC721InvalidOwner(owner) */\n      tag_109\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":1528:1598  if (owner == address(0)) revert ERC721Errors.ERC721InvalidOwner(owner) */\n    tag_135:\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1634  LibERC721.layout() */\n      tag_137\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1632  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1634  LibERC721.layout() */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1650  LibERC721.layout().balances[owner] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1643  LibERC721.layout().balances */\n      0x04\n      swap3\n      swap1\n      swap3\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":1616:1650  LibERC721.layout().balances[owner] */\n      0x20\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/facets/ERC721Facet.sol\":1453:1658  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":624:729  function symbol() public view returns (string memory) {... */\n    tag_65:\n        /* \"contracts/facets/ERC721Facet.sol\":663:676  string memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":696:714  LibERC721.layout() */\n      tag_139\n        /* \"contracts/facets/ERC721Facet.sol\":696:712  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":696:714  LibERC721.layout() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/facets/ERC721Facet.sol\":696:721  LibERC721.layout().symbol */\n      0x01\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":689:721  return LibERC721.layout().symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":2865:3019  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_70:\n        /* \"contracts/facets/ERC721Facet.sol\":2951:3011  LibERC721._setApprovalForAll(msg.sender, operator, approved) */\n      tag_103\n        /* \"contracts/facets/ERC721Facet.sol\":2980:2990  msg.sender */\n      caller\n        /* \"contracts/facets/ERC721Facet.sol\":2992:3000  operator */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":3002:3010  approved */\n      dup4\n        /* \"contracts/facets/ERC721Facet.sol\":2951:2979  LibERC721._setApprovalForAll */\n      tag_147\n        /* \"contracts/facets/ERC721Facet.sol\":2951:3011  LibERC721._setApprovalForAll(msg.sender, operator, approved) */\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":1972:2239  function safeTransferFrom(... */\n    tag_74:\n        /* \"contracts/facets/ERC721Facet.sol\":2121:2152  transferFrom(from, to, tokenId) */\n      tag_149\n        /* \"contracts/facets/ERC721Facet.sol\":2134:2138  from */\n      dup5\n        /* \"contracts/facets/ERC721Facet.sol\":2140:2142  to */\n      dup5\n        /* \"contracts/facets/ERC721Facet.sol\":2144:2151  tokenId */\n      dup5\n        /* \"contracts/facets/ERC721Facet.sol\":2121:2133  transferFrom */\n      tag_43\n        /* \"contracts/facets/ERC721Facet.sol\":2121:2152  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_149:\n        /* \"contracts/facets/ERC721Facet.sol\":2163:2231  LibERC721.checkOnERC721Received(msg.sender, from, to, tokenId, data) */\n      tag_112\n        /* \"contracts/facets/ERC721Facet.sol\":2195:2205  msg.sender */\n      caller\n        /* \"contracts/facets/ERC721Facet.sol\":2207:2211  from */\n      dup6\n        /* \"contracts/facets/ERC721Facet.sol\":2213:2215  to */\n      dup6\n        /* \"contracts/facets/ERC721Facet.sol\":2217:2224  tokenId */\n      dup6\n        /* \"contracts/facets/ERC721Facet.sol\":2226:2230  data */\n      dup6\n        /* \"contracts/facets/ERC721Facet.sol\":2163:2194  LibERC721.checkOnERC721Received */\n      tag_151\n        /* \"contracts/facets/ERC721Facet.sol\":2163:2231  LibERC721.checkOnERC721Received(msg.sender, from, to, tokenId, data) */\n      jump\t// in\n        /* \"contracts/facets/ERC721Facet.sol\":4160:4478  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n    tag_77:\n        /* \"contracts/facets/ERC721Facet.sol\":4216:4229  string memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":4242:4274  LibERC721._requireOwned(tokenId) */\n      tag_153\n        /* \"contracts/facets/ERC721Facet.sol\":4266:4273  tokenId */\n      dup3\n        /* \"contracts/facets/ERC721Facet.sol\":4242:4265  LibERC721._requireOwned */\n      tag_99\n        /* \"contracts/facets/ERC721Facet.sol\":4242:4274  LibERC721._requireOwned(tokenId) */\n      jump\t// in\n    tag_153:\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":4287:4308  string memory baseURI */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":4311:4321  _baseURI() */\n      tag_154\n        /* \"contracts/facets/ERC721Facet.sol\":4563:4589  return \"ipfs://something/\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x11\n      dup2\n      mstore\n      shl(0x78, 0x697066733a2f2f736f6d657468696e672f)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/facets/ERC721Facet.sol\":4486:4597  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"contracts/facets/ERC721Facet.sol\":4311:4321  _baseURI() */\n    tag_154:\n        /* \"contracts/facets/ERC721Facet.sol\":4287:4321  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":4376:4377  0 */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":4358:4365  baseURI */\n      dup2\n        /* \"contracts/facets/ERC721Facet.sol\":4352:4373  bytes(baseURI).length */\n      mload\n        /* \"contracts/facets/ERC721Facet.sol\":4352:4377  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/facets/ERC721Facet.sol\":4352:4470  bytes(baseURI).length > 0... */\n      tag_156\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_157)\n    tag_156:\n        /* \"contracts/facets/ERC721Facet.sol\":4411:4418  baseURI */\n      dup1\n        /* \"contracts/facets/ERC721Facet.sol\":4420:4438  tokenId.toString() */\n      tag_158\n        /* \"contracts/facets/ERC721Facet.sol\":4420:4427  tokenId */\n      dup5\n        /* \"contracts/facets/ERC721Facet.sol\":4420:4436  tokenId.toString */\n      tag_159\n        /* \"contracts/facets/ERC721Facet.sol\":4420:4438  tokenId.toString() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/facets/ERC721Facet.sol\":4397:4448  string.concat(baseURI, tokenId.toString(), \".json\") */\n      add(0x20, mload(0x40))\n      tag_160\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":4352:4470  bytes(baseURI).length > 0... */\n    tag_157:\n        /* \"contracts/facets/ERC721Facet.sol\":4332:4470  return... */\n      swap4\n        /* \"contracts/facets/ERC721Facet.sol\":4160:4478  function tokenURI(uint256 tokenId) public view returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":3403:4152  function contractURI() public view returns (string memory) {... */\n    tag_80:\n        /* \"contracts/facets/ERC721Facet.sol\":3447:3460  string memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":3654:4068  Base64.encode(... */\n      tag_163\n        /* \"contracts/facets/ERC721Facet.sol\":3783:3789  name() */\n      tag_164\n        /* \"contracts/facets/ERC721Facet.sol\":3783:3787  name */\n      tag_23\n        /* \"contracts/facets/ERC721Facet.sol\":3783:3789  name() */\n      jump\t// in\n    tag_164:\n        /* \"contracts/facets/ERC721Facet.sol\":3870:3892  _contractDescription() */\n      tag_165\n        /* \"contracts/facets/ERC721Facet.sol\":3870:3890  _contractDescription */\n      tag_166\n        /* \"contracts/facets/ERC721Facet.sol\":3870:3892  _contractDescription() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/facets/ERC721Facet.sol\":3967:3983  _contractImage() */\n      tag_167\n        /* \"contracts/facets/ERC721Facet.sol\":3967:3981  _contractImage */\n      tag_168\n        /* \"contracts/facets/ERC721Facet.sol\":3967:3983  _contractImage() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/facets/ERC721Facet.sol\":3694:4045  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":3654:3667  Base64.encode */\n      tag_171\n        /* \"contracts/facets/ERC721Facet.sol\":3654:4068  Base64.encode(... */\n      jump\t// in\n    tag_163:\n        /* \"contracts/facets/ERC721Facet.sol\":3518:4129  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_172\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":3473:4144  return... */\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":3403:4152  function contractURI() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":3205:3395  function isApprovedForAll(... */\n    tag_85:\n        /* \"contracts/facets/ERC721Facet.sol\":3310:3314  bool */\n      0x00\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3352  LibERC721.layout() */\n      tag_175\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3350  LibERC721.layout */\n      tag_90\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3352  LibERC721.layout() */\n      jump\t// in\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3377  LibERC721.layout().operatorApprovals[owner] */\n      swap4\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3370  LibERC721.layout().operatorApprovals */\n      0x06\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3377  LibERC721.layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/facets/ERC721Facet.sol\":3334:3387  LibERC721.layout().operatorApprovals[owner][operator] */\n      swap5\n      swap1\n      swap6\n      and\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      mstore\n      pop\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/facets/ERC721Facet.sol\":3205:3395  function isApprovedForAll(... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":923:1087  function layout() internal pure returns (Layout storage l) {... */\n    tag_90:\n        /* \"contracts/libraries/LibERC721.sol\":296:331  keccak256(\"diamond.storage.erc721\") */\n      0xf2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":923:1087  function layout() internal pure returns (Layout storage l) {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":17646:17906  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_99:\n        /* \"contracts/libraries/LibERC721.sol\":17709:17716  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":17729:17742  address owner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":17745:17762  _ownerOf(tokenId) */\n      tag_178\n        /* \"contracts/libraries/LibERC721.sol\":17754:17761  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":17745:17753  _ownerOf */\n      tag_179\n        /* \"contracts/libraries/LibERC721.sol\":17745:17762  _ownerOf(tokenId) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/libraries/LibERC721.sol\":17729:17762  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":17777:17796  owner == address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/LibERC721.sol\":17773:17876  if (owner == address(0)) {... */\n      tag_100\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":17820:17864  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1623:1648   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1596:1614   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":17820:17864  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      tag_109\n        /* \"#utility.yul\":1477:1654   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":1850:1979  function _getApproved(uint256 tokenId) internal view returns (address) {... */\n    tag_101:\n        /* \"contracts/libraries/LibERC721.sol\":1912:1919  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":1939:1947  layout() */\n      tag_183\n        /* \"contracts/libraries/LibERC721.sol\":1939:1945  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":1939:1947  layout() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/libraries/LibERC721.sol\":1939:1971  layout().tokenApprovals[tokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":1939:1962  layout().tokenApprovals */\n      0x05\n      add\n        /* \"contracts/libraries/LibERC721.sol\":1939:1971  layout().tokenApprovals[tokenId] */\n      0x20\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":1850:1979  function _getApproved(uint256 tokenId) internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":15673:15795  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_104:\n        /* \"contracts/libraries/LibERC721.sol\":15754:15787  _approve(to, tokenId, auth, true) */\n      tag_122\n        /* \"contracts/libraries/LibERC721.sol\":15763:15765  to */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":15767:15774  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":15776:15780  auth */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":15782:15786  true */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":15754:15762  _approve */\n      tag_186\n        /* \"contracts/libraries/LibERC721.sol\":15754:15787  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"contracts/libraries/LibERC721.sol\":5106:6475  function _update(... */\n    tag_111:\n        /* \"contracts/libraries/LibERC721.sol\":5218:5225  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5238:5259  address previousOwner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5262:5279  _ownerOf(tokenId) */\n      tag_188\n        /* \"contracts/libraries/LibERC721.sol\":5271:5278  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5262:5270  _ownerOf */\n      tag_179\n        /* \"contracts/libraries/LibERC721.sol\":5262:5279  _ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/libraries/LibERC721.sol\":5238:5279  address previousOwner = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5342:5360  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5338:5435  if (auth != address(0)) {... */\n      tag_190\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5377:5423  _checkAuthorized(previousOwner, auth, tokenId) */\n      tag_190\n        /* \"contracts/libraries/LibERC721.sol\":5394:5407  previousOwner */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":5409:5413  auth */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5415:5422  tokenId */\n      dup7\n        /* \"contracts/libraries/LibERC721.sol\":5377:5393  _checkAuthorized */\n      tag_191\n        /* \"contracts/libraries/LibERC721.sol\":5377:5423  _checkAuthorized(previousOwner, auth, tokenId) */\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5482:5509  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5478:5767  if (previousOwner != address(0)) {... */\n      tag_192\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5609:5657  _approve(address(0), tokenId, address(0), false) */\n      tag_193\n        /* \"contracts/libraries/LibERC721.sol\":5626:5627  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5630:5637  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":5647:5648  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5651:5656  false */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5609:5617  _approve */\n      tag_186\n        /* \"contracts/libraries/LibERC721.sol\":5609:5657  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/libraries/LibERC721.sol\":5739:5740  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":5703:5711  layout() */\n      tag_194\n        /* \"contracts/libraries/LibERC721.sol\":5703:5709  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":5703:5711  layout() */\n      jump\t// in\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5703:5735  layout().balances[previousOwner] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5703:5720  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5703:5735  layout().balances[previousOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5703:5740  layout().balances[previousOwner] -= 1 */\n      dup1\n      sload\n      swap2\n      swap1\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5478:5767  if (previousOwner != address(0)) {... */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5783:5799  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5779:5898  if (to != address(0)) {... */\n      tag_195\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5870:5871  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":5845:5853  layout() */\n      tag_196\n        /* \"contracts/libraries/LibERC721.sol\":5845:5851  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":5845:5853  layout() */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5845:5866  layout().balances[to] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5845:5862  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5845:5866  layout().balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5845:5871  layout().balances[to] += 1 */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5779:5898  if (to != address(0)) {... */\n    tag_195:\n        /* \"contracts/libraries/LibERC721.sol\":5937:5939  to */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5910:5918  layout() */\n      tag_197\n        /* \"contracts/libraries/LibERC721.sol\":5910:5916  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":5910:5918  layout() */\n      jump\t// in\n    tag_197:\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5910:5925  layout().owners */\n      0x03\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5910:5939  layout().owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      mload\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      dup7\n      swap3\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      dup9\n      dup2\n      and\n      swap3\n      swap1\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6023:6050  previousOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6019:6233  if (previousOwner == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6067:6107  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_199\n        /* \"contracts/libraries/LibERC721.sol\":6099:6106  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":6067:6098  _addTokenToAllTokensEnumeration */\n      tag_200\n        /* \"contracts/libraries/LibERC721.sol\":6067:6107  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/libraries/LibERC721.sol\":6019:6233  if (previousOwner == address(0)) {... */\n      jump(tag_203)\n    tag_198:\n        /* \"contracts/libraries/LibERC721.sol\":6146:6148  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6129:6148  previousOwner != to */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6129:6142  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6129:6148  previousOwner != to */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":6125:6233  if (previousOwner != to) {... */\n      tag_203\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6165:6221  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_203\n        /* \"contracts/libraries/LibERC721.sol\":6198:6211  previousOwner */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":6213:6220  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6165:6197  _removeTokenFromOwnerEnumeration */\n      tag_204\n        /* \"contracts/libraries/LibERC721.sol\":6165:6221  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6247:6263  to == address(0) */\n      dup6\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6243:6435  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6280:6325  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_206\n        /* \"contracts/libraries/LibERC721.sol\":6317:6324  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":6280:6316  _removeTokenFromAllTokensEnumeration */\n      tag_207\n        /* \"contracts/libraries/LibERC721.sol\":6280:6325  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/libraries/LibERC721.sol\":6243:6435  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_205:\n        /* \"contracts/libraries/LibERC721.sol\":6364:6366  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6347:6366  previousOwner != to */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6347:6360  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6347:6366  previousOwner != to */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":6343:6435  if (previousOwner != to) {... */\n      tag_210\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6383:6423  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_210\n        /* \"contracts/libraries/LibERC721.sol\":6411:6413  to */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6415:6422  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6383:6410  _addTokenToOwnerEnumeration */\n      tag_211\n        /* \"contracts/libraries/LibERC721.sol\":6383:6423  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/libraries/LibERC721.sol\":6454:6467  previousOwner */\n      swap5\n        /* \"contracts/libraries/LibERC721.sol\":5106:6475  function _update(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":17025:17403  function _setApprovalForAll(... */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":17159:17181  operator == address(0) */\n      dup3\n      and\n        /* \"contracts/libraries/LibERC721.sol\":17155:17261  if (operator == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":17205:17249  ERC721Errors.ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      dup4\n      and\n        /* \"contracts/libraries/LibERC721.sol\":17205:17249  ERC721Errors.ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":17205:17249  ERC721Errors.ERC721InvalidOperator(operator) */\n      tag_109\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":17155:17261  if (operator == address(0)) {... */\n    tag_213:\n        /* \"contracts/libraries/LibERC721.sol\":17317:17325  approved */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":17271:17279  layout() */\n      tag_215\n        /* \"contracts/libraries/LibERC721.sol\":17271:17277  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":17271:17279  layout() */\n      jump\t// in\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":17271:17304  layout().operatorApprovals[owner] */\n      dup6\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":17271:17297  layout().operatorApprovals */\n      0x06\n      swap4\n      swap1\n      swap4\n      add\n        /* \"contracts/libraries/LibERC721.sol\":17271:17304  layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":17271:17314  layout().operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup1\n      dup7\n      mstore\n      swap4\n      dup3\n      mstore\n      swap4\n      dup5\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":17271:17325  layout().operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap6\n      iszero\n      iszero\n      swap6\n      swap1\n      swap6\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":17341:17395  ERC721Events.ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":4355:4369   */\n      dup5\n      iszero\n        /* \"#utility.yul\":4348:4370   */\n      iszero\n        /* \"#utility.yul\":4330:4371   */\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":17271:17314  layout().operatorApprovals[owner][operator] */\n      swap1\n      swap3\n        /* \"contracts/libraries/LibERC721.sol\":17341:17395  ERC721Events.ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":4303:4321   */\n      add\n        /* \"contracts/libraries/LibERC721.sol\":17341:17395  ERC721Events.ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/libraries/LibERC721.sol\":17025:17403  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":18453:19572  function checkOnERC721Received(... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":18640:18654  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"contracts/libraries/LibERC721.sol\":18640:18658  to.code.length > 0 */\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":18636:19565  if (to.code.length > 0) {... */\n      tag_233\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":18696:18866  IERC721Receiver(to).onERC721Received(... */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":18696:18732  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18696:18866  IERC721Receiver(to).onERC721Received(... */\n      tag_219\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18755:18763  operator */\n      dup9\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18786:18790  from */\n      dup9\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18813:18820  tokenId */\n      dup8\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18843:18847  data */\n      dup8\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":18696:18866  IERC721Receiver(to).onERC721Received(... */\n      0x04\n      add\n      tag_220\n      jump\t// in\n    tag_219:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_221\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_222\n      swap2\n      dup2\n      add\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x01\n    tag_221:\n        /* \"contracts/libraries/LibERC721.sol\":18675:19554  try... */\n      tag_224\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_229\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_228)\n    tag_229:\n      0x60\n      swap2\n      pop\n    tag_228:\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":19174:19180  reason */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":19174:19187  reason.length */\n      mload\n        /* \"contracts/libraries/LibERC721.sol\":19191:19192  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":19174:19192  reason.length == 0 */\n      sub\n        /* \"contracts/libraries/LibERC721.sol\":19170:19539  if (reason.length == 0) {... */\n      tag_230\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":19280:19318  ERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      dup6\n      and\n        /* \"contracts/libraries/LibERC721.sol\":19280:19318  ERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":19280:19318  ERC721Errors.ERC721InvalidReceiver(to) */\n      tag_109\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":19170:19539  if (reason.length == 0) {... */\n    tag_230:\n        /* \"contracts/libraries/LibERC721.sol\":19489:19495  reason */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":19483:19496  mload(reason) */\n      mload\n        /* \"contracts/libraries/LibERC721.sol\":19474:19480  reason */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":19470:19472  32 */\n      0x20\n        /* \"contracts/libraries/LibERC721.sol\":19466:19481  add(32, reason) */\n      add\n        /* \"contracts/libraries/LibERC721.sol\":19459:19497  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/libraries/LibERC721.sol\":18675:19554  try... */\n    tag_224:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/libraries/LibERC721.sol\":18927:18978  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":18923:19107  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_234\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":19049:19087  ERC721Errors.ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      dup6\n      and\n        /* \"contracts/libraries/LibERC721.sol\":19049:19087  ERC721Errors.ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":19049:19087  ERC721Errors.ERC721InvalidReceiver(to) */\n      tag_109\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":18923:19107  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_234:\n        /* \"contracts/libraries/LibERC721.sol\":18880:19122  returns (bytes4 retval) {... */\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":18675:19554  try... */\n    tag_233:\n        /* \"contracts/libraries/LibERC721.sol\":18453:19572  function checkOnERC721Received(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_238\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_239\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_241\n      jumpi\n      tag_241\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_243:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_244:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_244\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":4757:4965  function _contractDescription() internal pure returns (string memory) {... */\n    tag_166:\n        /* \"contracts/facets/ERC721Facet.sol\":4812:4825  string memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":4838:4957  return... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x51\n      dup2\n      mstore\n      0x20\n      add\n      data_181e845e6c0eb8c054a077e1938a77f4971788cb2d26cf8484daf453967e5fbd\n      0x51\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":4757:4965  function _contractDescription() internal pure returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/facets/ERC721Facet.sol\":4605:4749  function _contractImage() internal pure returns (bytes memory) {... */\n    tag_168:\n        /* \"contracts/facets/ERC721Facet.sol\":4654:4666  bytes memory */\n      0x60\n        /* \"contracts/facets/ERC721Facet.sol\":4679:4741  return \"ipfs://Qmcig9eH8XWEZZuF9ZGQD7gAAHMDj79sT8ud787PgD57uN\" */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x35\n      dup2\n      mstore\n      0x20\n      add\n      data_585614bb91ad8ba7a82ca696a2a8c1013b91b1a829f17f122d730fe2aca1b7b6\n      0x35\n      swap2\n      codecopy\n      swap1\n      pop\n        /* \"contracts/facets/ERC721Facet.sol\":4605:4749  function _contractImage() internal pure returns (bytes memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3858  function encode(bytes memory data) internal pure returns (string memory) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":534:547  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:770  data */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:777  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":781:782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":766:782  data.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n      tag_253\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":784:793  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3858  function encode(bytes memory data) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":762:793  if (data.length == 0) return \"\" */\n    tag_253:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:862  string memory table */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":865:871  _TABLE */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x40\n      dup2\n      mstore\n      0x20\n      add\n      data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce\n      0x40\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":843:871  string memory table = _TABLE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1294  string memory result */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1333:1334  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1318  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1325  data.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1328:1329  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1314:1329  data.length + 2 */\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1313:1334  (data.length + 2) / 3 */\n      tag_256\n      swap2\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_258\n      swap1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1309  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1308:1335  4 * ((data.length + 2) / 3) */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1297:1336  new string(4 * ((data.length + 2) / 3)) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_261\n      jumpi\n      tag_261\n      tag_242\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_262\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_262:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1274:1336  string memory result = new string(4 * ((data.length + 2) / 3)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1511:1512  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1504:1509  table */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1500:1513  add(table, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1612:1616  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1604:1610  result */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1600:1617  add(result, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1645:1649  data */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1692:1696  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1686:1697  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1680:1684  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1676:1698  add(data, mload(data)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1940:1944  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1932:1938  endPtr */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1928:1945  add(endPtr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1982:1990  afterPtr */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":1976:1991  mload(afterPtr) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2021:2025  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2011:2019  afterPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2004:2026  mstore(afterPtr, 0x00) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2093:3352  for {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2126:2132  endPtr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2117:2124  dataPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2114:2133  lt(dataPtr, endPtr) */\n      lt\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2093:3352  for {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2228:2229  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2219:2226  dataPtr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2215:2230  add(dataPtr, 3) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2204:2230  dataPtr := add(dataPtr, 3) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2266:2273  dataPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2260:2274  mload(dataPtr) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2853:2857  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2845:2850  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2841:2843  18 */\n      0x12\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2837:2851  shr(18, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2833:2858  and(shr(18, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2823:2831  tablePtr */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2819:2859  add(tablePtr, and(shr(18, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2813:2860  mload(add(tablePtr, and(shr(18, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2802:2811  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2794:2861  mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2906:2907  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2895:2904  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2891:2908  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2878:2908  resultPtr := add(resultPtr, 1) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2996:3000  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2988:2993  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2984:2986  12 */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2980:2994  shr(12, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2976:3001  and(shr(12, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2966:2974  tablePtr */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2962:3002  add(tablePtr, and(shr(12, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2956:3003  mload(add(tablePtr, and(shr(12, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2945:2954  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2937:3004  mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3049:3050  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3038:3047  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3034:3051  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3021:3051  resultPtr := add(resultPtr, 1) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3138:3142  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3130:3135  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3127:3128  6 */\n      0x06\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3123:3136  shr(6, input) */\n      shr\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3119:3143  and(shr(6, input), 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3109:3117  tablePtr */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3105:3144  add(tablePtr, and(shr(6, input), 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3099:3145  mload(add(tablePtr, and(shr(6, input), 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3088:3097  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3080:3146  mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F)))) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3191:3192  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3180:3189  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3176:3193  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3163:3193  resultPtr := add(resultPtr, 1) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3272:3276  0x3F */\n      0x3f\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3265:3270  input */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3261:3277  and(input, 0x3F) */\n      and\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3251:3259  tablePtr */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3247:3278  add(tablePtr, and(input, 0x3F)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3241:3279  mload(add(tablePtr, and(input, 0x3F))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3230:3239  resultPtr */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3222:3280  mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F)))) */\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3325:3326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3314:3323  resultPtr */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3310:3327  add(resultPtr, 1) */\n      add\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3297:3327  resultPtr := add(resultPtr, 1) */\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":2093:3352  for {... */\n      jump(tag_263)\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3413:3441  mstore(afterPtr, afterCache) */\n      swap1\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3586:3597  mload(data) */\n      dup6\n      mload\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3599:3600  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3582:3601  mod(mload(data), 3) */\n      swap1\n      mod\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3619:3620  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3614:3734  case 1 {... */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3752:3753  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3747:3818  case 2 {... */\n      dup2\n      eq\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3575:3818  switch mod(mload(data), 3)... */\n      jump(tag_266)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3614:3734  case 1 {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3666:3670  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3662:3663  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3651:3660  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3647:3664  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3639:3671  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3715:3719  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3711:3712  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3700:3709  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3696:3713  sub(resultPtr, 2) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3688:3720  mstore8(sub(resultPtr, 2), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3614:3734  case 1 {... */\n      jump(tag_266)\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3747:3818  case 2 {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3799:3803  0x3d */\n      0x3d\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3795:3796  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3784:3793  resultPtr */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3780:3797  sub(resultPtr, 1) */\n      sub\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3772:3804  mstore8(sub(resultPtr, 1), 0x3d) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3575:3818  switch mod(mload(data), 3)... */\n    tag_266:\n      pop\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":3845:3851  result */\n      swap2\n      swap6\n        /* \"@openzeppelin/contracts/utils/Base64.sol\":476:3858  function encode(bytes memory data) internal pure returns (string memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":1612:1729  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n    tag_179:\n        /* \"contracts/libraries/LibERC721.sol\":1670:1677  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":1697:1705  layout() */\n      tag_270\n        /* \"contracts/libraries/LibERC721.sol\":1697:1703  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":1697:1705  layout() */\n      jump\t// in\n    tag_270:\n        /* \"contracts/libraries/LibERC721.sol\":1697:1721  layout().owners[tokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":1697:1712  layout().owners */\n      0x03\n      add\n        /* \"contracts/libraries/LibERC721.sol\":1697:1721  layout().owners[tokenId] */\n      0x20\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":1612:1729  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":15983:16806  function _approve(... */\n    tag_186:\n        /* \"contracts/libraries/LibERC721.sol\":16180:16189  emitEvent */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":16180:16211  emitEvent || auth != address(0) */\n      dup1\n      tag_272\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16193:16211  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16180:16211  emitEvent || auth != address(0) */\n    tag_272:\n        /* \"contracts/libraries/LibERC721.sol\":16176:16749  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16228:16241  address owner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":16244:16266  _requireOwned(tokenId) */\n      tag_274\n        /* \"contracts/libraries/LibERC721.sol\":16258:16265  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":16244:16257  _requireOwned */\n      tag_99\n        /* \"contracts/libraries/LibERC721.sol\":16244:16266  _requireOwned(tokenId) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/libraries/LibERC721.sol\":16228:16266  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16415:16433  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":16415:16467  auth != address(0) &&... */\n      tag_275\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16463:16467  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16454:16467  owner != auth */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16454:16459  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16454:16467  owner != auth */\n      and\n      eq\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16415:16467  auth != address(0) &&... */\n    tag_275:\n        /* \"contracts/libraries/LibERC721.sol\":16415:16528  auth != address(0) &&... */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16489:16497  layout() */\n      tag_277\n        /* \"contracts/libraries/LibERC721.sol\":16489:16495  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":16489:16497  layout() */\n      jump\t// in\n    tag_277:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16489:16522  layout().operatorApprovals[owner] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":16489:16515  layout().operatorApprovals */\n      0x06\n      swap3\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16489:16522  layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":16489:16528  layout().operatorApprovals[owner][auth] */\n      swap3\n      dup8\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16488:16528  !layout().operatorApprovals[owner][auth] */\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16415:16528  auth != address(0) &&... */\n    tag_276:\n        /* \"contracts/libraries/LibERC721.sol\":16393:16626  if (... */\n      iszero\n      tag_278\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":950:982   */\n      dup5\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":932:983   */\n      mstore\n        /* \"#utility.yul\":905:923   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      tag_109\n        /* \"#utility.yul\":786:989   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":16393:16626  if (... */\n    tag_278:\n        /* \"contracts/libraries/LibERC721.sol\":16646:16655  emitEvent */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":16642:16738  if (emitEvent) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16714:16721  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":16710:16712  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16681:16722  ERC721Events.Approval(owner, to, tokenId) */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16703:16708  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16681:16722  ERC721Events.Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/libraries/LibERC721.sol\":16642:16738  if (emitEvent) {... */\n    tag_280:\n        /* \"contracts/libraries/LibERC721.sol\":16213:16749  {... */\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16176:16749  if (emitEvent || auth != address(0)) {... */\n    tag_273:\n        /* \"contracts/libraries/LibERC721.sol\":16796:16798  to */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":16761:16769  layout() */\n      tag_281\n        /* \"contracts/libraries/LibERC721.sol\":16761:16767  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":16761:16769  layout() */\n      jump\t// in\n    tag_281:\n        /* \"contracts/libraries/LibERC721.sol\":16761:16793  layout().tokenApprovals[tokenId] */\n      0x00\n      swap5\n      dup6\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":16761:16784  layout().tokenApprovals */\n      0x05\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16761:16793  layout().tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":16761:16798  layout().tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":15983:16806  function _approve(... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":3089:3578  function _checkAuthorized(... */\n    tag_191:\n        /* \"contracts/libraries/LibERC721.sol\":3228:3266  _isAuthorized(owner, spender, tokenId) */\n      tag_283\n        /* \"contracts/libraries/LibERC721.sol\":3242:3247  owner */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3249:3256  spender */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3258:3265  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3228:3241  _isAuthorized */\n      tag_284\n        /* \"contracts/libraries/LibERC721.sol\":3228:3266  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/libraries/LibERC721.sol\":3223:3571  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_122\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":3287:3306  owner == address(0) */\n      dup4\n      and\n        /* \"contracts/libraries/LibERC721.sol\":3283:3560  if (owner == address(0)) {... */\n      tag_286\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":3334:3378  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1623:1648   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1596:1614   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":3334:3378  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      tag_109\n        /* \"#utility.yul\":1477:1654   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":3283:3560  if (owner == address(0)) {... */\n    tag_286:\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5335:5367   */\n      dup4\n      and\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5317:5368   */\n      mstore\n        /* \"#utility.yul\":5384:5402   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5377:5411   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5290:5308   */\n      0x44\n      add\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      tag_109\n        /* \"#utility.yul\":5143:5417   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":7220:7409  function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {... */\n    tag_200:\n        /* \"contracts/libraries/LibERC721.sol\":7333:7341  layout() */\n      tag_291\n        /* \"contracts/libraries/LibERC721.sol\":7333:7339  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":7333:7341  layout() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/libraries/LibERC721.sol\":7333:7351  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7333:7358  layout().allTokens.length */\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":7298:7306  layout() */\n      tag_292\n        /* \"contracts/libraries/LibERC721.sol\":7298:7304  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":7298:7306  layout() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/libraries/LibERC721.sol\":7298:7330  layout().allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":7298:7321  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7298:7330  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":7298:7358  layout().allTokensIndex[tokenId] = layout().allTokens.length */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":7369:7377  layout() */\n      tag_293\n        /* \"contracts/libraries/LibERC721.sol\":7369:7375  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":7369:7377  layout() */\n      jump\t// in\n    tag_293:\n        /* \"contracts/libraries/LibERC721.sol\":7369:7387  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7369:7401  layout().allTokens.push(tokenId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":7220:7409  function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":8036:9095  function _removeTokenFromOwnerEnumeration(... */\n    tag_204:\n        /* \"contracts/libraries/LibERC721.sol\":8328:8350  uint256 lastTokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":8353:8361  layout() */\n      tag_296\n        /* \"contracts/libraries/LibERC721.sol\":8353:8359  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8353:8361  layout() */\n      jump\t// in\n    tag_296:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8353:8376  layout().balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8353:8370  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8353:8376  layout().balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap2\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8408:8416  layout() */\n      tag_297\n        /* \"contracts/libraries/LibERC721.sol\":8408:8414  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8408:8416  layout() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/libraries/LibERC721.sol\":8408:8442  layout().ownedTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8408:8433  layout().ownedTokensIndex */\n      0x08\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8408:8442  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8549:8577  tokenIndex != lastTokenIndex */\n      dup2\n      dup2\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":8545:8897  if (tokenIndex != lastTokenIndex) {... */\n      tag_298\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":8594:8613  uint256 lastTokenId */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":8616:8624  layout() */\n      tag_299\n        /* \"contracts/libraries/LibERC721.sol\":8616:8622  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8616:8624  layout() */\n      jump\t// in\n    tag_299:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8616:8642  layout().ownedTokens[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8616:8636  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8616:8642  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8616:8658  layout().ownedTokens[from][lastTokenIndex] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":8675:8683  layout() */\n      tag_300\n        /* \"contracts/libraries/LibERC721.sol\":8675:8681  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8675:8683  layout() */\n      jump\t// in\n    tag_300:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8675:8701  layout().ownedTokens[from] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8675:8695  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8675:8701  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8675:8713  layout().ownedTokens[from][tokenIndex] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8675:8727  layout().ownedTokens[from][tokenIndex] = lastTokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":8702:8712  tokenIndex */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":8800:8808  layout() */\n      tag_301\n        /* \"contracts/libraries/LibERC721.sol\":8800:8806  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8800:8808  layout() */\n      jump\t// in\n    tag_301:\n        /* \"contracts/libraries/LibERC721.sol\":8800:8838  layout().ownedTokensIndex[lastTokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8800:8825  layout().ownedTokensIndex */\n      0x08\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8800:8838  layout().ownedTokensIndex[lastTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8800:8851  layout().ownedTokensIndex[lastTokenId] = tokenIndex */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":8545:8897  if (tokenIndex != lastTokenIndex) {... */\n    tag_298:\n        /* \"contracts/libraries/LibERC721.sol\":8993:9001  layout() */\n      tag_302\n        /* \"contracts/libraries/LibERC721.sol\":8993:8999  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":8993:9001  layout() */\n      jump\t// in\n    tag_302:\n        /* \"contracts/libraries/LibERC721.sol\":8993:9027  layout().ownedTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8993:9018  layout().ownedTokensIndex */\n      0x08\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8993:9027  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8986:9027  delete layout().ownedTokensIndex[tokenId] */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":9045:9053  layout() */\n      tag_303\n        /* \"contracts/libraries/LibERC721.sol\":9045:9051  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":9045:9053  layout() */\n      jump\t// in\n    tag_303:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":9045:9071  layout().ownedTokens[from] */\n      swap1\n      swap5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":9045:9065  layout().ownedTokens */\n      0x07\n      swap5\n      swap1\n      swap5\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9045:9071  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":9045:9087  layout().ownedTokens[from][lastTokenIndex] */\n      swap4\n      dup7\n      mstore\n      swap3\n      swap1\n      mstore\n      pop\n      dup3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":9038:9087  delete layout().ownedTokens[from][lastTokenIndex] */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8036:9095  function _removeTokenFromOwnerEnumeration(... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":9394:10530  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {... */\n    tag_207:\n        /* \"contracts/libraries/LibERC721.sol\":9648:9670  uint256 lastTokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":9701:9702  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":9673:9681  layout() */\n      tag_305\n        /* \"contracts/libraries/LibERC721.sol\":9673:9679  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":9673:9681  layout() */\n      jump\t// in\n    tag_305:\n        /* \"contracts/libraries/LibERC721.sol\":9673:9691  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9673:9698  layout().allTokens.length */\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":9673:9702  layout().allTokens.length - 1 */\n      tag_306\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"contracts/libraries/LibERC721.sol\":9648:9702  uint256 lastTokenIndex = layout().allTokens.length - 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":9713:9731  uint256 tokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":9734:9742  layout() */\n      tag_308\n        /* \"contracts/libraries/LibERC721.sol\":9734:9740  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":9734:9742  layout() */\n      jump\t// in\n    tag_308:\n        /* \"contracts/libraries/LibERC721.sol\":9734:9766  layout().allTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":9734:9757  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9734:9766  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap2\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":10115:10123  layout() */\n      tag_309\n        /* \"contracts/libraries/LibERC721.sol\":10115:10121  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":10115:10123  layout() */\n      jump\t// in\n    tag_309:\n        /* \"contracts/libraries/LibERC721.sol\":10115:10133  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10134:10148  lastTokenIndex */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":10115:10149  layout().allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_130\n      jump\t// in\n    tag_311:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":10093:10149  uint256 lastTokenId = layout().allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":10195:10206  lastTokenId */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":10162:10170  layout() */\n      tag_313\n        /* \"contracts/libraries/LibERC721.sol\":10162:10168  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":10162:10170  layout() */\n      jump\t// in\n    tag_313:\n        /* \"contracts/libraries/LibERC721.sol\":10162:10180  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10181:10191  tokenIndex */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":10162:10192  layout().allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_130\n      jump\t// in\n    tag_315:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10162:10206  layout().allTokens[tokenIndex] = lastTokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10314:10324  tokenIndex */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":10275:10283  layout() */\n      tag_317\n        /* \"contracts/libraries/LibERC721.sol\":10275:10281  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":10275:10283  layout() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/libraries/LibERC721.sol\":10275:10311  layout().allTokensIndex[lastTokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":10275:10298  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10275:10311  layout().allTokensIndex[lastTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":10275:10324  layout().allTokensIndex[lastTokenId] = tokenIndex */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10455:10463  layout() */\n      tag_318\n        /* \"contracts/libraries/LibERC721.sol\":10455:10461  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":10455:10463  layout() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/libraries/LibERC721.sol\":10455:10487  layout().allTokensIndex[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":10455:10478  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10455:10487  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":10448:10487  delete layout().allTokensIndex[tokenId] */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10498:10506  layout() */\n      tag_319\n        /* \"contracts/libraries/LibERC721.sol\":10498:10504  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":10498:10506  layout() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/libraries/LibERC721.sol\":10498:10516  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10498:10522  layout().allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_321\n      jumpi\n      tag_321\n      tag_322\n      jump\t// in\n    tag_321:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":9466:10530  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":9394:10530  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":6776:7019  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {... */\n    tag_211:\n        /* \"contracts/libraries/LibERC721.sol\":6862:6876  uint256 length */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":6903:6904  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":6879:6887  layout() */\n      tag_325\n        /* \"contracts/libraries/LibERC721.sol\":6879:6885  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":6879:6887  layout() */\n      jump\t// in\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6879:6900  layout().balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6879:6896  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6879:6900  layout().balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":6879:6904  layout().balances[to] - 1 */\n      tag_326\n      swap2\n      swap1\n      tag_307\n      jump\t// in\n    tag_326:\n        /* \"contracts/libraries/LibERC721.sol\":6862:6904  uint256 length = layout().balances[to] - 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":6950:6957  tokenId */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":6915:6923  layout() */\n      tag_327\n        /* \"contracts/libraries/LibERC721.sol\":6915:6921  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":6915:6923  layout() */\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6915:6939  layout().ownedTokens[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6915:6935  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6915:6939  layout().ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6915:6947  layout().ownedTokens[to][length] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6915:6957  layout().ownedTokens[to][length] = tokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":6940:6946  length */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":6968:6976  layout() */\n      tag_328\n        /* \"contracts/libraries/LibERC721.sol\":6968:6974  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":6968:6976  layout() */\n      jump\t// in\n    tag_328:\n        /* \"contracts/libraries/LibERC721.sol\":6968:7002  layout().ownedTokensIndex[tokenId] */\n      0x00\n      swap4\n      dup5\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6968:6993  layout().ownedTokensIndex */\n      0x08\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6968:7002  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6968:7011  layout().ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":6776:7019  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_330\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_339\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":2299:2645  function _isAuthorized(... */\n    tag_284:\n        /* \"contracts/libraries/LibERC721.sol\":2428:2432  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2465:2486  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":2465:2637  spender != address(0) &&... */\n      tag_210\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2513:2520  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2504:2520  owner == spender */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2504:2509  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2504:2520  owner == spender */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":2504:2583  owner == spender ||... */\n      dup1\n      tag_351\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2541:2549  layout() */\n      tag_352\n        /* \"contracts/libraries/LibERC721.sol\":2541:2547  layout */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":2541:2549  layout() */\n      jump\t// in\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2541:2574  layout().operatorApprovals[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":2541:2567  layout().operatorApprovals */\n      0x06\n      swap3\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/LibERC721.sol\":2541:2574  layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":2541:2583  layout().operatorApprovals[owner][spender] */\n      swap3\n      dup8\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2504:2583  owner == spender ||... */\n    tag_351:\n        /* \"contracts/libraries/LibERC721.sol\":2504:2636  owner == spender ||... */\n      dup1\n      tag_210\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2629:2636  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2604:2636  _getApproved(tokenId) == spender */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2604:2625  _getApproved(tokenId) */\n      tag_354\n        /* \"contracts/libraries/LibERC721.sol\":2617:2624  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":2604:2616  _getApproved */\n      tag_101\n        /* \"contracts/libraries/LibERC721.sol\":2604:2625  _getApproved(tokenId) */\n      jump\t// in\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2604:2636  _getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":2445:2637  return... */\n      swap5\n        /* \"contracts/libraries/LibERC721.sol\":2299:2645  function _isAuthorized(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:314   */\n    tag_355:\n        /* \"#utility.yul\":67:70   */\n      0x00\n        /* \"#utility.yul\":105:110   */\n      dup2\n        /* \"#utility.yul\":99:111   */\n      mload\n        /* \"#utility.yul\":132:138   */\n      dup1\n        /* \"#utility.yul\":127:130   */\n      dup5\n        /* \"#utility.yul\":120:139   */\n      mstore\n        /* \"#utility.yul\":188:194   */\n      dup1\n        /* \"#utility.yul\":181:185   */\n      0x20\n        /* \"#utility.yul\":174:179   */\n      dup5\n        /* \"#utility.yul\":170:186   */\n      add\n        /* \"#utility.yul\":163:167   */\n      0x20\n        /* \"#utility.yul\":158:161   */\n      dup7\n        /* \"#utility.yul\":154:168   */\n      add\n        /* \"#utility.yul\":148:195   */\n      mcopy\n        /* \"#utility.yul\":240:241   */\n      0x00\n        /* \"#utility.yul\":233:237   */\n      0x20\n        /* \"#utility.yul\":224:230   */\n      dup3\n        /* \"#utility.yul\":219:222   */\n      dup7\n        /* \"#utility.yul\":215:231   */\n      add\n        /* \"#utility.yul\":211:238   */\n      add\n        /* \"#utility.yul\":204:242   */\n      mstore\n        /* \"#utility.yul\":303:307   */\n      0x20\n        /* \"#utility.yul\":296:298   */\n      0x1f\n        /* \"#utility.yul\":292:299   */\n      not\n        /* \"#utility.yul\":287:289   */\n      0x1f\n        /* \"#utility.yul\":279:285   */\n      dup4\n        /* \"#utility.yul\":275:290   */\n      add\n        /* \"#utility.yul\":271:300   */\n      and\n        /* \"#utility.yul\":266:269   */\n      dup6\n        /* \"#utility.yul\":262:301   */\n      add\n        /* \"#utility.yul\":258:308   */\n      add\n        /* \"#utility.yul\":251:308   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":319:550   */\n    tag_25:\n        /* \"#utility.yul\":468:470   */\n      0x20\n        /* \"#utility.yul\":457:466   */\n      dup2\n        /* \"#utility.yul\":450:471   */\n      mstore\n        /* \"#utility.yul\":431:435   */\n      0x00\n        /* \"#utility.yul\":488:544   */\n      tag_157\n        /* \"#utility.yul\":540:542   */\n      0x20\n        /* \"#utility.yul\":529:538   */\n      dup4\n        /* \"#utility.yul\":525:543   */\n      add\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":488:544   */\n      tag_355\n      jump\t// in\n        /* \"#utility.yul\":555:781   */\n    tag_28:\n        /* \"#utility.yul\":614:620   */\n      0x00\n        /* \"#utility.yul\":667:669   */\n      0x20\n        /* \"#utility.yul\":655:664   */\n      dup3\n        /* \"#utility.yul\":646:653   */\n      dup5\n        /* \"#utility.yul\":642:665   */\n      sub\n        /* \"#utility.yul\":638:670   */\n      slt\n        /* \"#utility.yul\":635:687   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":683:684   */\n      0x00\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":673:685   */\n      revert\n        /* \"#utility.yul\":635:687   */\n    tag_364:\n      pop\n        /* \"#utility.yul\":728:751   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":555:781   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":994:1167   */\n    tag_356:\n        /* \"#utility.yul\":1062:1082   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1111:1142   */\n      dup2\n      and\n        /* \"#utility.yul\":1101:1143   */\n      dup2\n      eq\n        /* \"#utility.yul\":1091:1161   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":1157:1158   */\n      0x00\n        /* \"#utility.yul\":1154:1155   */\n      0x00\n        /* \"#utility.yul\":1147:1159   */\n      revert\n        /* \"#utility.yul\":1091:1161   */\n    tag_367:\n        /* \"#utility.yul\":994:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1172:1472   */\n    tag_34:\n        /* \"#utility.yul\":1240:1246   */\n      0x00\n        /* \"#utility.yul\":1248:1254   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x40\n        /* \"#utility.yul\":1289:1298   */\n      dup4\n        /* \"#utility.yul\":1280:1287   */\n      dup6\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1321   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1317:1318   */\n      0x00\n        /* \"#utility.yul\":1314:1315   */\n      0x00\n        /* \"#utility.yul\":1307:1319   */\n      revert\n        /* \"#utility.yul\":1269:1321   */\n    tag_369:\n        /* \"#utility.yul\":1340:1369   */\n      tag_370\n        /* \"#utility.yul\":1359:1368   */\n      dup4\n        /* \"#utility.yul\":1340:1369   */\n      tag_356\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1330:1369   */\n      swap5\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1423:1441   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1410:1442   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1172:1472   */\n      jump\t// out\n        /* \"#utility.yul\":1659:2033   */\n    tag_42:\n        /* \"#utility.yul\":1736:1742   */\n      0x00\n        /* \"#utility.yul\":1744:1750   */\n      0x00\n        /* \"#utility.yul\":1752:1758   */\n      0x00\n        /* \"#utility.yul\":1805:1807   */\n      0x60\n        /* \"#utility.yul\":1793:1802   */\n      dup5\n        /* \"#utility.yul\":1784:1791   */\n      dup7\n        /* \"#utility.yul\":1780:1803   */\n      sub\n        /* \"#utility.yul\":1776:1808   */\n      slt\n        /* \"#utility.yul\":1773:1825   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1821:1822   */\n      0x00\n        /* \"#utility.yul\":1818:1819   */\n      0x00\n        /* \"#utility.yul\":1811:1823   */\n      revert\n        /* \"#utility.yul\":1773:1825   */\n    tag_373:\n        /* \"#utility.yul\":1844:1873   */\n      tag_374\n        /* \"#utility.yul\":1863:1872   */\n      dup5\n        /* \"#utility.yul\":1844:1873   */\n      tag_356\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1834:1873   */\n      swap3\n      pop\n        /* \"#utility.yul\":1892:1930   */\n      tag_375\n        /* \"#utility.yul\":1926:1928   */\n      0x20\n        /* \"#utility.yul\":1915:1924   */\n      dup6\n        /* \"#utility.yul\":1911:1929   */\n      add\n        /* \"#utility.yul\":1892:1930   */\n      tag_356\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1659:2033   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1882:1930   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1999:2001   */\n      0x40\n        /* \"#utility.yul\":1984:2002   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1971:2003   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1659:2033   */\n      jump\t// out\n        /* \"#utility.yul\":2038:2224   */\n    tag_61:\n        /* \"#utility.yul\":2097:2103   */\n      0x00\n        /* \"#utility.yul\":2150:2152   */\n      0x20\n        /* \"#utility.yul\":2138:2147   */\n      dup3\n        /* \"#utility.yul\":2129:2136   */\n      dup5\n        /* \"#utility.yul\":2125:2148   */\n      sub\n        /* \"#utility.yul\":2121:2153   */\n      slt\n        /* \"#utility.yul\":2118:2170   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":2166:2167   */\n      0x00\n        /* \"#utility.yul\":2163:2164   */\n      0x00\n        /* \"#utility.yul\":2156:2168   */\n      revert\n        /* \"#utility.yul\":2118:2170   */\n    tag_377:\n        /* \"#utility.yul\":2189:2218   */\n      tag_157\n        /* \"#utility.yul\":2208:2217   */\n      dup3\n        /* \"#utility.yul\":2189:2218   */\n      tag_356\n      jump\t// in\n        /* \"#utility.yul\":2229:2576   */\n    tag_69:\n        /* \"#utility.yul\":2294:2300   */\n      0x00\n        /* \"#utility.yul\":2302:2308   */\n      0x00\n        /* \"#utility.yul\":2355:2357   */\n      0x40\n        /* \"#utility.yul\":2343:2352   */\n      dup4\n        /* \"#utility.yul\":2334:2341   */\n      dup6\n        /* \"#utility.yul\":2330:2353   */\n      sub\n        /* \"#utility.yul\":2326:2358   */\n      slt\n        /* \"#utility.yul\":2323:2375   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":2371:2372   */\n      0x00\n        /* \"#utility.yul\":2368:2369   */\n      0x00\n        /* \"#utility.yul\":2361:2373   */\n      revert\n        /* \"#utility.yul\":2323:2375   */\n    tag_380:\n        /* \"#utility.yul\":2394:2423   */\n      tag_381\n        /* \"#utility.yul\":2413:2422   */\n      dup4\n        /* \"#utility.yul\":2394:2423   */\n      tag_356\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2384:2423   */\n      swap2\n      pop\n        /* \"#utility.yul\":2473:2475   */\n      0x20\n        /* \"#utility.yul\":2462:2471   */\n      dup4\n        /* \"#utility.yul\":2458:2476   */\n      add\n        /* \"#utility.yul\":2445:2477   */\n      calldataload\n        /* \"#utility.yul\":2520:2525   */\n      dup1\n        /* \"#utility.yul\":2513:2526   */\n      iszero\n        /* \"#utility.yul\":2506:2527   */\n      iszero\n        /* \"#utility.yul\":2499:2504   */\n      dup2\n        /* \"#utility.yul\":2496:2528   */\n      eq\n        /* \"#utility.yul\":2486:2546   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2542:2543   */\n      0x00\n        /* \"#utility.yul\":2539:2540   */\n      0x00\n        /* \"#utility.yul\":2532:2544   */\n      revert\n        /* \"#utility.yul\":2486:2546   */\n    tag_382:\n        /* \"#utility.yul\":2565:2570   */\n      dup1\n        /* \"#utility.yul\":2555:2570   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2229:2576   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2581:2708   */\n    tag_242:\n        /* \"#utility.yul\":2642:2652   */\n      0x4e487b71\n        /* \"#utility.yul\":2637:2640   */\n      0xe0\n        /* \"#utility.yul\":2633:2653   */\n      shl\n        /* \"#utility.yul\":2630:2631   */\n      0x00\n        /* \"#utility.yul\":2623:2654   */\n      mstore\n        /* \"#utility.yul\":2673:2677   */\n      0x41\n        /* \"#utility.yul\":2670:2671   */\n      0x04\n        /* \"#utility.yul\":2663:2678   */\n      mstore\n        /* \"#utility.yul\":2697:2701   */\n      0x24\n        /* \"#utility.yul\":2694:2695   */\n      0x00\n        /* \"#utility.yul\":2687:2702   */\n      revert\n        /* \"#utility.yul\":2713:3920   */\n    tag_73:\n        /* \"#utility.yul\":2808:2814   */\n      0x00\n        /* \"#utility.yul\":2816:2822   */\n      0x00\n        /* \"#utility.yul\":2824:2830   */\n      0x00\n        /* \"#utility.yul\":2832:2838   */\n      0x00\n        /* \"#utility.yul\":2885:2888   */\n      0x80\n        /* \"#utility.yul\":2873:2882   */\n      dup6\n        /* \"#utility.yul\":2864:2871   */\n      dup8\n        /* \"#utility.yul\":2860:2883   */\n      sub\n        /* \"#utility.yul\":2856:2889   */\n      slt\n        /* \"#utility.yul\":2853:2906   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":2902:2903   */\n      0x00\n        /* \"#utility.yul\":2899:2900   */\n      0x00\n        /* \"#utility.yul\":2892:2904   */\n      revert\n        /* \"#utility.yul\":2853:2906   */\n    tag_385:\n        /* \"#utility.yul\":2925:2954   */\n      tag_386\n        /* \"#utility.yul\":2944:2953   */\n      dup6\n        /* \"#utility.yul\":2925:2954   */\n      tag_356\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2915:2954   */\n      swap4\n      pop\n        /* \"#utility.yul\":2973:3011   */\n      tag_387\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2996:3005   */\n      dup7\n        /* \"#utility.yul\":2992:3010   */\n      add\n        /* \"#utility.yul\":2973:3011   */\n      tag_356\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":2963:3011   */\n      swap3\n      pop\n        /* \"#utility.yul\":3080:3082   */\n      0x40\n        /* \"#utility.yul\":3065:3083   */\n      dup6\n      add\n        /* \"#utility.yul\":3052:3084   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3159:3161   */\n      0x60\n        /* \"#utility.yul\":3144:3162   */\n      dup6\n      add\n        /* \"#utility.yul\":3131:3163   */\n      calldataload\n        /* \"#utility.yul\":3186:3204   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3175:3205   */\n      dup2\n      gt\n        /* \"#utility.yul\":3172:3222   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3218:3219   */\n      0x00\n        /* \"#utility.yul\":3215:3216   */\n      0x00\n        /* \"#utility.yul\":3208:3220   */\n      revert\n        /* \"#utility.yul\":3172:3222   */\n    tag_388:\n        /* \"#utility.yul\":3241:3263   */\n      dup6\n      add\n        /* \"#utility.yul\":3294:3298   */\n      0x1f\n        /* \"#utility.yul\":3286:3299   */\n      dup2\n      add\n        /* \"#utility.yul\":3282:3309   */\n      dup8\n      sgt\n        /* \"#utility.yul\":3272:3327   */\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3320:3321   */\n      0x00\n        /* \"#utility.yul\":3313:3325   */\n      revert\n        /* \"#utility.yul\":3272:3327   */\n    tag_389:\n        /* \"#utility.yul\":3363:3365   */\n      dup1\n        /* \"#utility.yul\":3350:3366   */\n      calldataload\n        /* \"#utility.yul\":3389:3407   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3381:3387   */\n      dup2\n        /* \"#utility.yul\":3378:3408   */\n      gt\n        /* \"#utility.yul\":3375:3431   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":3411:3429   */\n      tag_391\n      tag_242\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3460:3462   */\n      0x40\n        /* \"#utility.yul\":3454:3463   */\n      mload\n        /* \"#utility.yul\":3552:3554   */\n      0x1f\n        /* \"#utility.yul\":3514:3531   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3510:3541   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3543:3545   */\n      0x3f\n        /* \"#utility.yul\":3506:3546   */\n      add\n        /* \"#utility.yul\":3502:3556   */\n      and\n        /* \"#utility.yul\":3490:3557   */\n      dup2\n      add\n        /* \"#utility.yul\":3587:3605   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3572:3606   */\n      dup2\n      gt\n        /* \"#utility.yul\":3608:3630   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3569:3631   */\n      or\n        /* \"#utility.yul\":3566:3654   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3634:3652   */\n      tag_393\n      tag_242\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3670:3672   */\n      0x40\n        /* \"#utility.yul\":3663:3685   */\n      mstore\n        /* \"#utility.yul\":3694:3716   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":3735:3750   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3731:3755   */\n      add\n        /* \"#utility.yul\":3728:3765   */\n      dup10\n      lt\n        /* \"#utility.yul\":3725:3782   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3775:3776   */\n      0x00\n        /* \"#utility.yul\":3768:3780   */\n      revert\n        /* \"#utility.yul\":3725:3782   */\n    tag_394:\n        /* \"#utility.yul\":3834:3840   */\n      dup2\n        /* \"#utility.yul\":3829:3831   */\n      0x20\n        /* \"#utility.yul\":3825:3827   */\n      dup5\n        /* \"#utility.yul\":3821:3832   */\n      add\n        /* \"#utility.yul\":3816:3818   */\n      0x20\n        /* \"#utility.yul\":3808:3814   */\n      dup4\n        /* \"#utility.yul\":3804:3819   */\n      add\n        /* \"#utility.yul\":3791:3841   */\n      calldatacopy\n        /* \"#utility.yul\":3887:3888   */\n      0x00\n        /* \"#utility.yul\":3882:3884   */\n      0x20\n        /* \"#utility.yul\":3873:3879   */\n      dup4\n        /* \"#utility.yul\":3865:3871   */\n      dup4\n        /* \"#utility.yul\":3861:3880   */\n      add\n        /* \"#utility.yul\":3857:3885   */\n      add\n        /* \"#utility.yul\":3850:3889   */\n      mstore\n        /* \"#utility.yul\":3908:3914   */\n      dup1\n        /* \"#utility.yul\":3898:3914   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2713:3920   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3925:4185   */\n    tag_84:\n        /* \"#utility.yul\":3993:3999   */\n      0x00\n        /* \"#utility.yul\":4001:4007   */\n      0x00\n        /* \"#utility.yul\":4054:4056   */\n      0x40\n        /* \"#utility.yul\":4042:4051   */\n      dup4\n        /* \"#utility.yul\":4033:4040   */\n      dup6\n        /* \"#utility.yul\":4029:4052   */\n      sub\n        /* \"#utility.yul\":4025:4057   */\n      slt\n        /* \"#utility.yul\":4022:4074   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":4070:4071   */\n      0x00\n        /* \"#utility.yul\":4067:4068   */\n      0x00\n        /* \"#utility.yul\":4060:4072   */\n      revert\n        /* \"#utility.yul\":4022:4074   */\n    tag_396:\n        /* \"#utility.yul\":4093:4122   */\n      tag_397\n        /* \"#utility.yul\":4112:4121   */\n      dup4\n        /* \"#utility.yul\":4093:4122   */\n      tag_356\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4083:4122   */\n      swap2\n      pop\n        /* \"#utility.yul\":4141:4179   */\n      tag_398\n        /* \"#utility.yul\":4175:4177   */\n      0x20\n        /* \"#utility.yul\":4164:4173   */\n      dup5\n        /* \"#utility.yul\":4160:4178   */\n      add\n        /* \"#utility.yul\":4141:4179   */\n      tag_356\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4131:4179   */\n      swap1\n      pop\n        /* \"#utility.yul\":3925:4185   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4762   */\n    tag_92:\n        /* \"#utility.yul\":4461:4462   */\n      0x01\n        /* \"#utility.yul\":4457:4469   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4504:4516   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4525:4586   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":4579:4583   */\n      0x7f\n        /* \"#utility.yul\":4571:4577   */\n      dup3\n        /* \"#utility.yul\":4567:4584   */\n      and\n        /* \"#utility.yul\":4557:4584   */\n      swap2\n      pop\n        /* \"#utility.yul\":4525:4586   */\n    tag_401:\n        /* \"#utility.yul\":4632:4634   */\n      0x20\n        /* \"#utility.yul\":4624:4630   */\n      dup3\n        /* \"#utility.yul\":4621:4635   */\n      lt\n        /* \"#utility.yul\":4601:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4636   */\n      sub\n        /* \"#utility.yul\":4595:4756   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4678:4688   */\n      0x4e487b71\n        /* \"#utility.yul\":4673:4676   */\n      0xe0\n        /* \"#utility.yul\":4669:4689   */\n      shl\n        /* \"#utility.yul\":4666:4667   */\n      0x00\n        /* \"#utility.yul\":4659:4690   */\n      mstore\n        /* \"#utility.yul\":4713:4717   */\n      0x22\n        /* \"#utility.yul\":4710:4711   */\n      0x04\n        /* \"#utility.yul\":4703:4718   */\n      mstore\n        /* \"#utility.yul\":4741:4745   */\n      0x24\n        /* \"#utility.yul\":4738:4739   */\n      0x00\n        /* \"#utility.yul\":4731:4746   */\n      revert\n        /* \"#utility.yul\":4595:4756   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":4382:4762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5422:5549   */\n    tag_130:\n        /* \"#utility.yul\":5483:5493   */\n      0x4e487b71\n        /* \"#utility.yul\":5478:5481   */\n      0xe0\n        /* \"#utility.yul\":5474:5494   */\n      shl\n        /* \"#utility.yul\":5471:5472   */\n      0x00\n        /* \"#utility.yul\":5464:5495   */\n      mstore\n        /* \"#utility.yul\":5514:5518   */\n      0x32\n        /* \"#utility.yul\":5511:5512   */\n      0x04\n        /* \"#utility.yul\":5504:5519   */\n      mstore\n        /* \"#utility.yul\":5538:5542   */\n      0x24\n        /* \"#utility.yul\":5535:5536   */\n      0x00\n        /* \"#utility.yul\":5528:5543   */\n      revert\n        /* \"#utility.yul\":5554:5766   */\n    tag_357:\n        /* \"#utility.yul\":5596:5599   */\n      0x00\n        /* \"#utility.yul\":5634:5639   */\n      dup2\n        /* \"#utility.yul\":5628:5640   */\n      mload\n        /* \"#utility.yul\":5678:5684   */\n      dup1\n        /* \"#utility.yul\":5671:5675   */\n      0x20\n        /* \"#utility.yul\":5664:5669   */\n      dup5\n        /* \"#utility.yul\":5660:5676   */\n      add\n        /* \"#utility.yul\":5655:5658   */\n      dup6\n        /* \"#utility.yul\":5649:5685   */\n      mcopy\n        /* \"#utility.yul\":5740:5741   */\n      0x00\n        /* \"#utility.yul\":5704:5720   */\n      swap4\n      add\n        /* \"#utility.yul\":5729:5742   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":5704:5720   */\n      swap1\n      swap2\n        /* \"#utility.yul\":5554:5766   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5771:6194   */\n    tag_161:\n        /* \"#utility.yul\":6040:6043   */\n      0x00\n        /* \"#utility.yul\":6071:6128   */\n      tag_408\n        /* \"#utility.yul\":6097:6127   */\n      tag_409\n        /* \"#utility.yul\":6123:6126   */\n      dup4\n        /* \"#utility.yul\":6115:6121   */\n      dup7\n        /* \"#utility.yul\":6097:6127   */\n      tag_357\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":6089:6095   */\n      dup5\n        /* \"#utility.yul\":6071:6128   */\n      tag_357\n      jump\t// in\n    tag_408:\n      shl(0xd9, 0x173539b7b7)\n        /* \"#utility.yul\":6137:6159   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6186:6187   */\n      0x05\n        /* \"#utility.yul\":6175:6188   */\n      add\n      swap5\n        /* \"#utility.yul\":5771:6194   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6199:7249   */\n    tag_170:\n      shl(0xb9, 0x3d913730b6b2911d11)\n        /* \"#utility.yul\":6846:6889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6828:6831   */\n      0x00\n        /* \"#utility.yul\":6908:6946   */\n      tag_411\n        /* \"#utility.yul\":6943:6944   */\n      0x09\n        /* \"#utility.yul\":6934:6945   */\n      dup4\n      add\n        /* \"#utility.yul\":6926:6932   */\n      dup7\n        /* \"#utility.yul\":6908:6946   */\n      tag_357\n      jump\t// in\n    tag_411:\n      shl(0x79, 0x1116113232b9b1b934b83a34b7b7111d11)\n        /* \"#utility.yul\":6955:7013   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7032:7070   */\n      tag_412\n        /* \"#utility.yul\":7066:7068   */\n      0x11\n        /* \"#utility.yul\":7058:7069   */\n      dup3\n      add\n        /* \"#utility.yul\":7050:7056   */\n      dup7\n        /* \"#utility.yul\":7032:7070   */\n      tag_357\n      jump\t// in\n    tag_412:\n      shl(0xa9, 0x11161134b6b0b3b2911d11)\n        /* \"#utility.yul\":7079:7125   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7022:7070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7144:7182   */\n      tag_413\n        /* \"#utility.yul\":7178:7180   */\n      0x0b\n        /* \"#utility.yul\":7170:7181   */\n      dup3\n      add\n        /* \"#utility.yul\":7162:7168   */\n      dup6\n        /* \"#utility.yul\":7144:7182   */\n      tag_357\n      jump\t// in\n    tag_413:\n      shl(0xf0, 0x227d)\n        /* \"#utility.yul\":7191:7217   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7241:7242   */\n      0x02\n        /* \"#utility.yul\":7233:7243   */\n      add\n      swap7\n        /* \"#utility.yul\":6199:7249   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7254:7609   */\n    tag_173:\n        /* \"#utility.yul\":7516:7547   */\n      0x646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000\n        /* \"#utility.yul\":7511:7514   */\n      dup2\n        /* \"#utility.yul\":7504:7548   */\n      mstore\n        /* \"#utility.yul\":7486:7489   */\n      0x00\n        /* \"#utility.yul\":7564:7603   */\n      tag_157\n        /* \"#utility.yul\":7599:7601   */\n      0x1d\n        /* \"#utility.yul\":7594:7597   */\n      dup4\n        /* \"#utility.yul\":7590:7602   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup5\n        /* \"#utility.yul\":7564:7603   */\n      tag_357\n      jump\t// in\n        /* \"#utility.yul\":7614:8110   */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7845:7877   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":7827:7878   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7914:7946   */\n      dup5\n      and\n        /* \"#utility.yul\":7909:7911   */\n      0x20\n        /* \"#utility.yul\":7894:7912   */\n      dup3\n      add\n        /* \"#utility.yul\":7887:7947   */\n      mstore\n        /* \"#utility.yul\":7978:7980   */\n      0x40\n        /* \"#utility.yul\":7963:7981   */\n      dup2\n      add\n        /* \"#utility.yul\":7956:7990   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8026:8029   */\n      0x80\n        /* \"#utility.yul\":8021:8023   */\n      0x60\n        /* \"#utility.yul\":8006:8024   */\n      dup3\n      add\n        /* \"#utility.yul\":7999:8030   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":8047:8104   */\n      tag_417\n      swap1\n        /* \"#utility.yul\":8084:8103   */\n      dup4\n      add\n        /* \"#utility.yul\":8076:8082   */\n      dup5\n        /* \"#utility.yul\":8047:8104   */\n      tag_355\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8039:8104   */\n      swap7\n        /* \"#utility.yul\":7614:8110   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8115:8405   */\n    tag_223:\n        /* \"#utility.yul\":8184:8190   */\n      0x00\n        /* \"#utility.yul\":8237:8239   */\n      0x20\n        /* \"#utility.yul\":8225:8234   */\n      dup3\n        /* \"#utility.yul\":8216:8223   */\n      dup5\n        /* \"#utility.yul\":8212:8235   */\n      sub\n        /* \"#utility.yul\":8208:8240   */\n      slt\n        /* \"#utility.yul\":8205:8257   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":8253:8254   */\n      0x00\n        /* \"#utility.yul\":8250:8251   */\n      0x00\n        /* \"#utility.yul\":8243:8255   */\n      revert\n        /* \"#utility.yul\":8205:8257   */\n    tag_419:\n        /* \"#utility.yul\":8279:8295   */\n      dup2\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":8324:8356   */\n      dup2\n      and\n        /* \"#utility.yul\":8314:8357   */\n      dup2\n      eq\n        /* \"#utility.yul\":8304:8375   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":8371:8372   */\n      0x00\n        /* \"#utility.yul\":8368:8369   */\n      0x00\n        /* \"#utility.yul\":8361:8373   */\n      revert\n        /* \"#utility.yul\":8542:8669   */\n    tag_358:\n        /* \"#utility.yul\":8603:8613   */\n      0x4e487b71\n        /* \"#utility.yul\":8598:8601   */\n      0xe0\n        /* \"#utility.yul\":8594:8614   */\n      shl\n        /* \"#utility.yul\":8591:8592   */\n      0x00\n        /* \"#utility.yul\":8584:8615   */\n      mstore\n        /* \"#utility.yul\":8634:8638   */\n      0x11\n        /* \"#utility.yul\":8631:8632   */\n      0x04\n        /* \"#utility.yul\":8624:8639   */\n      mstore\n        /* \"#utility.yul\":8658:8662   */\n      0x24\n        /* \"#utility.yul\":8655:8656   */\n      0x00\n        /* \"#utility.yul\":8648:8663   */\n      revert\n        /* \"#utility.yul\":8674:8799   */\n    tag_255:\n        /* \"#utility.yul\":8739:8748   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8760:8770   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8757:8793   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":8773:8791   */\n      tag_100\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":8804:9021   */\n    tag_257:\n        /* \"#utility.yul\":8844:8845   */\n      0x00\n        /* \"#utility.yul\":8870:8871   */\n      dup3\n        /* \"#utility.yul\":8860:8992   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":8914:8924   */\n      0x4e487b71\n        /* \"#utility.yul\":8909:8912   */\n      0xe0\n        /* \"#utility.yul\":8905:8925   */\n      shl\n        /* \"#utility.yul\":8902:8903   */\n      0x00\n        /* \"#utility.yul\":8895:8926   */\n      mstore\n        /* \"#utility.yul\":8949:8953   */\n      0x12\n        /* \"#utility.yul\":8946:8947   */\n      0x04\n        /* \"#utility.yul\":8939:8954   */\n      mstore\n        /* \"#utility.yul\":8977:8981   */\n      0x24\n        /* \"#utility.yul\":8974:8975   */\n      0x00\n        /* \"#utility.yul\":8967:8982   */\n      revert\n        /* \"#utility.yul\":8860:8992   */\n    tag_427:\n      pop\n        /* \"#utility.yul\":9006:9015   */\n      div\n      swap1\n        /* \"#utility.yul\":8804:9021   */\n      jump\t// out\n        /* \"#utility.yul\":9026:9194   */\n    tag_259:\n        /* \"#utility.yul\":9099:9108   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9130:9139   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9147:9162   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9141:9163   */\n      dup5\n      eq\n        /* \"#utility.yul\":9127:9164   */\n      or\n        /* \"#utility.yul\":9117:9188   */\n      tag_100\n      jumpi\n        /* \"#utility.yul\":9168:9186   */\n      tag_100\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":9199:9327   */\n    tag_307:\n        /* \"#utility.yul\":9266:9275   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9287:9298   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9284:9321   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":9301:9319   */\n      tag_100\n      tag_358\n      jump\t// in\n        /* \"#utility.yul\":9332:9459   */\n    tag_322:\n        /* \"#utility.yul\":9393:9403   */\n      0x4e487b71\n        /* \"#utility.yul\":9388:9391   */\n      0xe0\n        /* \"#utility.yul\":9384:9404   */\n      shl\n        /* \"#utility.yul\":9381:9382   */\n      0x00\n        /* \"#utility.yul\":9374:9405   */\n      mstore\n        /* \"#utility.yul\":9424:9428   */\n      0x31\n        /* \"#utility.yul\":9421:9422   */\n      0x04\n        /* \"#utility.yul\":9414:9429   */\n      mstore\n        /* \"#utility.yul\":9448:9452   */\n      0x24\n        /* \"#utility.yul\":9445:9446   */\n      0x00\n        /* \"#utility.yul\":9438:9453   */\n      revert\n    stop\n    data_181e845e6c0eb8c054a077e1938a77f4971788cb2d26cf8484daf453967e5fbd 5468697320697320636f6e7472616374206465736372697074696f6e2e4465706f6c796564206279206a757374776569277320455243373231204469616d6f6e6420696d706c656d656e746174696f6e2e\n    data_585614bb91ad8ba7a82ca696a2a8c1013b91b1a829f17f122d730fe2aca1b7b6 697066733a2f2f516d636967396548385857455a5a7546395a47514437674141484d446a373973543875643738375067443537754e\n    data_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce 4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f\n\n    auxdata: 0xa2646970667358221220bb3bbb00633feec7a66a2814ddfa954d94e7d141b2c1dfd4782ec799c68541b464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506117e88061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c80636352211e11610093578063b88d4fde11610063578063b88d4fde14610200578063c87b56dd14610213578063e8a3d48514610226578063e985e9c51461022e575f5ffd5b80636352211e146101bf57806370a08231146101d257806395d89b41146101e5578063a22cb465146101ed575f5ffd5b806323b872dd116100ce57806323b872dd146101735780632f745c591461018657806342842e0e146101995780634f6ccce7146101ac575f5ffd5b806306fdde03146100ff578063081812fc1461011d578063095ea7b31461014857806318160ddd1461015d575b5f5ffd5b610107610251565b60405161011491906112b7565b60405180910390f35b61013061012b3660046112c9565b6102e7565b6040516001600160a01b039091168152602001610114565b61015b6101563660046112fb565b610301565b005b610165610310565b604051908152602001610114565b61015b610181366004611323565b610322565b6101656101943660046112fb565b6103b0565b61015b6101a7366004611323565b61041f565b6101656101ba3660046112c9565b61043e565b6101306101cd3660046112c9565b61049b565b6101656101e036600461135d565b6104a5565b610107610501565b61015b6101fb366004611376565b610519565b61015b61020e3660046113c3565b610524565b6101076102213660046112c9565b61053c565b6101076105c7565b61024161023c3660046114a0565b61062e565b6040519015158152602001610114565b606061025b610669565b8054610266906114d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610292906114d1565b80156102dd5780601f106102b4576101008083540402835291602001916102dd565b820191905f5260205f20905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b5f6102f18261068d565b506102fb826106c4565b92915050565b61030c8282336106e9565b5050565b5f610319610669565b60020154919050565b6001600160a01b03821661035057604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61035c8383336106f6565b9050836001600160a01b0316816001600160a01b0316146103aa576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610347565b50505050565b5f6103ba836104a5565b82106103eb5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610347565b6103f3610669565b6001600160a01b03939093165f9081526007909301602090815260408085209385529290525090205490565b61043983838360405180602001604052805f815250610524565b505050565b5f610447610310565b821061046f5760405163295f44f760e21b81525f600482015260248101839052604401610347565b610477610669565b600201828154811061048b5761048b611509565b905f5260205f2001549050919050565b5f6102fb8261068d565b5f6001600160a01b0382166104d8576040516322718ad960e21b81526001600160a01b0383166004820152602401610347565b6104e0610669565b6001600160a01b039092165f90815260049290920160205250604090205490565b606061050b610669565b6001018054610266906114d1565b61030c33838361088c565b61052f848484610322565b6103aa338585858561093c565b60606105478261068d565b505f610577604080518082019091526011815270697066733a2f2f736f6d657468696e672f60781b602082015290565b90505f8151116105955760405180602001604052805f8152506105c0565b8061059f84610a64565b6040516020016105b0929190611534565b6040516020818303038152906040525b9392505050565b606061060a6105d4610251565b6105dc610af4565b6105e4610b14565b6040516020016105f69392919061155e565b604051602081830303815290604052610b34565b60405160200161061a91906115d4565b604051602081830303815290604052905090565b5f610637610669565b6001600160a01b039384165f908152600691909101602090815260408083209490951682529290925250205460ff1690565b7ff2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea7890565b5f5f61069883610c8f565b90506001600160a01b0381166102fb57604051637e27328960e01b815260048101849052602401610347565b5f6106cd610669565b5f9283526005016020525060409020546001600160a01b031690565b6104398383836001610cb4565b5f5f61070184610c8f565b90506001600160a01b0383161561071d5761071d818486610def565b6001600160a01b03811615610766576107385f855f5f610cb4565b6001610742610669565b6001600160a01b0383165f9081526004919091016020526040902080549190910390555b6001600160a01b038516156107a257600161077f610669565b6001600160a01b0387165f90815260049190910160205260409020805490910190555b846107ab610669565b5f868152600391909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551869288811692908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a46001600160a01b0381166108225761081d84610e53565b610845565b846001600160a01b0316816001600160a01b031614610845576108458185610e99565b6001600160a01b0385166108615761085c84610fb0565b610884565b846001600160a01b0316816001600160a01b03161461088457610884858561109f565b949350505050565b6001600160a01b0382166108be57604051630b61174360e31b81526001600160a01b0383166004820152602401610347565b806108c7610669565b6001600160a01b038581165f8181526006939093016020908152604080852093881680865293825293849020805460ff1916951515959095179094559151841515815290927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610a5d57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061097e908890889087908790600401611605565b6020604051808303815f875af19250505080156109b8575060408051601f3d908101601f191682019092526109b591810190611641565b60015b610a1f573d8080156109e5576040519150601f19603f3d011682016040523d82523d5f602084013e6109ea565b606091505b5080515f03610a1757604051633250574960e11b81526001600160a01b0385166004820152602401610347565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610a5b57604051633250574960e11b81526001600160a01b0385166004820152602401610347565b505b5050505050565b60605f610a7083611122565b60010190505f8167ffffffffffffffff811115610a8f57610a8f6113af565b6040519080825280601f01601f191660200182016040528015610ab9576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ac357509392505050565b60606040518060800160405280605181526020016116ed60519139905090565b606060405180606001604052806035815260200161173e60359139905090565b606081515f03610b5157505060408051602081019091525f815290565b5f6040518060600160405280604081526020016117736040913990505f600384516002610b7e919061167c565b610b88919061168f565b610b939060046116ae565b67ffffffffffffffff811115610bab57610bab6113af565b6040519080825280601f01601f191660200182016040528015610bd5576020820181803683370190505b509050600182016020820185865187016020810180515f82525b82841015610c4a576003840193508351603f8160121c168701518653600186019550603f81600c1c168701518653600186019550603f8160061c168701518653600186019550603f8116870151865350600185019450610bef565b9052505085516003900660018114610c695760028114610c7c57610c84565b603d6001830353603d6002830353610c84565b603d60018303535b509195945050505050565b5f610c98610669565b5f9283526003016020525060409020546001600160a01b031690565b8080610cc857506001600160a01b03821615155b15610db4575f610cd78461068d565b90506001600160a01b03831615801590610d035750826001600160a01b0316816001600160a01b031614155b8015610d415750610d12610669565b6001600160a01b038083165f90815260069290920160209081526040808420928716845291905290205460ff16155b15610d6a5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610347565b8115610db25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b83610dbd610669565b5f948552600501602052604090932080546001600160a01b0319166001600160a01b0390941693909317909255505050565b610dfa8383836111f9565b610439576001600160a01b038316610e2857604051637e27328960e01b815260048101829052602401610347565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610347565b610e5b610669565b60020154610e67610669565b5f8381526009919091016020526040902055610e81610669565b60020180546001810182555f91825260209091200155565b5f610ea2610669565b6001600160a01b0384165f90815260049190910160205260408120549150610ec8610669565b5f84815260089190910160205260409020549050818114610f5f575f610eec610669565b6001600160a01b0386165f90815260079190910160209081526040808320868452909152902054905080610f1e610669565b6001600160a01b0387165f9081526007919091016020908152604080832086845290915290205581610f4e610669565b5f9283526008016020526040909120555b610f67610669565b5f8481526008919091016020526040812055610f81610669565b6001600160a01b039094165f908152600794909401602090815260408086209386529290525082209190915550565b5f6001610fbb610669565b60020154610fc991906116c5565b90505f610fd4610669565b5f84815260099190910160205260408120549150610ff0610669565b600201838154811061100457611004611509565b905f5260205f200154905080611018610669565b600201838154811061102c5761102c611509565b5f9182526020909120015581611040610669565b5f838152600991909101602052604090205561105a610669565b5f8581526009919091016020526040812055611074610669565b600201805480611086576110866116d8565b600190038181905f5260205f20015f9055905550505050565b5f60016110aa610669565b6001600160a01b0385165f90815260049190910160205260409020546110d091906116c5565b9050816110db610669565b6001600160a01b0385165f908152600791909101602090815260408083208584529091529020558061110b610669565b5f9384526008016020526040909220919091555050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111605772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061118c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111aa57662386f26fc10000830492506010015b6305f5e10083106111c2576305f5e100830492506008015b61271083106111d657612710830492506004015b606483106111e8576064830492506002015b600a83106102fb5760010192915050565b5f6001600160a01b038316158015906108845750826001600160a01b0316846001600160a01b0316148061125e5750611230610669565b6001600160a01b038086165f90815260069290920160209081526040808420928716845291905290205460ff165b806108845750826001600160a01b0316611277836106c4565b6001600160a01b031614949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105c06020830184611289565b5f602082840312156112d9575f5ffd5b5035919050565b80356001600160a01b03811681146112f6575f5ffd5b919050565b5f5f6040838503121561130c575f5ffd5b611315836112e0565b946020939093013593505050565b5f5f5f60608486031215611335575f5ffd5b61133e846112e0565b925061134c602085016112e0565b929592945050506040919091013590565b5f6020828403121561136d575f5ffd5b6105c0826112e0565b5f5f60408385031215611387575f5ffd5b611390836112e0565b9150602083013580151581146113a4575f5ffd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156113d6575f5ffd5b6113df856112e0565b93506113ed602086016112e0565b925060408501359150606085013567ffffffffffffffff81111561140f575f5ffd5b8501601f8101871361141f575f5ffd5b803567ffffffffffffffff811115611439576114396113af565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611468576114686113af565b60405281815282820160200189101561147f575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f5f604083850312156114b1575f5ffd5b6114ba836112e0565b91506114c8602084016112e0565b90509250929050565b600181811c908216806114e557607f821691505b60208210810361150357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f611548611542838661151d565b8461151d565b64173539b7b760d91b8152600501949350505050565b683d913730b6b2911d1160b91b81525f61157b600983018661151d565b701116113232b9b1b934b83a34b7b7111d1160791b815261159f601182018661151d565b6a11161134b6b0b3b2911d1160a91b815290506115bf600b82018561151d565b61227d60f01b81526002019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f6105c0601d83018461151d565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061163790830184611289565b9695505050505050565b5f60208284031215611651575f5ffd5b81516001600160e01b0319811681146105c0575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156102fb576102fb611668565b5f826116a957634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176102fb576102fb611668565b818103818111156102fb576102fb611668565b634e487b7160e01b5f52603160045260245ffdfe5468697320697320636f6e7472616374206465736372697074696f6e2e4465706f6c796564206279206a757374776569277320455243373231204469616d6f6e6420696d706c656d656e746174696f6e2e697066733a2f2f516d636967396548385857455a5a7546395a47514437674141484d446a373973543875643738375067443537754e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220bb3bbb00633feec7a66a2814ddfa954d94e7d141b2c1dfd4782ec799c68541b464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17E8 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x130 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x25B PUSH2 0x669 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x68D JUMP JUMPDEST POP PUSH2 0x2FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30C DUP3 DUP3 CALLER PUSH2 0x6E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x319 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x35C DUP4 DUP4 CALLER PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x347 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3BA DUP4 PUSH2 0x4A5 JUMP JUMPDEST DUP3 LT PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 MSTORE POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x524 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 PUSH2 0x310 JUMP JUMPDEST DUP3 LT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x477 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0x1509 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB DUP3 PUSH2 0x68D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x50B PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x30C CALLER DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52F DUP5 DUP5 DUP5 PUSH2 0x322 JUMP JUMPDEST PUSH2 0x3AA CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x547 DUP3 PUSH2 0x68D JUMP JUMPDEST POP PUSH0 PUSH2 0x577 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x697066733A2F2F736F6D657468696E672F PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5C0 JUMP JUMPDEST DUP1 PUSH2 0x59F DUP5 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x60A PUSH2 0x5D4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x637 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0xF2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x698 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH0 PUSH2 0x6CD PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCB4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x701 DUP5 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x71D JUMPI PUSH2 0x71D DUP2 DUP5 DUP7 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x766 JUMPI PUSH2 0x738 PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x742 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x1 PUSH2 0x77F PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST DUP5 PUSH2 0x7AB PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE MLOAD DUP7 SWAP3 DUP9 DUP2 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x822 JUMPI PUSH2 0x81D DUP5 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x845 JUMPI PUSH2 0x845 DUP2 DUP6 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x861 JUMPI PUSH2 0x85C DUP5 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x884 JUMPI PUSH2 0x884 DUP6 DUP6 PUSH2 0x109F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP1 PUSH2 0x8C7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP9 AND DUP1 DUP7 MSTORE SWAP4 DUP3 MSTORE SWAP4 DUP5 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP2 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 SWAP3 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x97E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA1F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA70 DUP4 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xAC3 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16ED PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x173E PUSH1 0x35 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0xB51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1773 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH2 0xB93 SWAP1 PUSH1 0x4 PUSH2 0x16AE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBAB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0xBEF JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0xC69 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC7C JUMPI PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC98 PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCC8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDB4 JUMPI PUSH0 PUSH2 0xCD7 DUP5 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD03 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD41 JUMPI POP PUSH2 0xD12 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDB2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH2 0xDBD PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP5 DUP6 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDFA DUP4 DUP4 DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x439 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0xE67 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xE81 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xEA2 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0xEC8 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0xF5F JUMPI PUSH0 PUSH2 0xEEC PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF1E PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xF4E PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST PUSH2 0xF67 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xF81 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP5 SWAP1 SWAP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP7 MSTORE SWAP3 SWAP1 MSTORE POP DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0xFBB PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0xFC9 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFD4 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0xFF0 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1004 JUMPI PUSH2 0x1004 PUSH2 0x1509 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH2 0x1018 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1509 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP2 PUSH2 0x1040 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x105A PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1074 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x10AA PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x10DB PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x110B PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1160 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x118C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11AA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11C2 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11D6 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11E8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2FB JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x884 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x125E JUMPI POP PUSH2 0x1230 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x884 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1277 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1289 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1315 DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x133E DUP5 PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x134C PUSH1 0x20 DUP6 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x12E0 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1387 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1390 DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13DF DUP6 PUSH2 0x12E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x13ED PUSH1 0x20 DUP7 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x141F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1468 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x147F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14BA DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C8 PUSH1 0x20 DUP5 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1503 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1542 DUP4 DUP7 PUSH2 0x151D JUMP JUMPDEST DUP5 PUSH2 0x151D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE PUSH0 PUSH2 0x157B PUSH1 0x9 DUP4 ADD DUP7 PUSH2 0x151D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL DUP2 MSTORE PUSH2 0x159F PUSH1 0x11 DUP3 ADD DUP7 PUSH2 0x151D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL DUP2 MSTORE SWAP1 POP PUSH2 0x15BF PUSH1 0xB DUP3 ADD DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 PUSH2 0x5C0 PUSH1 0x1D DUP4 ADD DUP5 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1637 SWAP1 DUP4 ADD DUP5 PUSH2 0x1289 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID SLOAD PUSH9 0x697320697320636F6E PUSH21 0x72616374206465736372697074696F6E2E4465706F PUSH13 0x796564206279206A7573747765 PUSH10 0x27732045524337323120 PREVRANDAO PUSH10 0x616D6F6E6420696D706C PUSH6 0x6D656E746174 PUSH10 0x6F6E2E697066733A2F2F MLOAD PUSH14 0x636967396548385857455A5A7546 CODECOPY GAS SELFBALANCE MLOAD PREVRANDAO CALLDATACOPY PUSH8 0x4141484D446A3739 PUSH20 0x543875643738375067443537754E414243444546 SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xBB EXTCODESIZE 0xBB STOP PUSH4 0x3FEEC7A6 PUSH11 0x2814DDFA954D94E7D141B2 0xC1 0xDF 0xD4 PUSH25 0x2EC799C68541B464736F6C634300081B003300000000000000 ",
							"sourceMap": "418:4550:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_2538": {
									"entryPoint": 3667,
									"id": 2538,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_2513": {
									"entryPoint": 4255,
									"id": 2513,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_2935": {
									"entryPoint": 1769,
									"id": 2935,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_3010": {
									"entryPoint": 3252,
									"id": 3010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_1878": {
									"entryPoint": null,
									"id": 1878,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2306": {
									"entryPoint": 3567,
									"id": 2306,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_contractDescription_1894": {
									"entryPoint": 2804,
									"id": 1894,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_contractImage_1886": {
									"entryPoint": 2836,
									"id": 1886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getApproved_2226": {
									"entryPoint": 1732,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2265": {
									"entryPoint": 4601,
									"id": 2265,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_ownerOf_2211": {
									"entryPoint": 3215,
									"id": 2211,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_2673": {
									"entryPoint": 4016,
									"id": 2673,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_2612": {
									"entryPoint": 3737,
									"id": 2612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_3084": {
									"entryPoint": 1677,
									"id": 3084,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_3053": {
									"entryPoint": 2188,
									"id": 3053,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_2476": {
									"entryPoint": 1782,
									"id": 2476,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_1747": {
									"entryPoint": 769,
									"id": 1747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_1623": {
									"entryPoint": 1189,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkOnERC721Received_3153": {
									"entryPoint": 2364,
									"id": 3153,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@contractURI_1832": {
									"entryPoint": 1479,
									"id": 1832,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@encode_63": {
									"entryPoint": 2868,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_1783": {
									"entryPoint": 743,
									"id": 1783,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_1802": {
									"entryPoint": 1582,
									"id": 1802,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@layout_2196": {
									"entryPoint": 1641,
									"id": 2196,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@log10_1193": {
									"entryPoint": 4386,
									"id": 1193,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_1508": {
									"entryPoint": 593,
									"id": 1508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1636": {
									"entryPoint": 1179,
									"id": 1636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1653": {
									"entryPoint": 1055,
									"id": 1653,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1682": {
									"entryPoint": 1316,
									"id": 1682,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_1764": {
									"entryPoint": 1305,
									"id": 1764,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_1519": {
									"entryPoint": 1281,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_132": {
									"entryPoint": 2660,
									"id": 132,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1595": {
									"entryPoint": 1086,
									"id": 1595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1564": {
									"entryPoint": 944,
									"id": 1564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1870": {
									"entryPoint": 1340,
									"id": 1870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1531": {
									"entryPoint": 784,
									"id": 1531,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1730": {
									"entryPoint": 802,
									"id": 1730,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5470,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5736,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9461:12",
										"nodeType": "YulBlock",
										"src": "0:9461:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "75:239:12",
													"nodeType": "YulBlock",
													"src": "75:239:12",
													"statements": [
														{
															"nativeSrc": "85:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "85:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "105:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "105:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "99:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "99:5:12"
																},
																"nativeSrc": "99:12:12",
																"nodeType": "YulFunctionCall",
																"src": "99:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "89:6:12",
																	"nodeType": "YulTypedName",
																	"src": "89:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "127:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "127:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "132:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "132:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:19:12",
																"nodeType": "YulFunctionCall",
																"src": "120:19:12"
															},
															"nativeSrc": "120:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:19:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "158:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "158:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "163:4:12",
																				"nodeType": "YulLiteral",
																				"src": "163:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "154:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "154:3:12"
																		},
																		"nativeSrc": "154:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "154:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "174:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "174:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "181:4:12",
																				"nodeType": "YulLiteral",
																				"src": "181:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "170:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "170:3:12"
																		},
																		"nativeSrc": "170:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "170:16:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "188:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "188:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "148:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "148:5:12"
																},
																"nativeSrc": "148:47:12",
																"nodeType": "YulFunctionCall",
																"src": "148:47:12"
															},
															"nativeSrc": "148:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "148:47:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "219:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "219:3:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "224:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "224:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "215:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "215:3:12"
																				},
																				"nativeSrc": "215:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "215:16:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:4:12",
																				"nodeType": "YulLiteral",
																				"src": "233:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "211:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "211:3:12"
																		},
																		"nativeSrc": "211:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "211:27:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "240:1:12",
																		"nodeType": "YulLiteral",
																		"src": "240:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "204:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "204:6:12"
																},
																"nativeSrc": "204:38:12",
																"nodeType": "YulFunctionCall",
																"src": "204:38:12"
															},
															"nativeSrc": "204:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "204:38:12"
														},
														{
															"nativeSrc": "251:57:12",
															"nodeType": "YulAssignment",
															"src": "251:57:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "266:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "266:3:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "279:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "279:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "287:2:12",
																								"nodeType": "YulLiteral",
																								"src": "287:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "275:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "275:3:12"
																						},
																						"nativeSrc": "275:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "275:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "296:2:12",
																								"nodeType": "YulLiteral",
																								"src": "296:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "292:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "292:3:12"
																						},
																						"nativeSrc": "292:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "292:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "271:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "271:3:12"
																				},
																				"nativeSrc": "271:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "271:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "262:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "262:3:12"
																		},
																		"nativeSrc": "262:39:12",
																		"nodeType": "YulFunctionCall",
																		"src": "262:39:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "303:4:12",
																		"nodeType": "YulLiteral",
																		"src": "303:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "258:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "258:3:12"
																},
																"nativeSrc": "258:50:12",
																"nodeType": "YulFunctionCall",
																"src": "258:50:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "251:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "251:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "14:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "52:5:12",
														"nodeType": "YulTypedName",
														"src": "52:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "59:3:12",
														"nodeType": "YulTypedName",
														"src": "59:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "67:3:12",
														"nodeType": "YulTypedName",
														"src": "67:3:12",
														"type": ""
													}
												],
												"src": "14:300:12"
											},
											{
												"body": {
													"nativeSrc": "440:110:12",
													"nodeType": "YulBlock",
													"src": "440:110:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "457:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "457:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "468:2:12",
																		"nodeType": "YulLiteral",
																		"src": "468:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "450:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "450:6:12"
																},
																"nativeSrc": "450:21:12",
																"nodeType": "YulFunctionCall",
																"src": "450:21:12"
															},
															"nativeSrc": "450:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "450:21:12"
														},
														{
															"nativeSrc": "480:64:12",
															"nodeType": "YulAssignment",
															"src": "480:64:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "517:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "517:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "529:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:12",
																				"nodeType": "YulLiteral",
																				"src": "540:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "525:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:12"
																		},
																		"nativeSrc": "525:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "488:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "488:28:12"
																},
																"nativeSrc": "488:56:12",
																"nodeType": "YulFunctionCall",
																"src": "488:56:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "480:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "480:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "319:231:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "409:9:12",
														"nodeType": "YulTypedName",
														"src": "409:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "420:6:12",
														"nodeType": "YulTypedName",
														"src": "420:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "431:4:12",
														"nodeType": "YulTypedName",
														"src": "431:4:12",
														"type": ""
													}
												],
												"src": "319:231:12"
											},
											{
												"body": {
													"nativeSrc": "625:156:12",
													"nodeType": "YulBlock",
													"src": "625:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "671:16:12",
																"nodeType": "YulBlock",
																"src": "671:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "683:1:12",
																					"nodeType": "YulLiteral",
																					"src": "683:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "673:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "673:6:12"
																			},
																			"nativeSrc": "673:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "673:12:12"
																		},
																		"nativeSrc": "673:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "673:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "646:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "655:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "655:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "642:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "642:3:12"
																		},
																		"nativeSrc": "642:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "642:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "667:2:12",
																		"nodeType": "YulLiteral",
																		"src": "667:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "638:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "638:3:12"
																},
																"nativeSrc": "638:32:12",
																"nodeType": "YulFunctionCall",
																"src": "638:32:12"
															},
															"nativeSrc": "635:52:12",
															"nodeType": "YulIf",
															"src": "635:52:12"
														},
														{
															"nativeSrc": "696:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "696:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "709:1:12",
																"nodeType": "YulLiteral",
																"src": "709:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "700:5:12",
																	"nodeType": "YulTypedName",
																	"src": "700:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "719:32:12",
															"nodeType": "YulAssignment",
															"src": "719:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "741:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "741:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "728:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "728:12:12"
																},
																"nativeSrc": "728:23:12",
																"nodeType": "YulFunctionCall",
																"src": "728:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "719:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "719:5:12"
																}
															]
														},
														{
															"nativeSrc": "760:15:12",
															"nodeType": "YulAssignment",
															"src": "760:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "770:5:12",
																"nodeType": "YulIdentifier",
																"src": "770:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "760:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "760:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "555:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "591:9:12",
														"nodeType": "YulTypedName",
														"src": "591:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "602:7:12",
														"nodeType": "YulTypedName",
														"src": "602:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "614:6:12",
														"nodeType": "YulTypedName",
														"src": "614:6:12",
														"type": ""
													}
												],
												"src": "555:226:12"
											},
											{
												"body": {
													"nativeSrc": "887:102:12",
													"nodeType": "YulBlock",
													"src": "887:102:12",
													"statements": [
														{
															"nativeSrc": "897:26:12",
															"nodeType": "YulAssignment",
															"src": "897:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "909:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "920:2:12",
																		"nodeType": "YulLiteral",
																		"src": "920:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "905:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "905:3:12"
																},
																"nativeSrc": "905:18:12",
																"nodeType": "YulFunctionCall",
																"src": "905:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "897:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "897:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "939:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "939:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "954:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "954:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "970:3:12",
																								"nodeType": "YulLiteral",
																								"src": "970:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "975:1:12",
																								"nodeType": "YulLiteral",
																								"src": "975:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "966:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "966:3:12"
																						},
																						"nativeSrc": "966:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "966:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "979:1:12",
																						"nodeType": "YulLiteral",
																						"src": "979:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "962:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "962:3:12"
																				},
																				"nativeSrc": "962:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "962:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:12"
																		},
																		"nativeSrc": "950:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "950:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "932:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "932:6:12"
																},
																"nativeSrc": "932:51:12",
																"nodeType": "YulFunctionCall",
																"src": "932:51:12"
															},
															"nativeSrc": "932:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "932:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "786:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "856:9:12",
														"nodeType": "YulTypedName",
														"src": "856:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "867:6:12",
														"nodeType": "YulTypedName",
														"src": "867:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "878:4:12",
														"nodeType": "YulTypedName",
														"src": "878:4:12",
														"type": ""
													}
												],
												"src": "786:203:12"
											},
											{
												"body": {
													"nativeSrc": "1043:124:12",
													"nodeType": "YulBlock",
													"src": "1043:124:12",
													"statements": [
														{
															"nativeSrc": "1053:29:12",
															"nodeType": "YulAssignment",
															"src": "1053:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1075:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1075:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1062:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1062:12:12"
																},
																"nativeSrc": "1062:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1062:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1053:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1053:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1145:16:12",
																"nodeType": "YulBlock",
																"src": "1145:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1154:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1154:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1157:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1157:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1147:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1147:6:12"
																			},
																			"nativeSrc": "1147:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1147:12:12"
																		},
																		"nativeSrc": "1147:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1147:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1104:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1104:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1115:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1115:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1130:3:12",
																										"nodeType": "YulLiteral",
																										"src": "1130:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1135:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1135:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1126:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1126:3:12"
																								},
																								"nativeSrc": "1126:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1126:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1139:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1139:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1122:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1122:3:12"
																						},
																						"nativeSrc": "1122:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1122:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1111:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1111:3:12"
																				},
																				"nativeSrc": "1111:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1111:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1101:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1101:2:12"
																		},
																		"nativeSrc": "1101:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1101:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1094:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:12"
																},
																"nativeSrc": "1094:50:12",
																"nodeType": "YulFunctionCall",
																"src": "1094:50:12"
															},
															"nativeSrc": "1091:70:12",
															"nodeType": "YulIf",
															"src": "1091:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "994:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1022:6:12",
														"nodeType": "YulTypedName",
														"src": "1022:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1033:5:12",
														"nodeType": "YulTypedName",
														"src": "1033:5:12",
														"type": ""
													}
												],
												"src": "994:173:12"
											},
											{
												"body": {
													"nativeSrc": "1259:213:12",
													"nodeType": "YulBlock",
													"src": "1259:213:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:16:12",
																"nodeType": "YulBlock",
																"src": "1305:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1314:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1314:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1317:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1317:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1307:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1307:6:12"
																			},
																			"nativeSrc": "1307:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:12:12"
																		},
																		"nativeSrc": "1307:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:12"
																		},
																		"nativeSrc": "1276:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:12"
																},
																"nativeSrc": "1272:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:12"
															},
															"nativeSrc": "1269:52:12",
															"nodeType": "YulIf",
															"src": "1269:52:12"
														},
														{
															"nativeSrc": "1330:39:12",
															"nodeType": "YulAssignment",
															"src": "1330:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1359:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1359:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1340:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1340:18:12"
																},
																"nativeSrc": "1340:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1340:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1330:6:12"
																}
															]
														},
														{
															"nativeSrc": "1378:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1378:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1391:1:12",
																"nodeType": "YulLiteral",
																"src": "1391:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1382:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1382:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1401:41:12",
															"nodeType": "YulAssignment",
															"src": "1401:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:12"
																		},
																		"nativeSrc": "1423:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1410:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1410:12:12"
																},
																"nativeSrc": "1410:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1410:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1401:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1401:5:12"
																}
															]
														},
														{
															"nativeSrc": "1451:15:12",
															"nodeType": "YulAssignment",
															"src": "1451:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "1461:5:12",
																"nodeType": "YulIdentifier",
																"src": "1461:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1451:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1172:300:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1217:9:12",
														"nodeType": "YulTypedName",
														"src": "1217:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1228:7:12",
														"nodeType": "YulTypedName",
														"src": "1228:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1240:6:12",
														"nodeType": "YulTypedName",
														"src": "1240:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1248:6:12",
														"nodeType": "YulTypedName",
														"src": "1248:6:12",
														"type": ""
													}
												],
												"src": "1172:300:12"
											},
											{
												"body": {
													"nativeSrc": "1578:76:12",
													"nodeType": "YulBlock",
													"src": "1578:76:12",
													"statements": [
														{
															"nativeSrc": "1588:26:12",
															"nodeType": "YulAssignment",
															"src": "1588:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1600:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1600:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1611:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1611:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1596:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:12"
																},
																"nativeSrc": "1596:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1596:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1588:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1588:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1630:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1630:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1641:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1641:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1623:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:12"
																},
																"nativeSrc": "1623:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1623:25:12"
															},
															"nativeSrc": "1623:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1623:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1477:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1547:9:12",
														"nodeType": "YulTypedName",
														"src": "1547:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1558:6:12",
														"nodeType": "YulTypedName",
														"src": "1558:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1569:4:12",
														"nodeType": "YulTypedName",
														"src": "1569:4:12",
														"type": ""
													}
												],
												"src": "1477:177:12"
											},
											{
												"body": {
													"nativeSrc": "1763:270:12",
													"nodeType": "YulBlock",
													"src": "1763:270:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1809:16:12",
																"nodeType": "YulBlock",
																"src": "1809:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1818:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1818:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1821:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1821:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1811:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1811:6:12"
																			},
																			"nativeSrc": "1811:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1811:12:12"
																		},
																		"nativeSrc": "1811:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1811:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1784:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1784:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1793:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1793:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1780:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1780:3:12"
																		},
																		"nativeSrc": "1780:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1780:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1805:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1805:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1776:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1776:3:12"
																},
																"nativeSrc": "1776:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1776:32:12"
															},
															"nativeSrc": "1773:52:12",
															"nodeType": "YulIf",
															"src": "1773:52:12"
														},
														{
															"nativeSrc": "1834:39:12",
															"nodeType": "YulAssignment",
															"src": "1834:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1863:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1863:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1844:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1844:18:12"
																},
																"nativeSrc": "1844:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1844:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1834:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1834:6:12"
																}
															]
														},
														{
															"nativeSrc": "1882:48:12",
															"nodeType": "YulAssignment",
															"src": "1882:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1915:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1915:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1926:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1926:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1911:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1911:3:12"
																		},
																		"nativeSrc": "1911:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1911:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1892:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1892:18:12"
																},
																"nativeSrc": "1892:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1892:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1882:6:12"
																}
															]
														},
														{
															"nativeSrc": "1939:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1939:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1952:1:12",
																"nodeType": "YulLiteral",
																"src": "1952:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1943:5:12",
																	"nodeType": "YulTypedName",
																	"src": "1943:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1962:41:12",
															"nodeType": "YulAssignment",
															"src": "1962:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1988:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1988:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1999:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1999:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1984:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1984:3:12"
																		},
																		"nativeSrc": "1984:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1984:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1971:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1971:12:12"
																},
																"nativeSrc": "1971:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1971:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1962:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1962:5:12"
																}
															]
														},
														{
															"nativeSrc": "2012:15:12",
															"nodeType": "YulAssignment",
															"src": "2012:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2022:5:12",
																"nodeType": "YulIdentifier",
																"src": "2022:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2012:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1659:374:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1713:9:12",
														"nodeType": "YulTypedName",
														"src": "1713:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1724:7:12",
														"nodeType": "YulTypedName",
														"src": "1724:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1736:6:12",
														"nodeType": "YulTypedName",
														"src": "1736:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1744:6:12",
														"nodeType": "YulTypedName",
														"src": "1744:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1752:6:12",
														"nodeType": "YulTypedName",
														"src": "1752:6:12",
														"type": ""
													}
												],
												"src": "1659:374:12"
											},
											{
												"body": {
													"nativeSrc": "2108:116:12",
													"nodeType": "YulBlock",
													"src": "2108:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2154:16:12",
																"nodeType": "YulBlock",
																"src": "2154:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2163:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2163:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2166:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2166:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2156:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2156:6:12"
																			},
																			"nativeSrc": "2156:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2156:12:12"
																		},
																		"nativeSrc": "2156:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2156:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2129:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2129:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2138:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2138:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2125:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:12"
																		},
																		"nativeSrc": "2125:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2150:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2150:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2121:3:12"
																},
																"nativeSrc": "2121:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2121:32:12"
															},
															"nativeSrc": "2118:52:12",
															"nodeType": "YulIf",
															"src": "2118:52:12"
														},
														{
															"nativeSrc": "2179:39:12",
															"nodeType": "YulAssignment",
															"src": "2179:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2208:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2208:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2189:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2189:18:12"
																},
																"nativeSrc": "2189:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2189:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2179:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2179:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2038:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2074:9:12",
														"nodeType": "YulTypedName",
														"src": "2074:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2085:7:12",
														"nodeType": "YulTypedName",
														"src": "2085:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2097:6:12",
														"nodeType": "YulTypedName",
														"src": "2097:6:12",
														"type": ""
													}
												],
												"src": "2038:186:12"
											},
											{
												"body": {
													"nativeSrc": "2313:263:12",
													"nodeType": "YulBlock",
													"src": "2313:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2359:16:12",
																"nodeType": "YulBlock",
																"src": "2359:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2368:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2368:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2371:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2371:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2361:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2361:6:12"
																			},
																			"nativeSrc": "2361:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2361:12:12"
																		},
																		"nativeSrc": "2361:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2361:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2334:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2334:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2343:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2343:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2330:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2330:3:12"
																		},
																		"nativeSrc": "2330:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2330:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2355:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2355:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2326:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:12"
																},
																"nativeSrc": "2326:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2326:32:12"
															},
															"nativeSrc": "2323:52:12",
															"nodeType": "YulIf",
															"src": "2323:52:12"
														},
														{
															"nativeSrc": "2384:39:12",
															"nodeType": "YulAssignment",
															"src": "2384:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2413:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2413:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2394:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2394:18:12"
																},
																"nativeSrc": "2394:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2394:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2384:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:12"
																}
															]
														},
														{
															"nativeSrc": "2432:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2432:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2462:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2462:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2473:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2473:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2458:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:12"
																		},
																		"nativeSrc": "2458:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2458:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2445:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2445:12:12"
																},
																"nativeSrc": "2445:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2445:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2436:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2436:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2530:16:12",
																"nodeType": "YulBlock",
																"src": "2530:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2539:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2539:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2542:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2542:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2532:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2532:6:12"
																			},
																			"nativeSrc": "2532:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2532:12:12"
																		},
																		"nativeSrc": "2532:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2499:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2499:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2520:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2520:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2513:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2513:6:12"
																						},
																						"nativeSrc": "2513:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2513:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2506:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2506:6:12"
																				},
																				"nativeSrc": "2506:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2506:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2496:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2496:2:12"
																		},
																		"nativeSrc": "2496:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2489:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:12"
																},
																"nativeSrc": "2489:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2489:40:12"
															},
															"nativeSrc": "2486:60:12",
															"nodeType": "YulIf",
															"src": "2486:60:12"
														},
														{
															"nativeSrc": "2555:15:12",
															"nodeType": "YulAssignment",
															"src": "2555:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2565:5:12",
																"nodeType": "YulIdentifier",
																"src": "2565:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2555:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2229:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2271:9:12",
														"nodeType": "YulTypedName",
														"src": "2271:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2282:7:12",
														"nodeType": "YulTypedName",
														"src": "2282:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2294:6:12",
														"nodeType": "YulTypedName",
														"src": "2294:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2302:6:12",
														"nodeType": "YulTypedName",
														"src": "2302:6:12",
														"type": ""
													}
												],
												"src": "2229:347:12"
											},
											{
												"body": {
													"nativeSrc": "2613:95:12",
													"nodeType": "YulBlock",
													"src": "2613:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2630:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2630:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2637:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2637:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2642:10:12",
																				"nodeType": "YulLiteral",
																				"src": "2642:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2633:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2633:3:12"
																		},
																		"nativeSrc": "2633:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2633:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2623:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2623:6:12"
																},
																"nativeSrc": "2623:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2623:31:12"
															},
															"nativeSrc": "2623:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2623:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2670:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2670:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2673:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2673:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2663:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2663:6:12"
																},
																"nativeSrc": "2663:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2663:15:12"
															},
															"nativeSrc": "2663:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2663:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2694:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2694:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2697:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2697:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2687:6:12"
																},
																"nativeSrc": "2687:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2687:15:12"
															},
															"nativeSrc": "2687:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2687:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2581:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2581:127:12"
											},
											{
												"body": {
													"nativeSrc": "2843:1077:12",
													"nodeType": "YulBlock",
													"src": "2843:1077:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2890:16:12",
																"nodeType": "YulBlock",
																"src": "2890:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2899:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2899:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2902:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2892:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:12"
																			},
																			"nativeSrc": "2892:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:12:12"
																		},
																		"nativeSrc": "2892:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2892:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2864:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2864:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2873:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2873:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2860:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2860:3:12"
																		},
																		"nativeSrc": "2860:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2860:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2885:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2856:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2856:3:12"
																},
																"nativeSrc": "2856:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2856:33:12"
															},
															"nativeSrc": "2853:53:12",
															"nodeType": "YulIf",
															"src": "2853:53:12"
														},
														{
															"nativeSrc": "2915:39:12",
															"nodeType": "YulAssignment",
															"src": "2915:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2944:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2944:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2925:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2925:18:12"
																},
																"nativeSrc": "2925:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2925:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:12"
																}
															]
														},
														{
															"nativeSrc": "2963:48:12",
															"nodeType": "YulAssignment",
															"src": "2963:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2996:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2996:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2992:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2992:3:12"
																		},
																		"nativeSrc": "2992:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2992:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2973:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2973:18:12"
																},
																"nativeSrc": "2973:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2963:6:12"
																}
															]
														},
														{
															"nativeSrc": "3020:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3020:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3033:1:12",
																"nodeType": "YulLiteral",
																"src": "3033:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3024:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3024:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3043:41:12",
															"nodeType": "YulAssignment",
															"src": "3043:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3069:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3069:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3080:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3080:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3065:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3065:3:12"
																		},
																		"nativeSrc": "3065:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3065:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3052:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3052:12:12"
																},
																"nativeSrc": "3052:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3052:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3043:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3043:5:12"
																}
															]
														},
														{
															"nativeSrc": "3093:15:12",
															"nodeType": "YulAssignment",
															"src": "3093:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3103:5:12",
																"nodeType": "YulIdentifier",
																"src": "3103:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3093:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3093:6:12"
																}
															]
														},
														{
															"nativeSrc": "3117:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3117:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3148:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3148:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3159:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3159:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3144:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3144:3:12"
																		},
																		"nativeSrc": "3144:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3144:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3131:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3131:12:12"
																},
																"nativeSrc": "3131:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3131:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3121:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3121:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3206:16:12",
																"nodeType": "YulBlock",
																"src": "3206:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3215:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3215:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3218:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3218:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3208:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3208:6:12"
																			},
																			"nativeSrc": "3208:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:12"
																		},
																		"nativeSrc": "3208:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3208:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3178:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3178:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3186:18:12",
																		"nodeType": "YulLiteral",
																		"src": "3186:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3175:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3175:2:12"
																},
																"nativeSrc": "3175:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3175:30:12"
															},
															"nativeSrc": "3172:50:12",
															"nodeType": "YulIf",
															"src": "3172:50:12"
														},
														{
															"nativeSrc": "3231:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3231:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3245:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3256:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3256:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:12"
																},
																"nativeSrc": "3241:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3241:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3235:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3235:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3311:16:12",
																"nodeType": "YulBlock",
																"src": "3311:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3320:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3320:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3323:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3323:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3313:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:12"
																			},
																			"nativeSrc": "3313:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3313:12:12"
																		},
																		"nativeSrc": "3313:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3313:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3290:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3290:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3294:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3294:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3286:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3286:3:12"
																				},
																				"nativeSrc": "3286:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3286:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3301:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3282:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3282:3:12"
																		},
																		"nativeSrc": "3282:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3282:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3275:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3275:6:12"
																},
																"nativeSrc": "3275:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3275:35:12"
															},
															"nativeSrc": "3272:55:12",
															"nodeType": "YulIf",
															"src": "3272:55:12"
														},
														{
															"nativeSrc": "3336:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3336:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3363:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3363:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3350:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3350:12:12"
																},
																"nativeSrc": "3350:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3350:16:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3340:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3340:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3409:22:12",
																"nodeType": "YulBlock",
																"src": "3409:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3411:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "3411:16:12"
																			},
																			"nativeSrc": "3411:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3411:18:12"
																		},
																		"nativeSrc": "3411:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3411:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3381:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3381:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3389:18:12",
																		"nodeType": "YulLiteral",
																		"src": "3389:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3378:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3378:2:12"
																},
																"nativeSrc": "3378:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3378:30:12"
															},
															"nativeSrc": "3375:56:12",
															"nodeType": "YulIf",
															"src": "3375:56:12"
														},
														{
															"nativeSrc": "3440:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3440:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3460:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3454:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3454:5:12"
																},
																"nativeSrc": "3454:9:12",
																"nodeType": "YulFunctionCall",
																"src": "3454:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3444:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3444:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3472:85:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3472:85:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3494:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3494:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3518:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3518:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3526:4:12",
																										"nodeType": "YulLiteral",
																										"src": "3526:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3514:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3514:3:12"
																								},
																								"nativeSrc": "3514:17:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3514:17:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3537:2:12",
																										"nodeType": "YulLiteral",
																										"src": "3537:2:12",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3533:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3533:3:12"
																								},
																								"nativeSrc": "3533:7:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3533:7:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3510:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3510:3:12"
																						},
																						"nativeSrc": "3510:31:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3510:31:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3543:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3543:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3506:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3506:3:12"
																				},
																				"nativeSrc": "3506:40:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3506:40:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3552:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3552:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3548:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3548:3:12"
																				},
																				"nativeSrc": "3548:7:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3548:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3502:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:12"
																		},
																		"nativeSrc": "3502:54:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:54:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3490:3:12"
																},
																"nativeSrc": "3490:67:12",
																"nodeType": "YulFunctionCall",
																"src": "3490:67:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3476:10:12",
																	"nodeType": "YulTypedName",
																	"src": "3476:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3632:22:12",
																"nodeType": "YulBlock",
																"src": "3632:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3634:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "3634:16:12"
																			},
																			"nativeSrc": "3634:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3634:18:12"
																		},
																		"nativeSrc": "3634:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3634:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3575:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "3575:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3587:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3587:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3572:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3572:2:12"
																		},
																		"nativeSrc": "3572:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3572:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3611:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "3611:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3623:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3623:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3608:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3608:2:12"
																		},
																		"nativeSrc": "3608:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3569:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3569:2:12"
																},
																"nativeSrc": "3569:62:12",
																"nodeType": "YulFunctionCall",
																"src": "3569:62:12"
															},
															"nativeSrc": "3566:88:12",
															"nodeType": "YulIf",
															"src": "3566:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3670:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3670:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3674:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "3674:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3663:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3663:6:12"
																},
																"nativeSrc": "3663:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3663:22:12"
															},
															"nativeSrc": "3663:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "3663:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3701:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3701:6:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3709:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3709:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3694:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3694:6:12"
																},
																"nativeSrc": "3694:22:12",
																"nodeType": "YulFunctionCall",
																"src": "3694:22:12"
															},
															"nativeSrc": "3694:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "3694:22:12"
														},
														{
															"body": {
																"nativeSrc": "3766:16:12",
																"nodeType": "YulBlock",
																"src": "3766:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3775:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3775:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3778:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3768:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3768:6:12"
																			},
																			"nativeSrc": "3768:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3768:12:12"
																		},
																		"nativeSrc": "3768:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3768:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3739:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3739:2:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3743:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3743:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3735:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3735:3:12"
																				},
																				"nativeSrc": "3735:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3735:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3752:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3752:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3731:3:12"
																		},
																		"nativeSrc": "3731:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3731:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3757:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3757:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3728:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3728:2:12"
																},
																"nativeSrc": "3728:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3728:37:12"
															},
															"nativeSrc": "3725:57:12",
															"nodeType": "YulIf",
															"src": "3725:57:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3808:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3808:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3816:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3816:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3804:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:12"
																		},
																		"nativeSrc": "3804:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3804:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3825:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3825:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3829:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3821:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3821:3:12"
																		},
																		"nativeSrc": "3821:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3821:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3834:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3834:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3791:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3791:12:12"
																},
																"nativeSrc": "3791:50:12",
																"nodeType": "YulFunctionCall",
																"src": "3791:50:12"
															},
															"nativeSrc": "3791:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "3791:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3865:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3865:6:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3873:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3861:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3861:3:12"
																				},
																				"nativeSrc": "3861:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3861:19:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3882:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3882:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3857:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3857:3:12"
																		},
																		"nativeSrc": "3857:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3857:28:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3887:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3850:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3850:6:12"
																},
																"nativeSrc": "3850:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3850:39:12"
															},
															"nativeSrc": "3850:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "3850:39:12"
														},
														{
															"nativeSrc": "3898:16:12",
															"nodeType": "YulAssignment",
															"src": "3898:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3908:6:12",
																"nodeType": "YulIdentifier",
																"src": "3908:6:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3898:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3898:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "2713:1207:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2785:9:12",
														"nodeType": "YulTypedName",
														"src": "2785:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2796:7:12",
														"nodeType": "YulTypedName",
														"src": "2796:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2808:6:12",
														"nodeType": "YulTypedName",
														"src": "2808:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2816:6:12",
														"nodeType": "YulTypedName",
														"src": "2816:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2824:6:12",
														"nodeType": "YulTypedName",
														"src": "2824:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2832:6:12",
														"nodeType": "YulTypedName",
														"src": "2832:6:12",
														"type": ""
													}
												],
												"src": "2713:1207:12"
											},
											{
												"body": {
													"nativeSrc": "4012:173:12",
													"nodeType": "YulBlock",
													"src": "4012:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4058:16:12",
																"nodeType": "YulBlock",
																"src": "4058:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4067:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4067:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4070:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4070:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4060:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4060:6:12"
																			},
																			"nativeSrc": "4060:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4060:12:12"
																		},
																		"nativeSrc": "4060:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4060:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4033:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4033:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4042:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4042:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4029:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4029:3:12"
																		},
																		"nativeSrc": "4029:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4029:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4054:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4054:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:12"
																},
																"nativeSrc": "4025:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4025:32:12"
															},
															"nativeSrc": "4022:52:12",
															"nodeType": "YulIf",
															"src": "4022:52:12"
														},
														{
															"nativeSrc": "4083:39:12",
															"nodeType": "YulAssignment",
															"src": "4083:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4112:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4112:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4093:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4093:18:12"
																},
																"nativeSrc": "4093:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4093:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4083:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:12"
																}
															]
														},
														{
															"nativeSrc": "4131:48:12",
															"nodeType": "YulAssignment",
															"src": "4131:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4164:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4164:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4175:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4175:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4160:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:12"
																		},
																		"nativeSrc": "4160:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4141:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4141:18:12"
																},
																"nativeSrc": "4141:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4141:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3925:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3970:9:12",
														"nodeType": "YulTypedName",
														"src": "3970:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3981:7:12",
														"nodeType": "YulTypedName",
														"src": "3981:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3993:6:12",
														"nodeType": "YulTypedName",
														"src": "3993:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4001:6:12",
														"nodeType": "YulTypedName",
														"src": "4001:6:12",
														"type": ""
													}
												],
												"src": "3925:260:12"
											},
											{
												"body": {
													"nativeSrc": "4285:92:12",
													"nodeType": "YulBlock",
													"src": "4285:92:12",
													"statements": [
														{
															"nativeSrc": "4295:26:12",
															"nodeType": "YulAssignment",
															"src": "4295:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4307:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4307:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4318:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4303:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4303:3:12"
																},
																"nativeSrc": "4303:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4303:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4295:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4295:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4337:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4337:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "4362:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4362:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4355:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4355:6:12"
																				},
																				"nativeSrc": "4355:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4355:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4348:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4348:6:12"
																		},
																		"nativeSrc": "4348:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4348:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4330:6:12"
																},
																"nativeSrc": "4330:41:12",
																"nodeType": "YulFunctionCall",
																"src": "4330:41:12"
															},
															"nativeSrc": "4330:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "4330:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4190:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4254:9:12",
														"nodeType": "YulTypedName",
														"src": "4254:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4265:6:12",
														"nodeType": "YulTypedName",
														"src": "4265:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4276:4:12",
														"nodeType": "YulTypedName",
														"src": "4276:4:12",
														"type": ""
													}
												],
												"src": "4190:187:12"
											},
											{
												"body": {
													"nativeSrc": "4437:325:12",
													"nodeType": "YulBlock",
													"src": "4437:325:12",
													"statements": [
														{
															"nativeSrc": "4447:22:12",
															"nodeType": "YulAssignment",
															"src": "4447:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4461:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4461:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4464:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4464:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4457:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4457:3:12"
																},
																"nativeSrc": "4457:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4457:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4447:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:12"
																}
															]
														},
														{
															"nativeSrc": "4478:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4478:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4508:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4508:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4514:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4514:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4504:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4504:3:12"
																},
																"nativeSrc": "4504:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4504:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4482:18:12",
																	"nodeType": "YulTypedName",
																	"src": "4482:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4555:31:12",
																"nodeType": "YulBlock",
																"src": "4555:31:12",
																"statements": [
																	{
																		"nativeSrc": "4557:27:12",
																		"nodeType": "YulAssignment",
																		"src": "4557:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4571:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4571:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4579:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4579:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4567:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4567:3:12"
																			},
																			"nativeSrc": "4567:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4567:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4557:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4557:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4535:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4535:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4528:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:12"
																},
																"nativeSrc": "4528:26:12",
																"nodeType": "YulFunctionCall",
																"src": "4528:26:12"
															},
															"nativeSrc": "4525:61:12",
															"nodeType": "YulIf",
															"src": "4525:61:12"
														},
														{
															"body": {
																"nativeSrc": "4645:111:12",
																"nodeType": "YulBlock",
																"src": "4645:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4666:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4666:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4673:3:12",
																							"nodeType": "YulLiteral",
																							"src": "4673:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4678:10:12",
																							"nodeType": "YulLiteral",
																							"src": "4678:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4669:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4669:3:12"
																					},
																					"nativeSrc": "4669:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4669:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4659:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4659:6:12"
																			},
																			"nativeSrc": "4659:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4659:31:12"
																		},
																		"nativeSrc": "4659:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4659:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4710:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4713:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4713:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4703:6:12"
																			},
																			"nativeSrc": "4703:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:15:12"
																		},
																		"nativeSrc": "4703:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4738:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4741:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4741:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4731:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4731:6:12"
																			},
																			"nativeSrc": "4731:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4731:15:12"
																		},
																		"nativeSrc": "4731:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4731:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4601:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "4601:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4624:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4624:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4632:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4632:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4621:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4621:2:12"
																		},
																		"nativeSrc": "4621:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4621:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4598:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4598:2:12"
																},
																"nativeSrc": "4598:38:12",
																"nodeType": "YulFunctionCall",
																"src": "4598:38:12"
															},
															"nativeSrc": "4595:161:12",
															"nodeType": "YulIf",
															"src": "4595:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4382:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4417:4:12",
														"nodeType": "YulTypedName",
														"src": "4417:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4426:6:12",
														"nodeType": "YulTypedName",
														"src": "4426:6:12",
														"type": ""
													}
												],
												"src": "4382:380:12"
											},
											{
												"body": {
													"nativeSrc": "4924:214:12",
													"nodeType": "YulBlock",
													"src": "4924:214:12",
													"statements": [
														{
															"nativeSrc": "4934:26:12",
															"nodeType": "YulAssignment",
															"src": "4934:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4946:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4946:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4957:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4957:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4942:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4942:3:12"
																},
																"nativeSrc": "4942:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4942:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4934:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4934:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4976:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4976:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4991:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4991:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5007:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5007:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5012:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5012:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5003:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5003:3:12"
																						},
																						"nativeSrc": "5003:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5003:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5016:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4999:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4999:3:12"
																				},
																				"nativeSrc": "4999:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4999:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4987:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4987:3:12"
																		},
																		"nativeSrc": "4987:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4987:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:12"
																},
																"nativeSrc": "4969:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4969:51:12"
															},
															"nativeSrc": "4969:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4969:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5040:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5036:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:12"
																		},
																		"nativeSrc": "5036:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5056:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5056:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5029:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:12"
																},
																"nativeSrc": "5029:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5029:34:12"
															},
															"nativeSrc": "5029:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5029:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5083:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5083:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5094:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5094:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5079:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5079:3:12"
																		},
																		"nativeSrc": "5079:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5079:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "5103:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5103:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5119:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5119:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5124:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5124:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5115:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5115:3:12"
																						},
																						"nativeSrc": "5115:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5115:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5128:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5128:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5111:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5111:3:12"
																				},
																				"nativeSrc": "5111:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5111:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5099:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5099:3:12"
																		},
																		"nativeSrc": "5099:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5099:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5072:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5072:6:12"
																},
																"nativeSrc": "5072:60:12",
																"nodeType": "YulFunctionCall",
																"src": "5072:60:12"
															},
															"nativeSrc": "5072:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "5072:60:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "4767:371:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4877:9:12",
														"nodeType": "YulTypedName",
														"src": "4877:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4888:6:12",
														"nodeType": "YulTypedName",
														"src": "4888:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4896:6:12",
														"nodeType": "YulTypedName",
														"src": "4896:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4904:6:12",
														"nodeType": "YulTypedName",
														"src": "4904:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4915:4:12",
														"nodeType": "YulTypedName",
														"src": "4915:4:12",
														"type": ""
													}
												],
												"src": "4767:371:12"
											},
											{
												"body": {
													"nativeSrc": "5272:145:12",
													"nodeType": "YulBlock",
													"src": "5272:145:12",
													"statements": [
														{
															"nativeSrc": "5282:26:12",
															"nodeType": "YulAssignment",
															"src": "5282:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5294:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5294:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5290:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:12"
																},
																"nativeSrc": "5290:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5290:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5282:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5282:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5324:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5339:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5339:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5355:3:12",
																								"nodeType": "YulLiteral",
																								"src": "5355:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5360:1:12",
																								"nodeType": "YulLiteral",
																								"src": "5360:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5351:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5351:3:12"
																						},
																						"nativeSrc": "5351:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5351:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5364:1:12",
																						"nodeType": "YulLiteral",
																						"src": "5364:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5347:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5347:3:12"
																				},
																				"nativeSrc": "5347:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5347:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5335:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5335:3:12"
																		},
																		"nativeSrc": "5335:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5335:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5317:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5317:6:12"
																},
																"nativeSrc": "5317:51:12",
																"nodeType": "YulFunctionCall",
																"src": "5317:51:12"
															},
															"nativeSrc": "5317:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "5317:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5388:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5388:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5399:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5399:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:12"
																		},
																		"nativeSrc": "5384:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5384:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5404:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5404:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5377:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5377:6:12"
																},
																"nativeSrc": "5377:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5377:34:12"
															},
															"nativeSrc": "5377:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5377:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5143:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5233:9:12",
														"nodeType": "YulTypedName",
														"src": "5233:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5244:6:12",
														"nodeType": "YulTypedName",
														"src": "5244:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5252:6:12",
														"nodeType": "YulTypedName",
														"src": "5252:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5263:4:12",
														"nodeType": "YulTypedName",
														"src": "5263:4:12",
														"type": ""
													}
												],
												"src": "5143:274:12"
											},
											{
												"body": {
													"nativeSrc": "5454:95:12",
													"nodeType": "YulBlock",
													"src": "5454:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5471:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5471:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5478:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5478:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5483:10:12",
																				"nodeType": "YulLiteral",
																				"src": "5483:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5474:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:12"
																		},
																		"nativeSrc": "5474:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5474:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:12"
																},
																"nativeSrc": "5464:31:12",
																"nodeType": "YulFunctionCall",
																"src": "5464:31:12"
															},
															"nativeSrc": "5464:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "5464:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5511:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5511:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5514:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5504:6:12"
																},
																"nativeSrc": "5504:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5504:15:12"
															},
															"nativeSrc": "5504:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5504:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5535:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5535:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5538:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5538:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5528:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5528:6:12"
																},
																"nativeSrc": "5528:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5528:15:12"
															},
															"nativeSrc": "5528:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5528:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5422:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5422:127:12"
											},
											{
												"body": {
													"nativeSrc": "5604:162:12",
													"nodeType": "YulBlock",
													"src": "5604:162:12",
													"statements": [
														{
															"nativeSrc": "5614:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5614:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5634:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5634:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5628:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5628:5:12"
																},
																"nativeSrc": "5628:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5628:12:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5618:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5618:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5655:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5655:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5664:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5664:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5671:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5671:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:12"
																		},
																		"nativeSrc": "5660:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5660:16:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5678:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5649:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5649:5:12"
																},
																"nativeSrc": "5649:36:12",
																"nodeType": "YulFunctionCall",
																"src": "5649:36:12"
															},
															"nativeSrc": "5649:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "5649:36:12"
														},
														{
															"nativeSrc": "5694:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5694:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5708:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5708:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5713:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5713:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5704:3:12"
																},
																"nativeSrc": "5704:16:12",
																"nodeType": "YulFunctionCall",
																"src": "5704:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5698:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5698:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5736:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "5736:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5740:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5740:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5729:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:12"
																},
																"nativeSrc": "5729:13:12",
																"nodeType": "YulFunctionCall",
																"src": "5729:13:12"
															},
															"nativeSrc": "5729:13:12",
															"nodeType": "YulExpressionStatement",
															"src": "5729:13:12"
														},
														{
															"nativeSrc": "5751:9:12",
															"nodeType": "YulAssignment",
															"src": "5751:9:12",
															"value": {
																"name": "_1",
																"nativeSrc": "5758:2:12",
																"nodeType": "YulIdentifier",
																"src": "5758:2:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5751:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5751:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5554:212:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5581:5:12",
														"nodeType": "YulTypedName",
														"src": "5581:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5588:3:12",
														"nodeType": "YulTypedName",
														"src": "5588:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5596:3:12",
														"nodeType": "YulTypedName",
														"src": "5596:3:12",
														"type": ""
													}
												],
												"src": "5554:212:12"
											},
											{
												"body": {
													"nativeSrc": "6048:146:12",
													"nodeType": "YulBlock",
													"src": "6048:146:12",
													"statements": [
														{
															"nativeSrc": "6058:70:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6058:70:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6089:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6089:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6115:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6115:6:12"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "6123:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6123:3:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "6097:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6097:17:12"
																		},
																		"nativeSrc": "6097:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:30:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6071:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6071:17:12"
																},
																"nativeSrc": "6071:57:12",
																"nodeType": "YulFunctionCall",
																"src": "6071:57:12"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "6062:5:12",
																	"nodeType": "YulTypedName",
																	"src": "6062:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "6144:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6144:5:12"
																	},
																	{
																		"hexValue": "2e6a736f6e",
																		"kind": "string",
																		"nativeSrc": "6151:7:12",
																		"nodeType": "YulLiteral",
																		"src": "6151:7:12",
																		"type": "",
																		"value": ".json"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6137:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6137:6:12"
																},
																"nativeSrc": "6137:22:12",
																"nodeType": "YulFunctionCall",
																"src": "6137:22:12"
															},
															"nativeSrc": "6137:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "6137:22:12"
														},
														{
															"nativeSrc": "6168:20:12",
															"nodeType": "YulAssignment",
															"src": "6168:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "6179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6179:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:12",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6175:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6175:3:12"
																},
																"nativeSrc": "6175:13:12",
																"nodeType": "YulFunctionCall",
																"src": "6175:13:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6168:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5771:423:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6016:3:12",
														"nodeType": "YulTypedName",
														"src": "6016:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6021:6:12",
														"nodeType": "YulTypedName",
														"src": "6021:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6029:6:12",
														"nodeType": "YulTypedName",
														"src": "6029:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6040:3:12",
														"nodeType": "YulTypedName",
														"src": "6040:3:12",
														"type": ""
													}
												],
												"src": "5771:423:12"
											},
											{
												"body": {
													"nativeSrc": "6836:413:12",
													"nodeType": "YulBlock",
													"src": "6836:413:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6853:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6853:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6862:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6862:3:12",
																				"type": "",
																				"value": "185"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6867:20:12",
																				"nodeType": "YulLiteral",
																				"src": "6867:20:12",
																				"type": "",
																				"value": "0x3d913730b6b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6858:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6858:3:12"
																		},
																		"nativeSrc": "6858:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6858:30:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6846:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6846:6:12"
																},
																"nativeSrc": "6846:43:12",
																"nodeType": "YulFunctionCall",
																"src": "6846:43:12"
															},
															"nativeSrc": "6846:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "6846:43:12"
														},
														{
															"nativeSrc": "6898:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "6898:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6926:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6926:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6938:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "6938:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6943:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6943:1:12",
																				"type": "",
																				"value": "9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6934:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6934:3:12"
																		},
																		"nativeSrc": "6934:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6934:11:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6908:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6908:17:12"
																},
																"nativeSrc": "6908:38:12",
																"nodeType": "YulFunctionCall",
																"src": "6908:38:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6902:2:12",
																	"nodeType": "YulTypedName",
																	"src": "6902:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6962:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "6962:2:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6970:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6970:3:12",
																				"type": "",
																				"value": "121"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6975:36:12",
																				"nodeType": "YulLiteral",
																				"src": "6975:36:12",
																				"type": "",
																				"value": "0x1116113232b9b1b934b83a34b7b7111d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6966:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6966:3:12"
																		},
																		"nativeSrc": "6966:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6966:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6955:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6955:6:12"
																},
																"nativeSrc": "6955:58:12",
																"nodeType": "YulFunctionCall",
																"src": "6955:58:12"
															},
															"nativeSrc": "6955:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "6955:58:12"
														},
														{
															"nativeSrc": "7022:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7022:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7050:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7050:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "7062:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "7062:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7066:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7066:2:12",
																				"type": "",
																				"value": "17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7058:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:12"
																		},
																		"nativeSrc": "7058:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7058:11:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7032:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7032:17:12"
																},
																"nativeSrc": "7032:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7032:38:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "7026:2:12",
																	"nodeType": "YulTypedName",
																	"src": "7026:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "7086:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "7086:2:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7094:3:12",
																				"nodeType": "YulLiteral",
																				"src": "7094:3:12",
																				"type": "",
																				"value": "169"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7099:24:12",
																				"nodeType": "YulLiteral",
																				"src": "7099:24:12",
																				"type": "",
																				"value": "0x11161134b6b0b3b2911d11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7090:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7090:3:12"
																		},
																		"nativeSrc": "7090:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7090:34:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7079:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7079:6:12"
																},
																"nativeSrc": "7079:46:12",
																"nodeType": "YulFunctionCall",
																"src": "7079:46:12"
															},
															"nativeSrc": "7079:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "7079:46:12"
														},
														{
															"nativeSrc": "7134:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7134:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7162:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7162:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "7174:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "7174:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7178:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7178:2:12",
																				"type": "",
																				"value": "11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7170:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7170:3:12"
																		},
																		"nativeSrc": "7170:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7170:11:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7144:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7144:17:12"
																},
																"nativeSrc": "7144:38:12",
																"nodeType": "YulFunctionCall",
																"src": "7144:38:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "7138:2:12",
																	"nodeType": "YulTypedName",
																	"src": "7138:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "7198:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "7198:2:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7206:3:12",
																				"nodeType": "YulLiteral",
																				"src": "7206:3:12",
																				"type": "",
																				"value": "240"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7211:4:12",
																				"nodeType": "YulLiteral",
																				"src": "7211:4:12",
																				"type": "",
																				"value": "8829"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7202:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7202:3:12"
																		},
																		"nativeSrc": "7202:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7202:14:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7191:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7191:6:12"
																},
																"nativeSrc": "7191:26:12",
																"nodeType": "YulFunctionCall",
																"src": "7191:26:12"
															},
															"nativeSrc": "7191:26:12",
															"nodeType": "YulExpressionStatement",
															"src": "7191:26:12"
														},
														{
															"nativeSrc": "7226:17:12",
															"nodeType": "YulAssignment",
															"src": "7226:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "7237:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "7237:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7241:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7233:3:12"
																},
																"nativeSrc": "7233:10:12",
																"nodeType": "YulFunctionCall",
																"src": "7233:10:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7226:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6199:1050:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6796:3:12",
														"nodeType": "YulTypedName",
														"src": "6796:3:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6801:6:12",
														"nodeType": "YulTypedName",
														"src": "6801:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6809:6:12",
														"nodeType": "YulTypedName",
														"src": "6809:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6817:6:12",
														"nodeType": "YulTypedName",
														"src": "6817:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6828:3:12",
														"nodeType": "YulTypedName",
														"src": "6828:3:12",
														"type": ""
													}
												],
												"src": "6199:1050:12"
											},
											{
												"body": {
													"nativeSrc": "7494:115:12",
													"nodeType": "YulBlock",
													"src": "7494:115:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7511:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7511:3:12"
																	},
																	{
																		"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																		"kind": "string",
																		"nativeSrc": "7516:31:12",
																		"nodeType": "YulLiteral",
																		"src": "7516:31:12",
																		"type": "",
																		"value": "data:application/json;base64,"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7504:6:12"
																},
																"nativeSrc": "7504:44:12",
																"nodeType": "YulFunctionCall",
																"src": "7504:44:12"
															},
															"nativeSrc": "7504:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "7504:44:12"
														},
														{
															"nativeSrc": "7557:46:12",
															"nodeType": "YulAssignment",
															"src": "7557:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7582:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7582:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7594:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "7594:3:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7599:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7599:2:12",
																				"type": "",
																				"value": "29"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7590:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7590:3:12"
																		},
																		"nativeSrc": "7590:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7590:12:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7564:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7564:17:12"
																},
																"nativeSrc": "7564:39:12",
																"nodeType": "YulFunctionCall",
																"src": "7564:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7557:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7557:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7254:355:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7470:3:12",
														"nodeType": "YulTypedName",
														"src": "7470:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7475:6:12",
														"nodeType": "YulTypedName",
														"src": "7475:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7486:3:12",
														"nodeType": "YulTypedName",
														"src": "7486:3:12",
														"type": ""
													}
												],
												"src": "7254:355:12"
											},
											{
												"body": {
													"nativeSrc": "7817:293:12",
													"nodeType": "YulBlock",
													"src": "7817:293:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7834:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7834:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7849:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7849:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7865:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7865:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7870:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7870:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7861:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7861:3:12"
																						},
																						"nativeSrc": "7861:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7861:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7874:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7874:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7857:3:12"
																				},
																				"nativeSrc": "7857:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7857:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:12"
																		},
																		"nativeSrc": "7845:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7845:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7827:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:12"
																},
																"nativeSrc": "7827:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7827:51:12"
															},
															"nativeSrc": "7827:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7827:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7898:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7898:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7909:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7894:3:12"
																		},
																		"nativeSrc": "7894:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7894:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7918:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7918:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7934:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7934:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7939:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7939:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7930:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7930:3:12"
																						},
																						"nativeSrc": "7930:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7930:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7943:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7943:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7926:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7926:3:12"
																				},
																				"nativeSrc": "7926:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7926:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7914:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7914:3:12"
																		},
																		"nativeSrc": "7914:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7914:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:12"
																},
																"nativeSrc": "7887:60:12",
																"nodeType": "YulFunctionCall",
																"src": "7887:60:12"
															},
															"nativeSrc": "7887:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "7887:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7967:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7967:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7978:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7978:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7963:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:12"
																		},
																		"nativeSrc": "7963:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7983:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7983:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7956:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:12"
																},
																"nativeSrc": "7956:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7956:34:12"
															},
															"nativeSrc": "7956:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7956:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8010:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8010:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8021:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8021:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8006:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8006:3:12"
																		},
																		"nativeSrc": "8006:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8026:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8026:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7999:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7999:6:12"
																},
																"nativeSrc": "7999:31:12",
																"nodeType": "YulFunctionCall",
																"src": "7999:31:12"
															},
															"nativeSrc": "7999:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "7999:31:12"
														},
														{
															"nativeSrc": "8039:65:12",
															"nodeType": "YulAssignment",
															"src": "8039:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8076:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8076:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8088:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8088:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8099:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8099:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8084:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:12"
																		},
																		"nativeSrc": "8084:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8084:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8047:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "8047:28:12"
																},
																"nativeSrc": "8047:57:12",
																"nodeType": "YulFunctionCall",
																"src": "8047:57:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8039:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8039:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "7614:496:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7762:9:12",
														"nodeType": "YulTypedName",
														"src": "7762:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7773:6:12",
														"nodeType": "YulTypedName",
														"src": "7773:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7781:6:12",
														"nodeType": "YulTypedName",
														"src": "7781:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7789:6:12",
														"nodeType": "YulTypedName",
														"src": "7789:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7797:6:12",
														"nodeType": "YulTypedName",
														"src": "7797:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7808:4:12",
														"nodeType": "YulTypedName",
														"src": "7808:4:12",
														"type": ""
													}
												],
												"src": "7614:496:12"
											},
											{
												"body": {
													"nativeSrc": "8195:210:12",
													"nodeType": "YulBlock",
													"src": "8195:210:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8241:16:12",
																"nodeType": "YulBlock",
																"src": "8241:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8250:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8250:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8253:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8253:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8243:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8243:6:12"
																			},
																			"nativeSrc": "8243:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8243:12:12"
																		},
																		"nativeSrc": "8243:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8243:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8216:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8216:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8225:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8225:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8212:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8212:3:12"
																		},
																		"nativeSrc": "8212:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8212:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8237:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8208:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8208:3:12"
																},
																"nativeSrc": "8208:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8208:32:12"
															},
															"nativeSrc": "8205:52:12",
															"nodeType": "YulIf",
															"src": "8205:52:12"
														},
														{
															"nativeSrc": "8266:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8266:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8285:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8285:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8279:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8279:5:12"
																},
																"nativeSrc": "8279:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8279:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8270:5:12",
																	"nodeType": "YulTypedName",
																	"src": "8270:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8359:16:12",
																"nodeType": "YulBlock",
																"src": "8359:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8368:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8368:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8371:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8371:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8361:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8361:6:12"
																			},
																			"nativeSrc": "8361:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8361:12:12"
																		},
																		"nativeSrc": "8361:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8361:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8317:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8317:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8328:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8328:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8339:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8339:3:12",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8344:10:12",
																								"nodeType": "YulLiteral",
																								"src": "8344:10:12",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8335:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8335:3:12"
																						},
																						"nativeSrc": "8335:20:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8335:20:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8324:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8324:3:12"
																				},
																				"nativeSrc": "8324:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8324:32:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8314:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8314:2:12"
																		},
																		"nativeSrc": "8314:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8314:43:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8307:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8307:6:12"
																},
																"nativeSrc": "8307:51:12",
																"nodeType": "YulFunctionCall",
																"src": "8307:51:12"
															},
															"nativeSrc": "8304:71:12",
															"nodeType": "YulIf",
															"src": "8304:71:12"
														},
														{
															"nativeSrc": "8384:15:12",
															"nodeType": "YulAssignment",
															"src": "8384:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "8394:5:12",
																"nodeType": "YulIdentifier",
																"src": "8394:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8384:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8384:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "8115:290:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8161:9:12",
														"nodeType": "YulTypedName",
														"src": "8161:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8172:7:12",
														"nodeType": "YulTypedName",
														"src": "8172:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8184:6:12",
														"nodeType": "YulTypedName",
														"src": "8184:6:12",
														"type": ""
													}
												],
												"src": "8115:290:12"
											},
											{
												"body": {
													"nativeSrc": "8442:95:12",
													"nodeType": "YulBlock",
													"src": "8442:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8459:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8459:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8466:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8466:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8471:10:12",
																				"nodeType": "YulLiteral",
																				"src": "8471:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8462:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8462:3:12"
																		},
																		"nativeSrc": "8462:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8452:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8452:6:12"
																},
																"nativeSrc": "8452:31:12",
																"nodeType": "YulFunctionCall",
																"src": "8452:31:12"
															},
															"nativeSrc": "8452:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "8452:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8499:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8499:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8502:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8502:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:12"
																},
																"nativeSrc": "8492:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8492:15:12"
															},
															"nativeSrc": "8492:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8492:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8523:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8523:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8526:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8526:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8516:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:12"
																},
																"nativeSrc": "8516:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8516:15:12"
															},
															"nativeSrc": "8516:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8516:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8410:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8410:127:12"
											},
											{
												"body": {
													"nativeSrc": "8574:95:12",
													"nodeType": "YulBlock",
													"src": "8574:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8591:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8591:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8598:3:12",
																				"nodeType": "YulLiteral",
																				"src": "8598:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8603:10:12",
																				"nodeType": "YulLiteral",
																				"src": "8603:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8594:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8594:3:12"
																		},
																		"nativeSrc": "8594:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8594:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8584:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8584:6:12"
																},
																"nativeSrc": "8584:31:12",
																"nodeType": "YulFunctionCall",
																"src": "8584:31:12"
															},
															"nativeSrc": "8584:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "8584:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8631:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8631:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8634:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8634:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8624:6:12"
																},
																"nativeSrc": "8624:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8624:15:12"
															},
															"nativeSrc": "8624:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8624:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8655:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8655:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8658:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8658:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8648:6:12"
																},
																"nativeSrc": "8648:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8648:15:12"
															},
															"nativeSrc": "8648:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8648:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8542:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8542:127:12"
											},
											{
												"body": {
													"nativeSrc": "8722:77:12",
													"nodeType": "YulBlock",
													"src": "8722:77:12",
													"statements": [
														{
															"nativeSrc": "8732:16:12",
															"nodeType": "YulAssignment",
															"src": "8732:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8743:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8743:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8746:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8746:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8739:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8739:3:12"
																},
																"nativeSrc": "8739:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8739:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8732:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8732:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8771:22:12",
																"nodeType": "YulBlock",
																"src": "8771:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8773:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8773:16:12"
																			},
																			"nativeSrc": "8773:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8773:18:12"
																		},
																		"nativeSrc": "8773:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8773:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8763:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8763:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8766:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8766:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8760:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8760:2:12"
																},
																"nativeSrc": "8760:10:12",
																"nodeType": "YulFunctionCall",
																"src": "8760:10:12"
															},
															"nativeSrc": "8757:36:12",
															"nodeType": "YulIf",
															"src": "8757:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8674:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8705:1:12",
														"nodeType": "YulTypedName",
														"src": "8705:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8708:1:12",
														"nodeType": "YulTypedName",
														"src": "8708:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8714:3:12",
														"nodeType": "YulTypedName",
														"src": "8714:3:12",
														"type": ""
													}
												],
												"src": "8674:125:12"
											},
											{
												"body": {
													"nativeSrc": "8850:171:12",
													"nodeType": "YulBlock",
													"src": "8850:171:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8881:111:12",
																"nodeType": "YulBlock",
																"src": "8881:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8902:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8902:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8909:3:12",
																							"nodeType": "YulLiteral",
																							"src": "8909:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8914:10:12",
																							"nodeType": "YulLiteral",
																							"src": "8914:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8905:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8905:3:12"
																					},
																					"nativeSrc": "8905:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "8905:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8895:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8895:6:12"
																			},
																			"nativeSrc": "8895:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8895:31:12"
																		},
																		"nativeSrc": "8895:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8895:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8946:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8946:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8949:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8949:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8939:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8939:6:12"
																			},
																			"nativeSrc": "8939:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8939:15:12"
																		},
																		"nativeSrc": "8939:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8939:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8974:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8974:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8977:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8977:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8967:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8967:6:12"
																			},
																			"nativeSrc": "8967:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8967:15:12"
																		},
																		"nativeSrc": "8967:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8967:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8870:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8870:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8863:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8863:6:12"
																},
																"nativeSrc": "8863:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8863:9:12"
															},
															"nativeSrc": "8860:132:12",
															"nodeType": "YulIf",
															"src": "8860:132:12"
														},
														{
															"nativeSrc": "9001:14:12",
															"nodeType": "YulAssignment",
															"src": "9001:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9010:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9010:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9013:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9013:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9006:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9006:3:12"
																},
																"nativeSrc": "9006:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9006:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9001:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9001:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8804:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8835:1:12",
														"nodeType": "YulTypedName",
														"src": "8835:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8838:1:12",
														"nodeType": "YulTypedName",
														"src": "8838:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8844:1:12",
														"nodeType": "YulTypedName",
														"src": "8844:1:12",
														"type": ""
													}
												],
												"src": "8804:217:12"
											},
											{
												"body": {
													"nativeSrc": "9078:116:12",
													"nodeType": "YulBlock",
													"src": "9078:116:12",
													"statements": [
														{
															"nativeSrc": "9088:20:12",
															"nodeType": "YulAssignment",
															"src": "9088:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9103:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9103:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9106:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9106:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9099:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9099:3:12"
																},
																"nativeSrc": "9099:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9099:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9088:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "9088:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9166:22:12",
																"nodeType": "YulBlock",
																"src": "9166:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9168:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9168:16:12"
																			},
																			"nativeSrc": "9168:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9168:18:12"
																		},
																		"nativeSrc": "9168:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9168:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9137:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "9137:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9130:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9130:6:12"
																				},
																				"nativeSrc": "9130:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9130:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9144:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "9144:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9151:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "9151:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9160:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "9160:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9147:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9147:3:12"
																						},
																						"nativeSrc": "9147:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9147:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9141:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "9141:2:12"
																				},
																				"nativeSrc": "9141:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9141:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9127:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9127:2:12"
																		},
																		"nativeSrc": "9127:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:12"
																},
																"nativeSrc": "9120:45:12",
																"nodeType": "YulFunctionCall",
																"src": "9120:45:12"
															},
															"nativeSrc": "9117:71:12",
															"nodeType": "YulIf",
															"src": "9117:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9026:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9057:1:12",
														"nodeType": "YulTypedName",
														"src": "9057:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9060:1:12",
														"nodeType": "YulTypedName",
														"src": "9060:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9066:7:12",
														"nodeType": "YulTypedName",
														"src": "9066:7:12",
														"type": ""
													}
												],
												"src": "9026:168:12"
											},
											{
												"body": {
													"nativeSrc": "9248:79:12",
													"nodeType": "YulBlock",
													"src": "9248:79:12",
													"statements": [
														{
															"nativeSrc": "9258:17:12",
															"nodeType": "YulAssignment",
															"src": "9258:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9270:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9270:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9273:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9273:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9266:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9266:3:12"
																},
																"nativeSrc": "9266:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9266:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9258:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9258:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9299:22:12",
																"nodeType": "YulBlock",
																"src": "9299:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9301:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9301:16:12"
																			},
																			"nativeSrc": "9301:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9301:18:12"
																		},
																		"nativeSrc": "9301:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9301:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9290:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9290:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9296:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9296:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9287:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9287:2:12"
																},
																"nativeSrc": "9287:11:12",
																"nodeType": "YulFunctionCall",
																"src": "9287:11:12"
															},
															"nativeSrc": "9284:37:12",
															"nodeType": "YulIf",
															"src": "9284:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9199:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9230:1:12",
														"nodeType": "YulTypedName",
														"src": "9230:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9233:1:12",
														"nodeType": "YulTypedName",
														"src": "9233:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9239:4:12",
														"nodeType": "YulTypedName",
														"src": "9239:4:12",
														"type": ""
													}
												],
												"src": "9199:128:12"
											},
											{
												"body": {
													"nativeSrc": "9364:95:12",
													"nodeType": "YulBlock",
													"src": "9364:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9381:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9381:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9388:3:12",
																				"nodeType": "YulLiteral",
																				"src": "9388:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9393:10:12",
																				"nodeType": "YulLiteral",
																				"src": "9393:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9384:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9384:3:12"
																		},
																		"nativeSrc": "9384:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9384:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9374:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9374:6:12"
																},
																"nativeSrc": "9374:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9374:31:12"
															},
															"nativeSrc": "9374:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9374:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9421:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9421:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9424:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9424:4:12",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:12"
																},
																"nativeSrc": "9414:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9414:15:12"
															},
															"nativeSrc": "9414:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9414:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9445:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9445:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9448:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9448:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9438:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9438:6:12"
																},
																"nativeSrc": "9438:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9438:15:12"
															},
															"nativeSrc": "9438:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9438:15:12"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "9332:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9332:127:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_bytes5__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let pos_1 := abi_encode_string(value1, abi_encode_string(value0, pos))\n        mstore(pos_1, \".json\")\n        end := add(pos_1, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d_t_string_memory_ptr_t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d_t_bytes_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_bytes_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(185, 0x3d913730b6b2911d11))\n        let _1 := abi_encode_string(value0, add(pos, 9))\n        mstore(_1, shl(121, 0x1116113232b9b1b934b83a34b7b7111d11))\n        let _2 := abi_encode_string(value1, add(_1, 17))\n        mstore(_2, shl(169, 0x11161134b6b0b3b2911d11))\n        let _3 := abi_encode_string(value2, add(_2, 11))\n        mstore(_3, shl(240, 8829))\n        end := add(_3, 2)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"data:application/json;base64,\")\n        end := abi_encode_string(value0, add(pos, 29))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fb575f3560e01c80636352211e11610093578063b88d4fde11610063578063b88d4fde14610200578063c87b56dd14610213578063e8a3d48514610226578063e985e9c51461022e575f5ffd5b80636352211e146101bf57806370a08231146101d257806395d89b41146101e5578063a22cb465146101ed575f5ffd5b806323b872dd116100ce57806323b872dd146101735780632f745c591461018657806342842e0e146101995780634f6ccce7146101ac575f5ffd5b806306fdde03146100ff578063081812fc1461011d578063095ea7b31461014857806318160ddd1461015d575b5f5ffd5b610107610251565b60405161011491906112b7565b60405180910390f35b61013061012b3660046112c9565b6102e7565b6040516001600160a01b039091168152602001610114565b61015b6101563660046112fb565b610301565b005b610165610310565b604051908152602001610114565b61015b610181366004611323565b610322565b6101656101943660046112fb565b6103b0565b61015b6101a7366004611323565b61041f565b6101656101ba3660046112c9565b61043e565b6101306101cd3660046112c9565b61049b565b6101656101e036600461135d565b6104a5565b610107610501565b61015b6101fb366004611376565b610519565b61015b61020e3660046113c3565b610524565b6101076102213660046112c9565b61053c565b6101076105c7565b61024161023c3660046114a0565b61062e565b6040519015158152602001610114565b606061025b610669565b8054610266906114d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610292906114d1565b80156102dd5780601f106102b4576101008083540402835291602001916102dd565b820191905f5260205f20905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b5f6102f18261068d565b506102fb826106c4565b92915050565b61030c8282336106e9565b5050565b5f610319610669565b60020154919050565b6001600160a01b03821661035057604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f61035c8383336106f6565b9050836001600160a01b0316816001600160a01b0316146103aa576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610347565b50505050565b5f6103ba836104a5565b82106103eb5760405163295f44f760e21b81526001600160a01b038416600482015260248101839052604401610347565b6103f3610669565b6001600160a01b03939093165f9081526007909301602090815260408085209385529290525090205490565b61043983838360405180602001604052805f815250610524565b505050565b5f610447610310565b821061046f5760405163295f44f760e21b81525f600482015260248101839052604401610347565b610477610669565b600201828154811061048b5761048b611509565b905f5260205f2001549050919050565b5f6102fb8261068d565b5f6001600160a01b0382166104d8576040516322718ad960e21b81526001600160a01b0383166004820152602401610347565b6104e0610669565b6001600160a01b039092165f90815260049290920160205250604090205490565b606061050b610669565b6001018054610266906114d1565b61030c33838361088c565b61052f848484610322565b6103aa338585858561093c565b60606105478261068d565b505f610577604080518082019091526011815270697066733a2f2f736f6d657468696e672f60781b602082015290565b90505f8151116105955760405180602001604052805f8152506105c0565b8061059f84610a64565b6040516020016105b0929190611534565b6040516020818303038152906040525b9392505050565b606061060a6105d4610251565b6105dc610af4565b6105e4610b14565b6040516020016105f69392919061155e565b604051602081830303815290604052610b34565b60405160200161061a91906115d4565b604051602081830303815290604052905090565b5f610637610669565b6001600160a01b039384165f908152600691909101602090815260408083209490951682529290925250205460ff1690565b7ff2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea7890565b5f5f61069883610c8f565b90506001600160a01b0381166102fb57604051637e27328960e01b815260048101849052602401610347565b5f6106cd610669565b5f9283526005016020525060409020546001600160a01b031690565b6104398383836001610cb4565b5f5f61070184610c8f565b90506001600160a01b0383161561071d5761071d818486610def565b6001600160a01b03811615610766576107385f855f5f610cb4565b6001610742610669565b6001600160a01b0383165f9081526004919091016020526040902080549190910390555b6001600160a01b038516156107a257600161077f610669565b6001600160a01b0387165f90815260049190910160205260409020805490910190555b846107ab610669565b5f868152600391909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551869288811692908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a46001600160a01b0381166108225761081d84610e53565b610845565b846001600160a01b0316816001600160a01b031614610845576108458185610e99565b6001600160a01b0385166108615761085c84610fb0565b610884565b846001600160a01b0316816001600160a01b03161461088457610884858561109f565b949350505050565b6001600160a01b0382166108be57604051630b61174360e31b81526001600160a01b0383166004820152602401610347565b806108c7610669565b6001600160a01b038581165f8181526006939093016020908152604080852093881680865293825293849020805460ff1916951515959095179094559151841515815290927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610a5d57604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061097e908890889087908790600401611605565b6020604051808303815f875af19250505080156109b8575060408051601f3d908101601f191682019092526109b591810190611641565b60015b610a1f573d8080156109e5576040519150601f19603f3d011682016040523d82523d5f602084013e6109ea565b606091505b5080515f03610a1757604051633250574960e11b81526001600160a01b0385166004820152602401610347565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610a5b57604051633250574960e11b81526001600160a01b0385166004820152602401610347565b505b5050505050565b60605f610a7083611122565b60010190505f8167ffffffffffffffff811115610a8f57610a8f6113af565b6040519080825280601f01601f191660200182016040528015610ab9576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610ac357509392505050565b60606040518060800160405280605181526020016116ed60519139905090565b606060405180606001604052806035815260200161173e60359139905090565b606081515f03610b5157505060408051602081019091525f815290565b5f6040518060600160405280604081526020016117736040913990505f600384516002610b7e919061167c565b610b88919061168f565b610b939060046116ae565b67ffffffffffffffff811115610bab57610bab6113af565b6040519080825280601f01601f191660200182016040528015610bd5576020820181803683370190505b509050600182016020820185865187016020810180515f82525b82841015610c4a576003840193508351603f8160121c168701518653600186019550603f81600c1c168701518653600186019550603f8160061c168701518653600186019550603f8116870151865350600185019450610bef565b9052505085516003900660018114610c695760028114610c7c57610c84565b603d6001830353603d6002830353610c84565b603d60018303535b509195945050505050565b5f610c98610669565b5f9283526003016020525060409020546001600160a01b031690565b8080610cc857506001600160a01b03821615155b15610db4575f610cd78461068d565b90506001600160a01b03831615801590610d035750826001600160a01b0316816001600160a01b031614155b8015610d415750610d12610669565b6001600160a01b038083165f90815260069290920160209081526040808420928716845291905290205460ff16155b15610d6a5760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610347565b8115610db25783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b83610dbd610669565b5f948552600501602052604090932080546001600160a01b0319166001600160a01b0390941693909317909255505050565b610dfa8383836111f9565b610439576001600160a01b038316610e2857604051637e27328960e01b815260048101829052602401610347565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610347565b610e5b610669565b60020154610e67610669565b5f8381526009919091016020526040902055610e81610669565b60020180546001810182555f91825260209091200155565b5f610ea2610669565b6001600160a01b0384165f90815260049190910160205260408120549150610ec8610669565b5f84815260089190910160205260409020549050818114610f5f575f610eec610669565b6001600160a01b0386165f90815260079190910160209081526040808320868452909152902054905080610f1e610669565b6001600160a01b0387165f9081526007919091016020908152604080832086845290915290205581610f4e610669565b5f9283526008016020526040909120555b610f67610669565b5f8481526008919091016020526040812055610f81610669565b6001600160a01b039094165f908152600794909401602090815260408086209386529290525082209190915550565b5f6001610fbb610669565b60020154610fc991906116c5565b90505f610fd4610669565b5f84815260099190910160205260408120549150610ff0610669565b600201838154811061100457611004611509565b905f5260205f200154905080611018610669565b600201838154811061102c5761102c611509565b5f9182526020909120015581611040610669565b5f838152600991909101602052604090205561105a610669565b5f8581526009919091016020526040812055611074610669565b600201805480611086576110866116d8565b600190038181905f5260205f20015f9055905550505050565b5f60016110aa610669565b6001600160a01b0385165f90815260049190910160205260409020546110d091906116c5565b9050816110db610669565b6001600160a01b0385165f908152600791909101602090815260408083208584529091529020558061110b610669565b5f9384526008016020526040909220919091555050565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111605772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061118c576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111aa57662386f26fc10000830492506010015b6305f5e10083106111c2576305f5e100830492506008015b61271083106111d657612710830492506004015b606483106111e8576064830492506002015b600a83106102fb5760010192915050565b5f6001600160a01b038316158015906108845750826001600160a01b0316846001600160a01b0316148061125e5750611230610669565b6001600160a01b038086165f90815260069290920160209081526040808420928716845291905290205460ff165b806108845750826001600160a01b0316611277836106c4565b6001600160a01b031614949350505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6105c06020830184611289565b5f602082840312156112d9575f5ffd5b5035919050565b80356001600160a01b03811681146112f6575f5ffd5b919050565b5f5f6040838503121561130c575f5ffd5b611315836112e0565b946020939093013593505050565b5f5f5f60608486031215611335575f5ffd5b61133e846112e0565b925061134c602085016112e0565b929592945050506040919091013590565b5f6020828403121561136d575f5ffd5b6105c0826112e0565b5f5f60408385031215611387575f5ffd5b611390836112e0565b9150602083013580151581146113a4575f5ffd5b809150509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f5f5f5f608085870312156113d6575f5ffd5b6113df856112e0565b93506113ed602086016112e0565b925060408501359150606085013567ffffffffffffffff81111561140f575f5ffd5b8501601f8101871361141f575f5ffd5b803567ffffffffffffffff811115611439576114396113af565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611468576114686113af565b60405281815282820160200189101561147f575f5ffd5b816020840160208301375f6020838301015280935050505092959194509250565b5f5f604083850312156114b1575f5ffd5b6114ba836112e0565b91506114c8602084016112e0565b90509250929050565b600181811c908216806114e557607f821691505b60208210810361150357634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f611548611542838661151d565b8461151d565b64173539b7b760d91b8152600501949350505050565b683d913730b6b2911d1160b91b81525f61157b600983018661151d565b701116113232b9b1b934b83a34b7b7111d1160791b815261159f601182018661151d565b6a11161134b6b0b3b2911d1160a91b815290506115bf600b82018561151d565b61227d60f01b81526002019695505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c00000081525f6105c0601d83018461151d565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061163790830184611289565b9695505050505050565b5f60208284031215611651575f5ffd5b81516001600160e01b0319811681146105c0575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b808201808211156102fb576102fb611668565b5f826116a957634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176102fb576102fb611668565b818103818111156102fb576102fb611668565b634e487b7160e01b5f52603160045260245ffdfe5468697320697320636f6e7472616374206465736372697074696f6e2e4465706f6c796564206279206a757374776569277320455243373231204469616d6f6e6420696d706c656d656e746174696f6e2e697066733a2f2f516d636967396548385857455a5a7546395a47514437674141484d446a373973543875643738375067443537754e4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa2646970667358221220bb3bbb00633feec7a66a2814ddfa954d94e7d141b2c1dfd4782ec799c68541b464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x22E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFF JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x12B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x130 PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x156 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x165 PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x41F JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x130 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x135D JUMP JUMPDEST PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x501 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x1FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1376 JUMP JUMPDEST PUSH2 0x519 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0x524 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x12C9 JUMP JUMPDEST PUSH2 0x53C JUMP JUMPDEST PUSH2 0x107 PUSH2 0x5C7 JUMP JUMPDEST PUSH2 0x241 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x14A0 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x114 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x25B PUSH2 0x669 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x292 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x2F1 DUP3 PUSH2 0x68D JUMP JUMPDEST POP PUSH2 0x2FB DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x30C DUP3 DUP3 CALLER PUSH2 0x6E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x319 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x350 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x35C DUP4 DUP4 CALLER PUSH2 0x6F6 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x347 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3BA DUP4 PUSH2 0x4A5 JUMP JUMPDEST DUP3 LT PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x3F3 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP6 MSTORE SWAP3 SWAP1 MSTORE POP SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x524 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x447 PUSH2 0x310 JUMP JUMPDEST DUP3 LT PUSH2 0x46F JUMPI PUSH1 0x40 MLOAD PUSH4 0x295F44F7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x477 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x48B JUMPI PUSH2 0x48B PUSH2 0x1509 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB DUP3 PUSH2 0x68D JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x50B PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x266 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH2 0x30C CALLER DUP4 DUP4 PUSH2 0x88C JUMP JUMPDEST PUSH2 0x52F DUP5 DUP5 DUP5 PUSH2 0x322 JUMP JUMPDEST PUSH2 0x3AA CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0x93C JUMP JUMPDEST PUSH1 0x60 PUSH2 0x547 DUP3 PUSH2 0x68D JUMP JUMPDEST POP PUSH0 PUSH2 0x577 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH17 0x697066733A2F2F736F6D657468696E672F PUSH1 0x78 SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x5C0 JUMP JUMPDEST DUP1 PUSH2 0x59F DUP5 PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B0 SWAP3 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x60A PUSH2 0x5D4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x5DC PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5F6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x637 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE POP KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0xF2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78 SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x698 DUP4 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH0 PUSH2 0x6CD PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x439 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCB4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x701 DUP5 PUSH2 0xC8F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x71D JUMPI PUSH2 0x71D DUP2 DUP5 DUP7 PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x766 JUMPI PUSH2 0x738 PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0xCB4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x742 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x7A2 JUMPI PUSH1 0x1 PUSH2 0x77F PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST DUP5 PUSH2 0x7AB PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE MLOAD DUP7 SWAP3 DUP9 DUP2 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x822 JUMPI PUSH2 0x81D DUP5 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0x845 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x845 JUMPI PUSH2 0x845 DUP2 DUP6 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x861 JUMPI PUSH2 0x85C DUP5 PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x884 JUMPI PUSH2 0x884 DUP6 DUP6 PUSH2 0x109F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP1 PUSH2 0x8C7 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP4 DUP9 AND DUP1 DUP7 MSTORE SWAP4 DUP3 MSTORE SWAP4 DUP5 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP6 ISZERO ISZERO SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE SWAP2 MLOAD DUP5 ISZERO ISZERO DUP2 MSTORE SWAP1 SWAP3 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x97E SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9B8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9B5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1641 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA1F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA5B JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA70 DUP4 PUSH2 0x1122 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA8F PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAB9 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xAC3 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x51 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16ED PUSH1 0x51 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x173E PUSH1 0x35 SWAP2 CODECOPY SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH0 SUB PUSH2 0xB51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1773 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH0 PUSH1 0x3 DUP5 MLOAD PUSH1 0x2 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0xB88 SWAP2 SWAP1 PUSH2 0x168F JUMP JUMPDEST PUSH2 0xB93 SWAP1 PUSH1 0x4 PUSH2 0x16AE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAB JUMPI PUSH2 0xBAB PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP3 ADD PUSH1 0x20 DUP3 ADD DUP6 DUP7 MLOAD DUP8 ADD PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH0 DUP3 MSTORE JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x3 DUP5 ADD SWAP4 POP DUP4 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP8 ADD MLOAD DUP7 MSTORE8 PUSH1 0x1 DUP7 ADD SWAP6 POP PUSH1 0x3F DUP2 AND DUP8 ADD MLOAD DUP7 MSTORE8 POP PUSH1 0x1 DUP6 ADD SWAP5 POP PUSH2 0xBEF JUMP JUMPDEST SWAP1 MSTORE POP POP DUP6 MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0xC69 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xC7C JUMPI PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 PUSH1 0x3D PUSH1 0x2 DUP4 SUB MSTORE8 PUSH2 0xC84 JUMP JUMPDEST PUSH1 0x3D PUSH1 0x1 DUP4 SUB MSTORE8 JUMPDEST POP SWAP2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC98 PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST DUP1 DUP1 PUSH2 0xCC8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xDB4 JUMPI PUSH0 PUSH2 0xCD7 DUP5 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD03 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD41 JUMPI POP PUSH2 0xD12 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDB2 JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH2 0xDBD PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP5 DUP6 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xDFA DUP4 DUP4 DUP4 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x439 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x347 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0xE67 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0xE81 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH0 PUSH2 0xEA2 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0xEC8 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0xF5F JUMPI PUSH0 PUSH2 0xEEC PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0xF1E PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0xF4E PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST PUSH2 0xF67 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xF81 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP5 SWAP1 SWAP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP7 MSTORE SWAP3 SWAP1 MSTORE POP DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0xFBB PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0xFC9 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFD4 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0xFF0 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1004 JUMPI PUSH2 0x1004 PUSH2 0x1509 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH2 0x1018 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x102C JUMPI PUSH2 0x102C PUSH2 0x1509 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP2 PUSH2 0x1040 PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x105A PUSH2 0x669 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x1074 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x10AA PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x10D0 SWAP2 SWAP1 PUSH2 0x16C5 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x10DB PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x110B PUSH2 0x669 JUMP JUMPDEST PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x1160 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x118C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x11AA JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x11C2 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x11D6 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x11E8 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2FB JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x884 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x125E JUMPI POP PUSH2 0x1230 PUSH2 0x669 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x884 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1277 DUP4 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x5C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1289 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12D9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12F6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x130C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1315 DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1335 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x133E DUP5 PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x134C PUSH1 0x20 DUP6 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136D JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5C0 DUP3 PUSH2 0x12E0 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1387 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1390 DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13DF DUP6 PUSH2 0x12E0 JUMP JUMPDEST SWAP4 POP PUSH2 0x13ED PUSH1 0x20 DUP7 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x140F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x141F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1439 JUMPI PUSH2 0x1439 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1468 JUMPI PUSH2 0x1468 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x147F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14BA DUP4 PUSH2 0x12E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C8 PUSH1 0x20 DUP5 ADD PUSH2 0x12E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14E5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1503 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1548 PUSH2 0x1542 DUP4 DUP7 PUSH2 0x151D JUMP JUMPDEST DUP5 PUSH2 0x151D JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH9 0x3D913730B6B2911D11 PUSH1 0xB9 SHL DUP2 MSTORE PUSH0 PUSH2 0x157B PUSH1 0x9 DUP4 ADD DUP7 PUSH2 0x151D JUMP JUMPDEST PUSH17 0x1116113232B9B1B934B83A34B7B7111D11 PUSH1 0x79 SHL DUP2 MSTORE PUSH2 0x159F PUSH1 0x11 DUP3 ADD DUP7 PUSH2 0x151D JUMP JUMPDEST PUSH11 0x11161134B6B0B3B2911D11 PUSH1 0xA9 SHL DUP2 MSTORE SWAP1 POP PUSH2 0x15BF PUSH1 0xB DUP3 ADD DUP6 PUSH2 0x151D JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE PUSH0 PUSH2 0x5C0 PUSH1 0x1D DUP4 ADD DUP5 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x1637 SWAP1 DUP4 ADD DUP5 PUSH2 0x1289 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x5C0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16A9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x2FB JUMPI PUSH2 0x2FB PUSH2 0x1668 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID SLOAD PUSH9 0x697320697320636F6E PUSH21 0x72616374206465736372697074696F6E2E4465706F PUSH13 0x796564206279206A7573747765 PUSH10 0x27732045524337323120 PREVRANDAO PUSH10 0x616D6F6E6420696D706C PUSH6 0x6D656E746174 PUSH10 0x6F6E2E697066733A2F2F MLOAD PUSH14 0x636967396548385857455A5A7546 CODECOPY GAS SELFBALANCE MLOAD PREVRANDAO CALLDATACOPY PUSH8 0x4141484D446A3739 PUSH20 0x543875643738375067443537754E414243444546 SELFBALANCE BASEFEE BLOBHASH BLOBBASEFEE 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 0xBB EXTCODESIZE 0xBB STOP PUSH4 0x3FEEC7A6 PUSH11 0x2814DDFA954D94E7D141B2 0xC1 0xDF 0xD4 PUSH25 0x2EC799C68541B464736F6C634300081B003300000000000000 ",
							"sourceMap": "418:4550:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3027:170;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;950:32:12;;;932:51;;920:2;905:18;3027:170:5;786:203:12;2742:115:5;;;;;;:::i;:::-;;:::i;:::-;;737:114;;;:::i;:::-;;;1623:25:12;;;1611:2;1596:18;737:114:5;1477:177:12;2247:487:5;;;;;;:::i;:::-;;:::i;859:316::-;;;;;;:::i;:::-;;:::i;1796:168::-;;;;;;:::i;:::-;;:::i;1183:262::-;;;;;;:::i;:::-;;:::i;1666:122::-;;;;;;:::i;:::-;;:::i;1453:205::-;;;;;;:::i;:::-;;:::i;624:105::-;;;:::i;2865:154::-;;;;;;:::i;:::-;;:::i;1972:267::-;;;;;;:::i;:::-;;:::i;4160:318::-;;;;;;:::i;:::-;;:::i;3403:749::-;;;:::i;3205:190::-;;;;;;:::i;:::-;;:::i;:::-;;;4355:14:12;;4348:22;4330:41;;4318:2;4303:18;3205:190:5;4190:187:12;515:101:5;552:13;585:18;:16;:18::i;:::-;578:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:101;:::o;3027:170::-;3086:7;3106:32;3130:7;3106:23;:32::i;:::-;;3158:31;3181:7;3158:22;:31::i;:::-;3151:38;3027:170;-1:-1:-1;;3027:170:5:o;2742:115::-;2806:43;2825:2;2829:7;2838:10;2806:18;:43::i;:::-;2742:115;;:::o;737:114::-;781:7;808:18;:16;:18::i;:::-;:28;;:35;;737:114;-1:-1:-1;737:114:5:o;2247:487::-;-1:-1:-1;;;;;2376:16:5;;2372:88;;2414:46;;-1:-1:-1;;;2414:46:5;;2457:1;2414:46;;;932:51:12;905:18;;2414:46:5;;;;;;;;2372:88;2473:21;2497:42;2515:2;2519:7;2528:10;2497:17;:42::i;:::-;2473:66;;2571:4;-1:-1:-1;;;;;2554:21:5;:13;-1:-1:-1;;;;;2554:21:5;;2550:176;;2597:129;;-1:-1:-1;;;2597:129:5;;-1:-1:-1;;;;;4987:32:12;;;2597:129:5;;;4969:51:12;5036:18;;;5029:34;;;5099:32;;5079:18;;;5072:60;4942:18;;2597:129:5;4767:371:12;2550:176:5;2361:373;2247:487;;;:::o;859:316::-;972:7;1005:16;1015:5;1005:9;:16::i;:::-;996:5;:25;992:114;;1045:49;;-1:-1:-1;;;1045:49:5;;-1:-1:-1;;;;;5335:32:12;;1045:49:5;;;5317:51:12;5384:18;;;5377:34;;;5290:18;;1045:49:5;5143:274:12;992:114:5;1123:18;:16;:18::i;:::-;-1:-1:-1;;;;;1123:37:5;;;;;;;;:30;;;;:37;;;;;;;;:44;;;;;;-1:-1:-1;1123:44:5;;;;859:316::o;1796:168::-;1917:39;1934:4;1940:2;1944:7;1917:39;;;;;;;;;;;;:16;:39::i;:::-;1796:168;;;:::o;1183:262::-;1249:7;1282:13;:11;:13::i;:::-;1273:5;:22;1269:116;;1319:54;;-1:-1:-1;;;1319:54:5;;1363:1;1319:54;;;5317:51:12;5384:18;;;5377:34;;;5290:18;;1319:54:5;5143:274:12;1269:116:5;1402:18;:16;:18::i;:::-;:28;;1431:5;1402:35;;;;;;;;:::i;:::-;;;;;;;;;1395:42;;1183:262;;;:::o;1666:122::-;1721:7;1748:32;1772:7;1748:23;:32::i;1453:205::-;1508:7;-1:-1:-1;;;;;1532:19:5;;1528:70;;1560:38;;-1:-1:-1;;;1560:38:5;;-1:-1:-1;;;;;950:32:12;;1560:38:5;;;932:51:12;905:18;;1560:38:5;786:203:12;1528:70:5;1616:18;:16;:18::i;:::-;-1:-1:-1;;;;;1616:34:5;;;;;;;:27;;;;;:34;;-1:-1:-1;1616:34:5;;;;;1453:205::o;624:105::-;663:13;696:18;:16;:18::i;:::-;:25;;689:32;;;;;:::i;2865:154::-;2951:60;2980:10;2992:8;3002;2951:28;:60::i;1972:267::-;2121:31;2134:4;2140:2;2144:7;2121:12;:31::i;:::-;2163:68;2195:10;2207:4;2213:2;2217:7;2226:4;2163:31;:68::i;4160:318::-;4216:13;4242:32;4266:7;4242:23;:32::i;:::-;;4287:21;4311:10;4563:26;;;;;;;;;;;;-1:-1:-1;;;4563:26:5;;;;;4486:111;4311:10;4287:34;;4376:1;4358:7;4352:21;:25;:118;;;;;;;;;;;;;;;;;4411:7;4420:18;:7;:16;:18::i;:::-;4397:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4352:118;4332:138;4160:318;-1:-1:-1;;;4160:318:5:o;3403:749::-;3447:13;3654:414;3783:6;:4;:6::i;:::-;3870:22;:20;:22::i;:::-;3967:16;:14;:16::i;:::-;3694:351;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3654:13;:414::i;:::-;3518:611;;;;;;;;:::i;:::-;;;;;;;;;;;;;3473:671;;3403:749;:::o;3205:190::-;3310:4;3334:18;:16;:18::i;:::-;-1:-1:-1;;;;;3334:43:5;;;;;;;:36;;;;;:43;;;;;;;;:53;;;;;;;;;;-1:-1:-1;3334:53:5;;;;;3205:190::o;923:164:11:-;296:35;;923:164::o;17646:260::-;17709:7;17729:13;17745:17;17754:7;17745:8;:17::i;:::-;17729:33;-1:-1:-1;;;;;;17777:19:11;;17773:103;;17820:44;;-1:-1:-1;;;17820:44:11;;;;;1623:25:12;;;1596:18;;17820:44:11;1477:177:12;1850:129:11;1912:7;1939:8;:6;:8::i;:::-;:32;;;;:23;;:32;;-1:-1:-1;1939:32:11;;;;-1:-1:-1;;;;;1939:32:11;;1850:129::o;15673:122::-;15754:33;15763:2;15767:7;15776:4;15782;15754:8;:33::i;5106:1369::-;5218:7;5238:21;5262:17;5271:7;5262:8;:17::i;:::-;5238:41;-1:-1:-1;;;;;;5342:18:11;;;5338:97;;5377:46;5394:13;5409:4;5415:7;5377:16;:46::i;:::-;-1:-1:-1;;;;;5482:27:11;;;5478:289;;5609:48;5626:1;5630:7;5647:1;5651:5;5609:8;:48::i;:::-;5739:1;5703:8;:6;:8::i;:::-;-1:-1:-1;;;;;5703:32:11;;;;;;:17;;;;;:32;;;;;:37;;;;;;;;5478:289;-1:-1:-1;;;;;5783:16:11;;;5779:119;;5870:1;5845:8;:6;:8::i;:::-;-1:-1:-1;;;;;5845:21:11;;;;;;:17;;;;;:21;;;;;:26;;;;;;;5779:119;5937:2;5910:8;:6;:8::i;:::-;:24;;;;:15;;;;;:24;;;;;;:29;;-1:-1:-1;;;;;;5910:29:11;-1:-1:-1;;;;;5910:29:11;;;;;;5957:49;5910:24;;5957:49;;;;;;;;;;5910:24;5957:49;-1:-1:-1;;;;;6023:27:11;;6019:214;;6067:40;6099:7;6067:31;:40::i;:::-;6019:214;;;6146:2;-1:-1:-1;;;;;6129:19:11;:13;-1:-1:-1;;;;;6129:19:11;;6125:108;;6165:56;6198:13;6213:7;6165:32;:56::i;:::-;-1:-1:-1;;;;;6247:16:11;;6243:192;;6280:45;6317:7;6280:36;:45::i;:::-;6243:192;;;6364:2;-1:-1:-1;;;;;6347:19:11;:13;-1:-1:-1;;;;;6347:19:11;;6343:92;;6383:40;6411:2;6415:7;6383:27;:40::i;:::-;6454:13;5106:1369;-1:-1:-1;;;;5106:1369:11:o;17025:378::-;-1:-1:-1;;;;;17159:22:11;;17155:106;;17205:44;;-1:-1:-1;;;17205:44:11;;-1:-1:-1;;;;;950:32:12;;17205:44:11;;;932:51:12;905:18;;17205:44:11;786:203:12;17155:106:11;17317:8;17271;:6;:8::i;:::-;-1:-1:-1;;;;;17271:33:11;;;;;;;:26;;;;;:33;;;;;;;;:43;;;;;;;;;;;;;:54;;-1:-1:-1;;17271:54:11;;;;;;;;;;;17341;;4355:14:12;;4348:22;4330:41;;17271:43:11;;17341:54;;4303:18:12;17341:54:11;;;;;;;17025:378;;;:::o;18453:1119::-;-1:-1:-1;;;;;18640:14:11;;;:18;18636:929;;18696:170;;-1:-1:-1;;;18696:170:11;;-1:-1:-1;;;;;18696:36:11;;;;;:170;;18755:8;;18786:4;;18813:7;;18843:4;;18696:170;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18696:170:11;;;;;;;;-1:-1:-1;;18696:170:11;;;;;;;;;;;;:::i;:::-;;;18675:879;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19174:6;:13;19191:1;19174:18;19170:369;;19280:38;;-1:-1:-1;;;19280:38:11;;-1:-1:-1;;;;;950:32:12;;19280:38:11;;;932:51:12;905:18;;19280:38:11;786:203:12;19170:369:11;19489:6;19483:13;19474:6;19470:2;19466:15;19459:38;18675:879;-1:-1:-1;;;;;;18927:51:11;;-1:-1:-1;;;18927:51:11;18923:184;;19049:38;;-1:-1:-1;;;19049:38:11;;-1:-1:-1;;;;;950:32:12;;19049:38:11;;;932:51:12;905:18;;19049:38:11;786:203:12;18923:184:11;18880:242;18675:879;18453:1119;;;;;:::o;637:698:2:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:2;-1:-1:-1;794:41:2;-1:-1:-1;955:28:2;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:2;-1:-1:-1;;;1175:2:2;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:2;1010:282;1256:21;-1:-1:-1;1312:6:2;637:698;-1:-1:-1;;;637:698:2:o;4757:208:5:-;4812:13;4838:119;;;;;;;;;;;;;;;;;;;4757:208;:::o;4605:144::-;4654:12;4679:62;;;;;;;;;;;;;;;;;;;4605:144;:::o;476:3382:1:-;534:13;766:4;:11;781:1;766:16;762:31;;-1:-1:-1;;784:9:1;;;;;;;;;-1:-1:-1;784:9:1;;;476:3382::o;762:31::-;843:19;865:6;;;;;;;;;;;;;;;;;843:28;;1274:20;1333:1;1314:4;:11;1328:1;1314:15;;;;:::i;:::-;1313:21;;;;:::i;:::-;1308:27;;:1;:27;:::i;:::-;1297:39;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1297:39:1;;1274:62;;1511:1;1504:5;1500:13;1612:4;1604:6;1600:17;1645:4;1692;1686:11;1680:4;1676:22;1940:4;1932:6;1928:17;1982:8;1976:15;2021:4;2011:8;2004:22;2093:1259;2126:6;2117:7;2114:19;2093:1259;;;2228:1;2219:7;2215:15;2204:26;;2266:7;2260:14;2853:4;2845:5;2841:2;2837:14;2833:25;2823:8;2819:40;2813:47;2802:9;2794:67;2906:1;2895:9;2891:17;2878:30;;2996:4;2988:5;2984:2;2980:14;2976:25;2966:8;2962:40;2956:47;2945:9;2937:67;3049:1;3038:9;3034:17;3021:30;;3138:4;3130:5;3127:1;3123:13;3119:24;3109:8;3105:39;3099:46;3088:9;3080:66;3191:1;3180:9;3176:17;3163:30;;3272:4;3265:5;3261:16;3251:8;3247:31;3241:38;3230:9;3222:58;;3325:1;3314:9;3310:17;3297:30;;2093:1259;;;3413:28;;-1:-1:-1;;3586:11:1;;3599:1;3582:19;;3619:1;3614:120;;;;3752:1;3747:71;;;;3575:243;;3614:120;3666:4;3662:1;3651:9;3647:17;3639:32;3715:4;3711:1;3700:9;3696:17;3688:32;3614:120;;3747:71;3799:4;3795:1;3784:9;3780:17;3772:32;3575:243;-1:-1:-1;3845:6:1;;476:3382;-1:-1:-1;;;;;476:3382:1:o;1612:117:11:-;1670:7;1697:8;:6;:8::i;:::-;:24;;;;:15;;:24;;-1:-1:-1;1697:24:11;;;;-1:-1:-1;;;;;1697:24:11;;1612:117::o;15983:823::-;16180:9;:31;;;-1:-1:-1;;;;;;16193:18:11;;;;16180:31;16176:573;;;16228:13;16244:22;16258:7;16244:13;:22::i;:::-;16228:38;-1:-1:-1;;;;;;16415:18:11;;;;;;:52;;;16463:4;-1:-1:-1;;;;;16454:13:11;:5;-1:-1:-1;;;;;16454:13:11;;;16415:52;:113;;;;;16489:8;:6;:8::i;:::-;-1:-1:-1;;;;;16489:33:11;;;;;;;:26;;;;;:33;;;;;;;;:39;;;;;;;;;;;;;16488:40;16415:113;16393:233;;;16570:40;;-1:-1:-1;;;16570:40:11;;-1:-1:-1;;;;;950:32:12;;16570:40:11;;;932:51:12;905:18;;16570:40:11;786:203:12;16393:233:11;16646:9;16642:96;;;16714:7;16710:2;-1:-1:-1;;;;;16681:41:11;16703:5;-1:-1:-1;;;;;16681:41:11;;;;;;;;;;;16642:96;16213:536;16176:573;16796:2;16761:8;:6;:8::i;:::-;:32;;;;:23;;:32;;;;;;:37;;-1:-1:-1;;;;;;16761:37:11;-1:-1:-1;;;;;16761:37:11;;;;;;;;;;-1:-1:-1;;;15983:823:11:o;3089:489::-;3228:38;3242:5;3249:7;3258;3228:13;:38::i;:::-;3223:348;;-1:-1:-1;;;;;3287:19:11;;3283:277;;3334:44;;-1:-1:-1;;;3334:44:11;;;;;1623:25:12;;;1596:18;;3334:44:11;1477:177:12;3283:277:11;3426:118;;-1:-1:-1;;;3426:118:11;;-1:-1:-1;;;;;5335:32:12;;3426:118:11;;;5317:51:12;5384:18;;;5377:34;;;5290:18;;3426:118:11;5143:274:12;7220:189:11;7333:8;:6;:8::i;:::-;:18;;:25;7298:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;:60;7369:8;:6;:8::i;:::-;:18;;:32;;;;;;;-1:-1:-1;7369:32:11;;;;;;;;;7220:189::o;8036:1059::-;8328:22;8353:8;:6;:8::i;:::-;-1:-1:-1;;;;;8353:23:11;;;;;;:17;;;;;:23;;;;;;;-1:-1:-1;8408:8:11;:6;:8::i;:::-;:34;;;;:25;;;;;:34;;;;;;;-1:-1:-1;8549:28:11;;;8545:352;;8594:19;8616:8;:6;:8::i;:::-;-1:-1:-1;;;;;8616:26:11;;;;;;:20;;;;;:26;;;;;;;;:42;;;;;;;;;;-1:-1:-1;8616:42:11;8675:8;:6;:8::i;:::-;-1:-1:-1;;;;;8675:26:11;;;;;;:20;;;;;:26;;;;;;;;:38;;;;;;;;:52;8702:10;8800:8;:6;:8::i;:::-;:38;;;;:25;;:38;;;;;;:51;8545:352;8993:8;:6;:8::i;:::-;:34;;;;:25;;;;;:34;;;;;8986:41;9045:8;:6;:8::i;:::-;-1:-1:-1;;;;;9045:26:11;;;;;;;:20;;;;;:26;;;;;;;;:42;;;;;;-1:-1:-1;9045:42:11;;9038:49;;;;-1:-1:-1;8036:1059:11:o;9394:1136::-;9648:22;9701:1;9673:8;:6;:8::i;:::-;:18;;:25;:29;;;;:::i;:::-;9648:54;;9713:18;9734:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;;;-1:-1:-1;10115:8:11;:6;:8::i;:::-;:18;;10134:14;10115:34;;;;;;;;:::i;:::-;;;;;;;;;10093:56;;10195:11;10162:8;:6;:8::i;:::-;:18;;10181:10;10162:30;;;;;;;;:::i;:::-;;;;;;;;;;:44;10314:10;10275:8;:6;:8::i;:::-;:36;;;;:23;;;;;:36;;;;;:49;10455:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;10448:39;10498:8;:6;:8::i;:::-;:18;;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9466:1064;;;9394:1136;:::o;6776:243::-;6862:14;6903:1;6879:8;:6;:8::i;:::-;-1:-1:-1;;;;;6879:21:11;;;;;;:17;;;;;:21;;;;;;:25;;;;:::i;:::-;6862:42;;6950:7;6915:8;:6;:8::i;:::-;-1:-1:-1;;;;;6915:24:11;;;;;;:20;;;;;:24;;;;;;;;:32;;;;;;;;:42;6940:6;6968:8;:6;:8::i;:::-;:34;;;;:25;;:34;;;;;;:43;;;;-1:-1:-1;;6776:243:11:o;12214:916:3:-;12267:7;;-1:-1:-1;;;12342:17:3;;12338:103;;-1:-1:-1;;;12379:17:3;;;-1:-1:-1;12424:2:3;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:3;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:3;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:3;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:3;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:3;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:3:o;2299:346:11:-;2428:4;-1:-1:-1;;;;;2465:21:11;;;;;;:172;;;2513:7;-1:-1:-1;;;;;2504:16:11;:5;-1:-1:-1;;;;;2504:16:11;;:79;;;;2541:8;:6;:8::i;:::-;-1:-1:-1;;;;;2541:33:11;;;;;;;:26;;;;;:33;;;;;;;;:42;;;;;;;;;;;;;2504:79;:132;;;;2629:7;-1:-1:-1;;;;;2604:32:11;:21;2617:7;2604:12;:21::i;:::-;-1:-1:-1;;;;;2604:32:11;;2445:192;2299:346;-1:-1:-1;;;;2299:346:11:o;14:300:12:-;67:3;105:5;99:12;132:6;127:3;120:19;188:6;181:4;174:5;170:16;163:4;158:3;154:14;148:47;240:1;233:4;224:6;219:3;215:16;211:27;204:38;303:4;296:2;292:7;287:2;279:6;275:15;271:29;266:3;262:39;258:50;251:57;;;14:300;;;;:::o;319:231::-;468:2;457:9;450:21;431:4;488:56;540:2;529:9;525:18;517:6;488:56;:::i;555:226::-;614:6;667:2;655:9;646:7;642:23;638:32;635:52;;;683:1;680;673:12;635:52;-1:-1:-1;728:23:12;;555:226;-1:-1:-1;555:226:12:o;994:173::-;1062:20;;-1:-1:-1;;;;;1111:31:12;;1101:42;;1091:70;;1157:1;1154;1147:12;1091:70;994:173;;;:::o;1172:300::-;1240:6;1248;1301:2;1289:9;1280:7;1276:23;1272:32;1269:52;;;1317:1;1314;1307:12;1269:52;1340:29;1359:9;1340:29;:::i;:::-;1330:39;1438:2;1423:18;;;;1410:32;;-1:-1:-1;;;1172:300:12:o;1659:374::-;1736:6;1744;1752;1805:2;1793:9;1784:7;1780:23;1776:32;1773:52;;;1821:1;1818;1811:12;1773:52;1844:29;1863:9;1844:29;:::i;:::-;1834:39;;1892:38;1926:2;1915:9;1911:18;1892:38;:::i;:::-;1659:374;;1882:48;;-1:-1:-1;;;1999:2:12;1984:18;;;;1971:32;;1659:374::o;2038:186::-;2097:6;2150:2;2138:9;2129:7;2125:23;2121:32;2118:52;;;2166:1;2163;2156:12;2118:52;2189:29;2208:9;2189:29;:::i;2229:347::-;2294:6;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2394:29;2413:9;2394:29;:::i;:::-;2384:39;;2473:2;2462:9;2458:18;2445:32;2520:5;2513:13;2506:21;2499:5;2496:32;2486:60;;2542:1;2539;2532:12;2486:60;2565:5;2555:15;;;2229:347;;;;;:::o;2581:127::-;2642:10;2637:3;2633:20;2630:1;2623:31;2673:4;2670:1;2663:15;2697:4;2694:1;2687:15;2713:1207;2808:6;2816;2824;2832;2885:3;2873:9;2864:7;2860:23;2856:33;2853:53;;;2902:1;2899;2892:12;2853:53;2925:29;2944:9;2925:29;:::i;:::-;2915:39;;2973:38;3007:2;2996:9;2992:18;2973:38;:::i;:::-;2963:48;-1:-1:-1;3080:2:12;3065:18;;3052:32;;-1:-1:-1;3159:2:12;3144:18;;3131:32;3186:18;3175:30;;3172:50;;;3218:1;3215;3208:12;3172:50;3241:22;;3294:4;3286:13;;3282:27;-1:-1:-1;3272:55:12;;3323:1;3320;3313:12;3272:55;3363:2;3350:16;3389:18;3381:6;3378:30;3375:56;;;3411:18;;:::i;:::-;3460:2;3454:9;3552:2;3514:17;;-1:-1:-1;;3510:31:12;;;3543:2;3506:40;3502:54;3490:67;;3587:18;3572:34;;3608:22;;;3569:62;3566:88;;;3634:18;;:::i;:::-;3670:2;3663:22;3694;;;3735:15;;;3752:2;3731:24;3728:37;-1:-1:-1;3725:57:12;;;3778:1;3775;3768:12;3725:57;3834:6;3829:2;3825;3821:11;3816:2;3808:6;3804:15;3791:50;3887:1;3882:2;3873:6;3865;3861:19;3857:28;3850:39;3908:6;3898:16;;;;;2713:1207;;;;;;;:::o;3925:260::-;3993:6;4001;4054:2;4042:9;4033:7;4029:23;4025:32;4022:52;;;4070:1;4067;4060:12;4022:52;4093:29;4112:9;4093:29;:::i;:::-;4083:39;;4141:38;4175:2;4164:9;4160:18;4141:38;:::i;:::-;4131:48;;3925:260;;;;;:::o;4382:380::-;4461:1;4457:12;;;;4504;;;4525:61;;4579:4;4571:6;4567:17;4557:27;;4525:61;4632:2;4624:6;4621:14;4601:18;4598:38;4595:161;;4678:10;4673:3;4669:20;4666:1;4659:31;4713:4;4710:1;4703:15;4741:4;4738:1;4731:15;4595:161;;4382:380;;;:::o;5422:127::-;5483:10;5478:3;5474:20;5471:1;5464:31;5514:4;5511:1;5504:15;5538:4;5535:1;5528:15;5554:212;5596:3;5634:5;5628:12;5678:6;5671:4;5664:5;5660:16;5655:3;5649:36;5740:1;5704:16;;5729:13;;;-1:-1:-1;5704:16:12;;5554:212;-1:-1:-1;5554:212:12:o;5771:423::-;6040:3;6071:57;6097:30;6123:3;6115:6;6097:30;:::i;:::-;6089:6;6071:57;:::i;:::-;-1:-1:-1;;;6137:22:12;;6186:1;6175:13;;5771:423;-1:-1:-1;;;;5771:423:12:o;6199:1050::-;-1:-1:-1;;;6846:43:12;;6828:3;6908:38;6943:1;6934:11;;6926:6;6908:38;:::i;:::-;-1:-1:-1;;;6955:58:12;;7032:38;7066:2;7058:11;;7050:6;7032:38;:::i;:::-;-1:-1:-1;;;7079:46:12;;7022:48;-1:-1:-1;7144:38:12;7178:2;7170:11;;7162:6;7144:38;:::i;:::-;-1:-1:-1;;;7191:26:12;;7241:1;7233:10;;6199:1050;-1:-1:-1;;;;;;6199:1050:12:o;7254:355::-;7516:31;7511:3;7504:44;7486:3;7564:39;7599:2;7594:3;7590:12;7582:6;7564:39;:::i;7614:496::-;-1:-1:-1;;;;;7845:32:12;;;7827:51;;7914:32;;7909:2;7894:18;;7887:60;7978:2;7963:18;;7956:34;;;8026:3;8021:2;8006:18;;7999:31;;;-1:-1:-1;;8047:57:12;;8084:19;;8076:6;8047:57;:::i;:::-;8039:65;7614:496;-1:-1:-1;;;;;;7614:496:12:o;8115:290::-;8184:6;8237:2;8225:9;8216:7;8212:23;8208:32;8205:52;;;8253:1;8250;8243:12;8205:52;8279:16;;-1:-1:-1;;;;;;8324:32:12;;8314:43;;8304:71;;8371:1;8368;8361:12;8542:127;8603:10;8598:3;8594:20;8591:1;8584:31;8634:4;8631:1;8624:15;8658:4;8655:1;8648:15;8674:125;8739:9;;;8760:10;;;8757:36;;;8773:18;;:::i;8804:217::-;8844:1;8870;8860:132;;8914:10;8909:3;8905:20;8902:1;8895:31;8949:4;8946:1;8939:15;8977:4;8974:1;8967:15;8860:132;-1:-1:-1;9006:9:12;;8804:217::o;9026:168::-;9099:9;;;9130;;9147:15;;;9141:22;;9127:37;9117:71;;9168:18;;:::i;9199:128::-;9266:9;;;9287:11;;;9284:37;;;9301:18;;:::i;9332:127::-;9393:10;9388:3;9384:20;9381:1;9374:31;9424:4;9421:1;9414:15;9448:4;9445:1;9438:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1224000",
								"executionCost": "1273",
								"totalCost": "1225273"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2678",
								"contractURI()": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26804",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "infinite",
								"tokenOfOwnerByIndex(address,uint256)": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2436",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_baseURI()": "infinite",
								"_contractDescription()": "infinite",
								"_contractImage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 4968,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb3bbb00633feec7a66a2814ddfa954d94e7d141b2c1dfd4782ec799c68541b464736f6c634300081b0033",
									".code": [
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "B88D4FDE"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "C87B56DD"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "E8A3D485"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "E985E9C5"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "A22CB465"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "2F745C59"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "42842E0E"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "4F6CCCE7"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "81812FC"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 4968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 515,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 515,
											"end": 616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3027,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3027,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 932,
											"end": 983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 920,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2742,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2742,
											"end": 2857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 737,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 851,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 737,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1477,
											"end": 1654,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2247,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2247,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 859,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 859,
											"end": 1175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1796,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1796,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1183,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1183,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1666,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1666,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1453,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1453,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 624,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 624,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 624,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 624,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2865,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2865,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1972,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1972,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4160,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4160,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3403,
											"end": 4152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3205,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3205,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4369,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4190,
											"end": 4377,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 515,
											"end": 616,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 515,
											"end": 616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 552,
											"end": 565,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 585,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 585,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 585,
											"end": 603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 585,
											"end": 603,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 585,
											"end": 603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 578,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 578,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 578,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 578,
											"end": 608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3130,
											"end": 3137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3106,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3138,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3106,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3181,
											"end": 3188,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3180,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3158,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3189,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3027,
											"end": 3197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2825,
											"end": 2827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2848,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2806,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2806,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2742,
											"end": 2857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 737,
											"end": 851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 781,
											"end": 788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 808,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 808,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 808,
											"end": 826,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 808,
											"end": 826,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 808,
											"end": 836,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 808,
											"end": 836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 808,
											"end": 843,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 808,
											"end": 843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 737,
											"end": 851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 737,
											"end": 851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2392,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2372,
											"end": 2460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2457,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2460,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2460,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2372,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2515,
											"end": 2517,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2526,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2528,
											"end": 2538,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2497,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2497,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2473,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2567,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5019,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5019,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 5020,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5099,
											"end": 5131,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5097,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5072,
											"end": 5132,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4942,
											"end": 4960,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2597,
											"end": 2726,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4767,
											"end": 5138,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2550,
											"end": 2726,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2361,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 859,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 972,
											"end": 979,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1005,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1005,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1021,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 992,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 992,
											"end": 1106,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5368,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1045,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5143,
											"end": 5417,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 992,
											"end": 1106,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 992,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1123,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1123,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1123,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1153,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1123,
											"end": 1153,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1153,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1160,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1123,
											"end": 1167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 859,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1934,
											"end": 1938,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1942,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1944,
											"end": 1951,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1917,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1917,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1282,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1282,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1282,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1273,
											"end": 1295,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1269,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1269,
											"end": 1385,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "295F44F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1364,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5368,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1319,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 5143,
											"end": 5417,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1269,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1402,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1402,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1402,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1430,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1402,
											"end": 1430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1402,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1437,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1437,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1437,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1666,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1748,
											"end": 1780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1453,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1532,
											"end": 1551,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1528,
											"end": 1598,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1560,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1528,
											"end": 1598,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1528,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1616,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1616,
											"end": 1634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 624,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 624,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 663,
											"end": 676,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 696,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 696,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 696,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 696,
											"end": 714,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 696,
											"end": 714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 696,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 696,
											"end": 721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 689,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 689,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 689,
											"end": 721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 689,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 689,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2865,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2980,
											"end": 2990,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2992,
											"end": 3000,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3010,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2951,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2951,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1972,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2134,
											"end": 2138,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2140,
											"end": 2142,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2121,
											"end": 2152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2152,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2121,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2195,
											"end": 2205,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2211,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2215,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2224,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2230,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2163,
											"end": 2231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4216,
											"end": 4229,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4242,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4242,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4274,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4242,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4242,
											"end": 4274,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "697066733A2F2F736F6D657468696E672F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 4589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4486,
											"end": 4597,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4321,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4311,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4287,
											"end": 4321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4377,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4411,
											"end": 4418,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4420,
											"end": 4427,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4420,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 4397,
											"end": 4448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 4352,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4470,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4478,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3654,
											"end": 4068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3783,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3870,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3870,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3870,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3967,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3967,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3983,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3967,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3694,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3694,
											"end": 4045,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3654,
											"end": 4068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3654,
											"end": 4068,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3654,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3518,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 4129,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 4144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 4144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 4152,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3205,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3334,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3334,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3377,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3205,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 923,
											"end": 1087,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 923,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 296,
											"end": 331,
											"name": "PUSH",
											"source": 11,
											"value": "F2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78"
										},
										{
											"begin": 296,
											"end": 331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17646,
											"end": 17906,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 17646,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17709,
											"end": 17716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17729,
											"end": 17742,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 17754,
											"end": 17761,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17745,
											"end": 17753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 17745,
											"end": 17762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17729,
											"end": 17762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17777,
											"end": 17796,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17777,
											"end": 17796,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1477,
											"end": 1654,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1850,
											"end": 1979,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1850,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1939,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15673,
											"end": 15795,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 15673,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15754,
											"end": 15787,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 15763,
											"end": 15765,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15767,
											"end": 15774,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15776,
											"end": 15780,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15782,
											"end": 15786,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15754,
											"end": 15762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 15754,
											"end": 15787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5218,
											"end": 5225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5271,
											"end": 5278,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5262,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5262,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5238,
											"end": 5279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5338,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5338,
											"end": 5435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5394,
											"end": 5407,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5415,
											"end": 5422,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5377,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5377,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5626,
											"end": 5627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5609,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5703,
											"end": 5711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5845,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5845,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 5910,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "PUSH",
											"source": 11,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6099,
											"end": 6106,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 6067,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6129,
											"end": 6142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6125,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6125,
											"end": 6233,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6198,
											"end": 6211,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 6165,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6317,
											"end": 6324,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6280,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 6280,
											"end": 6325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6364,
											"end": 6366,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6360,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6343,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 6343,
											"end": 6435,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 6383,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6454,
											"end": 6467,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 6475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17025,
											"end": 17403,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 17025,
											"end": 17403,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17159,
											"end": 17181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17159,
											"end": 17181,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17155,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 17155,
											"end": 17261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17205,
											"end": 17249,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17155,
											"end": 17261,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 17155,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17317,
											"end": 17325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 17271,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 17271,
											"end": 17279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17279,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 17271,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17297,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17304,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17325,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4355,
											"end": 4369,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4369,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4371,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4330,
											"end": 4371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17271,
											"end": 17314,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "PUSH",
											"source": 11,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17341,
											"end": 17395,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 17025,
											"end": 17403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17025,
											"end": 17403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17025,
											"end": 17403,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17025,
											"end": 17403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18640,
											"end": 18654,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18640,
											"end": 18654,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18640,
											"end": 18654,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 18640,
											"end": 18658,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18636,
											"end": 19565,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 18636,
											"end": 19565,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18732,
											"name": "PUSH",
											"source": 11,
											"value": "150B7A02"
										},
										{
											"begin": 18696,
											"end": 18732,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18755,
											"end": 18763,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18755,
											"end": 18763,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18786,
											"end": 18790,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 18786,
											"end": 18790,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18813,
											"end": 18820,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 18813,
											"end": 18820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18843,
											"end": 18847,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 18843,
											"end": 18847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 18696,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 18696,
											"end": 18866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 18696,
											"end": 18866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "3F"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19174,
											"end": 19180,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19174,
											"end": 19187,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19191,
											"end": 19192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19174,
											"end": 19192,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19170,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 19170,
											"end": 19539,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19280,
											"end": 19318,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19170,
											"end": 19539,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 19170,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19489,
											"end": 19495,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 19483,
											"end": 19496,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 19474,
											"end": 19480,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19470,
											"end": 19472,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19466,
											"end": 19481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19459,
											"end": 19497,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18927,
											"end": 18978,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18927,
											"end": 18978,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18927,
											"end": 18978,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 18923,
											"end": 19107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 18923,
											"end": 19107,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19049,
											"end": 19087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18923,
											"end": 19107,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 18923,
											"end": 19107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18880,
											"end": 19122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 18675,
											"end": 19554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18453,
											"end": 19572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 2
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 4965,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 4757,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4812,
											"end": 4825,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH data",
											"source": 5,
											"value": "181E845E6C0EB8C054A077E1938A77F4971788CB2D26CF8484DAF453967E5FBD"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 4965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 4965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4749,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4605,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4654,
											"end": 4666,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH data",
											"source": 5,
											"value": "585614BB91AD8BA7A82CA696A2A8C1013B91B1A829F17F122D730FE2ACA1B7B6"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4679,
											"end": 4741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4605,
											"end": 4749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 476,
											"end": 3858,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 476,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 534,
											"end": 547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 766,
											"end": 770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 777,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 784,
											"end": 793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 793,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 762,
											"end": 793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 843,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH data",
											"source": 1,
											"value": "84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 865,
											"end": 871,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 843,
											"end": 871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1325,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1314,
											"end": 1329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1313,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1313,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1308,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1308,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1297,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1512,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1504,
											"end": 1509,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1604,
											"end": 1610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1600,
											"end": 1617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1696,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1697,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1680,
											"end": 1684,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1940,
											"end": 1944,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 1990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2021,
											"end": 2025,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2117,
											"end": 2124,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2114,
											"end": 2133,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2219,
											"end": 2226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2215,
											"end": 2230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2230,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2204,
											"end": 2230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2273,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2260,
											"end": 2274,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2853,
											"end": 2857,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2843,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2831,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2859,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2811,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2861,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2891,
											"end": 2908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2908,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2908,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3000,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 2988,
											"end": 2993,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2980,
											"end": 2994,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 3001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2974,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 3003,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 2954,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 3004,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3050,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3038,
											"end": 3047,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3051,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3138,
											"end": 3142,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3130,
											"end": 3135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3123,
											"end": 3136,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3117,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3097,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3146,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3180,
											"end": 3189,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3176,
											"end": 3193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3276,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 3265,
											"end": 3270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3259,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3247,
											"end": 3278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3279,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3280,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3314,
											"end": 3323,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3297,
											"end": 3327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 2093,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3599,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3601,
											"name": "MOD",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3575,
											"end": 3818,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3662,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3647,
											"end": 3664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3639,
											"end": 3671,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3713,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3720,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3614,
											"end": 3734,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3747,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "3D"
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3804,
											"name": "MSTORE8",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3818,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3575,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 476,
											"end": 3858,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 476,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1670,
											"end": 1677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1697,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15983,
											"end": 16806,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 15983,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16228,
											"end": 16241,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 16258,
											"end": 16265,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16244,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 16244,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16228,
											"end": 16266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16463,
											"end": 16467,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16454,
											"end": 16459,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 16489,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 16489,
											"end": 16497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16488,
											"end": 16528,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 950,
											"end": 982,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 950,
											"end": 982,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 932,
											"end": 983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 786,
											"end": 989,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16714,
											"end": 16721,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16710,
											"end": 16712,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 11,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16213,
											"end": 16749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16796,
											"end": 16798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 16761,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 16761,
											"end": 16769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16784,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 16761,
											"end": 16784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15983,
											"end": 16806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3578,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 3089,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 3228,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3223,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 3223,
											"end": 3571,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1623,
											"end": 1648,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1596,
											"end": 1614,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 1477,
											"end": 1654,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5335,
											"end": 5367,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 5368,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5377,
											"end": 5411,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5143,
											"end": 5417,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7220,
											"end": 7409,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7220,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7333,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7333,
											"end": 7358,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7298,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7298,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7298,
											"end": 7358,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7369,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7369,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7220,
											"end": 7409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8036,
											"end": 9095,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8036,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8328,
											"end": 8350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8353,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8408,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8594,
											"end": 8613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 8616,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8616,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8675,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8675,
											"end": 8727,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8702,
											"end": 8712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8800,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8825,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8800,
											"end": 8825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8800,
											"end": 8851,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 8993,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8986,
											"end": 9027,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 9045,
											"end": 9053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 9095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 9673,
											"end": 9681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 9673,
											"end": 9702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9648,
											"end": 9702,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9713,
											"end": 9731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 9734,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 9734,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 10115,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 10115,
											"end": 10123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 10115,
											"end": 10149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10149,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10093,
											"end": 10149,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10206,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 10162,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 10162,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10191,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 10162,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10162,
											"end": 10206,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10314,
											"end": 10324,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 10275,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10324,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 10455,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10448,
											"end": 10487,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 10498,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10498,
											"end": 10522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9394,
											"end": 10530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6776,
											"end": 7019,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 6776,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6876,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6879,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 6879,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6950,
											"end": 6957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6915,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6915,
											"end": 6957,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 6968,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 6968,
											"end": 6976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 6993,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6968,
											"end": 6993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 3,
											"value": "330"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 3,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 3,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 3,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 3,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 3,
											"value": "336"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 3,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 3,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 3,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 3,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 2541,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 2604,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2445,
											"end": 2637,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 314,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 14,
											"end": 314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 67,
											"end": 70,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 99,
											"end": 111,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 132,
											"end": 138,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 127,
											"end": 130,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 120,
											"end": 139,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 188,
											"end": 194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 181,
											"end": 185,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 179,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 170,
											"end": 186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 163,
											"end": 167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 158,
											"end": 161,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 154,
											"end": 168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 148,
											"end": 195,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 240,
											"end": 241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 237,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 230,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 219,
											"end": 222,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 215,
											"end": 231,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 211,
											"end": 238,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 204,
											"end": 242,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 303,
											"end": 307,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 298,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 292,
											"end": 299,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 287,
											"end": 289,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 279,
											"end": 285,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 275,
											"end": 290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 271,
											"end": 300,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 266,
											"end": 269,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 262,
											"end": 301,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 258,
											"end": 308,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 251,
											"end": 308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 251,
											"end": 308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 251,
											"end": 308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 314,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14,
											"end": 314,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 319,
											"end": 550,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 319,
											"end": 550,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 468,
											"end": 470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 457,
											"end": 466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 450,
											"end": 471,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 431,
											"end": 435,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 538,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 525,
											"end": 543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 488,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 488,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 555,
											"end": 781,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 555,
											"end": 781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 614,
											"end": 620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 667,
											"end": 669,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 646,
											"end": 653,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 642,
											"end": 665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 638,
											"end": 670,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 635,
											"end": 687,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 635,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 683,
											"end": 684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 685,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 635,
											"end": 687,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 635,
											"end": 687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 728,
											"end": 751,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 728,
											"end": 751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 555,
											"end": 781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 555,
											"end": 781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1167,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 994,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1062,
											"end": 1082,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1111,
											"end": 1142,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1143,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1143,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1091,
											"end": 1161,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1157,
											"end": 1158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1147,
											"end": 1159,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1161,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1091,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 994,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1172,
											"end": 1472,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1172,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1317,
											"end": 1318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1319,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1269,
											"end": 1321,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1340,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1369,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 1340,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 1369,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1442,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1410,
											"end": 1442,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1172,
											"end": 1472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1659,
											"end": 2033,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1659,
											"end": 2033,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1736,
											"end": 1742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1752,
											"end": 1758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1807,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1793,
											"end": 1802,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1784,
											"end": 1791,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1780,
											"end": 1803,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1776,
											"end": 1808,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1825,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 1773,
											"end": 1825,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1821,
											"end": 1822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1819,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1823,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1773,
											"end": 1825,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 1773,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1863,
											"end": 1872,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1844,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1844,
											"end": 1873,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 1844,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1892,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 1926,
											"end": 1928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1924,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1911,
											"end": 1929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1892,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1892,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1892,
											"end": 1930,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 1892,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1659,
											"end": 2033,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1659,
											"end": 2033,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1930,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1930,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1999,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1971,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1971,
											"end": 2003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1659,
											"end": 2033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2224,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 2038,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2152,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2138,
											"end": 2147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2129,
											"end": 2136,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2125,
											"end": 2148,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2153,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2166,
											"end": 2167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2163,
											"end": 2164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2156,
											"end": 2168,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 2118,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2189,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2189,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2294,
											"end": 2300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2357,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2343,
											"end": 2352,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2353,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2326,
											"end": 2358,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2375,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 2323,
											"end": 2375,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2373,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2375,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 2323,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2413,
											"end": 2422,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2394,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2423,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 2394,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2384,
											"end": 2423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2473,
											"end": 2475,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2471,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2445,
											"end": 2477,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2525,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2527,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2539,
											"end": 2540,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2544,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 2486,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2555,
											"end": 2570,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2581,
											"end": 2708,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 2581,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2642,
											"end": 2652,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2633,
											"end": 2653,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2630,
											"end": 2631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2654,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2673,
											"end": 2677,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2663,
											"end": 2678,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2701,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2702,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2888,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2873,
											"end": 2882,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2883,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2856,
											"end": 2889,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2906,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2853,
											"end": 2906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2904,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2853,
											"end": 2906,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 2853,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2944,
											"end": 2953,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2925,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 2925,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2954,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 3005,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2992,
											"end": 3010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2973,
											"end": 3011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2963,
											"end": 3011,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3065,
											"end": 3083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3052,
											"end": 3084,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3052,
											"end": 3084,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3161,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3162,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3131,
											"end": 3163,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3175,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3175,
											"end": 3205,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3222,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3172,
											"end": 3222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3218,
											"end": 3219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3222,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 3172,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3241,
											"end": 3263,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3241,
											"end": 3263,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3294,
											"end": 3298,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3282,
											"end": 3309,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3272,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3272,
											"end": 3327,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3325,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3327,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 3272,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3365,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3350,
											"end": 3366,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3407,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3381,
											"end": 3387,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3408,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3431,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3375,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 3375,
											"end": 3431,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 3411,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 3411,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3463,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3554,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3514,
											"end": 3531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3531,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3541,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3541,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3543,
											"end": 3545,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 3506,
											"end": 3546,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3556,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3490,
											"end": 3557,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3587,
											"end": 3605,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3608,
											"end": 3630,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3569,
											"end": 3631,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3654,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3566,
											"end": 3654,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 3634,
											"end": 3652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3670,
											"end": 3672,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3685,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3694,
											"end": 3716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3694,
											"end": 3716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3694,
											"end": 3716,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3735,
											"end": 3750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3731,
											"end": 3755,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3728,
											"end": 3765,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 3725,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3825,
											"end": 3827,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3821,
											"end": 3832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3808,
											"end": 3814,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3819,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3841,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3871,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3861,
											"end": 3880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3857,
											"end": 3885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3850,
											"end": 3889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2713,
											"end": 3920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 3999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4001,
											"end": 4007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4056,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4051,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4033,
											"end": 4040,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4029,
											"end": 4052,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4057,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4074,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 4022,
											"end": 4074,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4070,
											"end": 4071,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4068,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4072,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4074,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 4022,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 4112,
											"end": 4121,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4093,
											"end": 4122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4093,
											"end": 4122,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 4093,
											"end": 4122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4083,
											"end": 4122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4173,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4160,
											"end": 4178,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 4141,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4141,
											"end": 4179,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 4141,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4131,
											"end": 4179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 4185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4762,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 4382,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 4457,
											"end": 4469,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4516,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4516,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4504,
											"end": 4516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 4525,
											"end": 4586,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4583,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 4571,
											"end": 4577,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4584,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 4584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4557,
											"end": 4584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4586,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 4525,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4632,
											"end": 4634,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4621,
											"end": 4635,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4601,
											"end": 4619,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4598,
											"end": 4636,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 4595,
											"end": 4756,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4688,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 4673,
											"end": 4676,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4669,
											"end": 4689,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4659,
											"end": 4690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4713,
											"end": 4717,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4710,
											"end": 4711,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4703,
											"end": 4718,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4741,
											"end": 4745,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4738,
											"end": 4739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4746,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4756,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 4595,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4382,
											"end": 4762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5422,
											"end": 5549,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 5422,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 5493,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5474,
											"end": 5494,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5471,
											"end": 5472,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5464,
											"end": 5495,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5514,
											"end": 5518,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 5519,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5535,
											"end": 5536,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5543,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5766,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5554,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5678,
											"end": 5684,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5671,
											"end": 5675,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5669,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5660,
											"end": 5676,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 5658,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5649,
											"end": 5685,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5704,
											"end": 5720,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5704,
											"end": 5720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5704,
											"end": 5720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5554,
											"end": 5766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5554,
											"end": 5766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 6194,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 5771,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6040,
											"end": 6043,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6123,
											"end": 6126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6097,
											"end": 6127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6089,
											"end": 6095,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6071,
											"end": 6128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "173539B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6159,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6137,
											"end": 6159,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6175,
											"end": 6188,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6188,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5771,
											"end": 6194,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 7249,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 6199,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3D913730B6B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6846,
											"end": 6889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6846,
											"end": 6889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6908,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6943,
											"end": 6944,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6934,
											"end": 6945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6908,
											"end": 6946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6908,
											"end": 6946,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 6908,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1116113232B9B1B934B83A34B7B7111D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6955,
											"end": 7013,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 7013,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 7066,
											"end": 7068,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7058,
											"end": 7069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7058,
											"end": 7069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7032,
											"end": 7070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7032,
											"end": 7070,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 7032,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11161134B6B0B3B2911D11"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7079,
											"end": 7125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7079,
											"end": 7125,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7022,
											"end": 7070,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7144,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 7178,
											"end": 7180,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7170,
											"end": 7181,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7162,
											"end": 7168,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7144,
											"end": 7182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7144,
											"end": 7182,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 7144,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "227D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 7243,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 7249,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 7249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7254,
											"end": 7609,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 7254,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7516,
											"end": 7547,
											"name": "PUSH",
											"source": 12,
											"value": "646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000"
										},
										{
											"begin": 7511,
											"end": 7514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7548,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7486,
											"end": 7489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7564,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 7599,
											"end": 7601,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 7594,
											"end": 7597,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 7564,
											"end": 7603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 8110,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 7614,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7845,
											"end": 7877,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7877,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7845,
											"end": 7877,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7827,
											"end": 7878,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 7946,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7914,
											"end": 7946,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7909,
											"end": 7911,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7894,
											"end": 7912,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7887,
											"end": 7947,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7978,
											"end": 7980,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 7990,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 7990,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 7990,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8029,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8021,
											"end": 8023,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8006,
											"end": 8024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8006,
											"end": 8024,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7999,
											"end": 8030,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7999,
											"end": 8030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7999,
											"end": 8030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 8047,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8047,
											"end": 8104,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8084,
											"end": 8103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8047,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8104,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 8047,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8039,
											"end": 8104,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 7614,
											"end": 8110,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7614,
											"end": 8110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8405,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 8115,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8184,
											"end": 8190,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8237,
											"end": 8239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8225,
											"end": 8234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8216,
											"end": 8223,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8212,
											"end": 8235,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8208,
											"end": 8240,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8257,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 8205,
											"end": 8257,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8253,
											"end": 8254,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8255,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8205,
											"end": 8257,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 8205,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8295,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8324,
											"end": 8356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8356,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8314,
											"end": 8357,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8304,
											"end": 8375,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 8304,
											"end": 8375,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8371,
											"end": 8372,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8368,
											"end": 8369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8373,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8542,
											"end": 8669,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8542,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8603,
											"end": 8613,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8598,
											"end": 8601,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8594,
											"end": 8614,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8591,
											"end": 8592,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8584,
											"end": 8615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8634,
											"end": 8638,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8631,
											"end": 8632,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8624,
											"end": 8639,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8658,
											"end": 8662,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8655,
											"end": 8656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8648,
											"end": 8663,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8799,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8674,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8739,
											"end": 8748,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8770,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8770,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8770,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8757,
											"end": 8793,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8757,
											"end": 8793,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8757,
											"end": 8793,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 8773,
											"end": 8791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 9021,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 8804,
											"end": 9021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8844,
											"end": 8845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 8860,
											"end": 8992,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 8924,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 8909,
											"end": 8912,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8905,
											"end": 8925,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8895,
											"end": 8926,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8949,
											"end": 8953,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8946,
											"end": 8947,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8939,
											"end": 8954,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8977,
											"end": 8981,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8974,
											"end": 8975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8982,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8860,
											"end": 8992,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 8860,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9006,
											"end": 9015,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9015,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8804,
											"end": 9021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9026,
											"end": 9194,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 9026,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9099,
											"end": 9108,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9130,
											"end": 9139,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9130,
											"end": 9139,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9147,
											"end": 9162,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9163,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9141,
											"end": 9163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 9127,
											"end": 9164,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 9117,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9117,
											"end": 9188,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9168,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9168,
											"end": 9186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9199,
											"end": 9327,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 9199,
											"end": 9327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9275,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9275,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9266,
											"end": 9275,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9298,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9287,
											"end": 9298,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9284,
											"end": 9321,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9301,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9301,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 9301,
											"end": 9319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9332,
											"end": 9459,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 9332,
											"end": 9459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9393,
											"end": 9403,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 9388,
											"end": 9391,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9384,
											"end": 9404,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "PUSH",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 9421,
											"end": 9422,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9414,
											"end": 9429,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9445,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9453,
											"name": "REVERT",
											"source": 12
										}
									],
									".data": {
										"181E845E6C0EB8C054A077E1938A77F4971788CB2D26CF8484DAF453967E5FBD": "5468697320697320636f6e7472616374206465736372697074696f6e2e4465706f6c796564206279206a757374776569277320455243373231204469616d6f6e6420696d706c656d656e746174696f6e2e",
										"585614BB91AD8BA7A82CA696A2A8C1013B91B1A829F17F122D730FE2ACA1B7B6": "697066733a2f2f516d636967396548385857455a5a7546395a47514437674141484d446a373973543875643738375067443537754e",
										"84D8A590DE33E00CBDC16E1F28C3506F5EC15C599FAB9A6A4BCD575CC2F110CE": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"contractURI()": "e8a3d485",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/ERC721Facet.sol\":\"ERC721Facet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4\",\"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/facets/ERC721Facet.sol\":{\"keccak256\":\"0x855fe6f10a42cee8d0c503755b45e5e74bb33cf6283476bae19f0dd54572fadd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e3f5c76430ce28321af8cedc65df2aacf3d2b485a711d949c8e6f3f741a283\",\"dweb:/ipfs/QmPabSbromnH2Zxw7L7uQWg7m1B3w9rK3fFvJTz5iWrreV\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x9dc9c4413e2defad82578e039cccf4afa032c3a7bbca173275793fbd32b590df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fb0967bf044079b91d3a62f7c9607fa4aa08fa531a48cd3d8c93ec7d8709a36\",\"dweb:/ipfs/QmfKnGqHtaobRX28SKqNkXJ65WszD5XpnEP9hmMizuVQws\"]},\"contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xeb07ebed9c5cc87929a00576c45dcd95579b71e260bf31b6aaa7a3303c5d3326\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d63721539f486d8f7c55b78d07f9d23b7c21931dbce5db47f5779553d300410\",\"dweb:/ipfs/QmXE7mxPMtidkLmLkJkKNse8yMA9GU1qkGKszaZfBnRyEN\"]},\"contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xaeeb365ac7c62c228645afce520bd958c6117c3903df1122af5c0e8071dc7eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dc5fac13ceb7759c179faac0135b11c29c459916aac4b653be7858fd1c00332\",\"dweb:/ipfs/QmcLjquErwSiq4fvJqm6PiHdxRDuE8gVbQL4jNxmoJnP8N\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]},\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]},\"contracts/libraries/LibERC721.sol\":{\"keccak256\":\"0x1d4edd38cf9ec01672aba91cbd8be26257d765c02b7e35ba9d33fa2a2289c12b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb2bdaa6fc0d68af4d38e1f57b279bdbeb185129de97895fdb9f22c48f97948\",\"dweb:/ipfs/QmXJWB4qyVTW1c2SD6nvp6Q3gQRDvg8sNQTzdLeaTCdZVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x9dc9c4413e2defad82578e039cccf4afa032c3a7bbca173275793fbd32b590df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fb0967bf044079b91d3a62f7c9607fa4aa08fa531a48cd3d8c93ec7d8709a36\",\"dweb:/ipfs/QmfKnGqHtaobRX28SKqNkXJ65WszD5XpnEP9hmMizuVQws\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x9dc9c4413e2defad82578e039cccf4afa032c3a7bbca173275793fbd32b590df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fb0967bf044079b91d3a62f7c9607fa4aa08fa531a48cd3d8c93ec7d8709a36\",\"dweb:/ipfs/QmfKnGqHtaobRX28SKqNkXJ65WszD5XpnEP9hmMizuVQws\"]},\"contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xeb07ebed9c5cc87929a00576c45dcd95579b71e260bf31b6aaa7a3303c5d3326\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d63721539f486d8f7c55b78d07f9d23b7c21931dbce5db47f5779553d300410\",\"dweb:/ipfs/QmXE7mxPMtidkLmLkJkKNse8yMA9GU1qkGKszaZfBnRyEN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0x9dc9c4413e2defad82578e039cccf4afa032c3a7bbca173275793fbd32b590df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fb0967bf044079b91d3a62f7c9607fa4aa08fa531a48cd3d8c93ec7d8709a36\",\"dweb:/ipfs/QmfKnGqHtaobRX28SKqNkXJ65WszD5XpnEP9hmMizuVQws\"]},\"contracts/interfaces/IERC721Metadata.sol\":{\"keccak256\":\"0xaeeb365ac7c62c228645afce520bd958c6117c3903df1122af5c0e8071dc7eb1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dc5fac13ceb7759c179faac0135b11c29c459916aac4b653be7858fd1c00332\",\"dweb:/ipfs/QmcLjquErwSiq4fvJqm6PiHdxRDuE8gVbQL4jNxmoJnP8N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Errors.sol": {
				"ERC721Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Errors.sol\":142:2637  library ERC721Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Errors.sol\":142:2637  library ERC721Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH6 0x51FC37E6DB28 0xF 0xF7 RETURNDATACOPY 0xDE LOG3 0xCB XOR EQ 0x29 0x2C DUP6 EXTCODECOPY STATICCALL 0xA8 0xBF LOG0 0xCE CALL SWAP2 NOT 0xF9 0xAC PUSH12 0x1464736F6C634300081B0033 ",
							"sourceMap": "142:2495:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;142:2495:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH6 0x51FC37E6DB28 0xF 0xF7 RETURNDATACOPY 0xDE LOG3 0xCB XOR EQ 0x29 0x2C DUP6 EXTCODECOPY STATICCALL 0xA8 0xBF LOG0 0xCE CALL SWAP2 NOT 0xF9 0xAC PUSH12 0x1464736F6C634300081B0033 ",
							"sourceMap": "142:2495:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
									".code": [
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Errors.sol\":\"ERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Events.sol": {
				"ERC721Events": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Events.sol\":139:867  library ERC721Events {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Events.sol\":139:867  library ERC721Events {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 NOT 0x29 PUSH31 0xAD2D3F0A0F13DCFF657C6BE2D4CA4A66259C669C3C655160D72EA64736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "139:728:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;139:728:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 NOT 0x29 PUSH31 0xAD2D3F0A0F13DCFF657C6BE2D4CA4A66259C669C3C655160D72EA64736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "139:728:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 139,
									"end": 867,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
									".code": [
										{
											"begin": 139,
											"end": 867,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 139,
											"end": 867,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 139,
											"end": 867,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Events.sol\":\"ERC721Events\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/LibERC721.sol": {
				"LibERC721": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/LibERC721.sol\":221:19575  library LibERC721 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/LibERC721.sol\":221:19575  library LibERC721 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xCA EXTCODESIZE SMOD EXP LOG1 0xB4 0xE 0xED 0xE6 0xFC PUSH29 0x7FAED3A2A998F9BA3A44A01582610C263F0F5E8064736F6C634300081B STOP CALLER ",
							"sourceMap": "221:19354:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;221:19354:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xCA EXTCODESIZE SMOD EXP LOG1 0xB4 0xE 0xED 0xE6 0xFC PUSH29 0x7FAED3A2A998F9BA3A44A01582610C263F0F5E8064736F6C634300081B STOP CALLER ",
							"sourceMap": "221:19354:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_addTokenToAllTokensEnumeration(uint256)": "infinite",
								"_addTokenToOwnerEnumeration(address,uint256)": "infinite",
								"_approve(address,uint256,address)": "infinite",
								"_approve(address,uint256,address,bool)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkAuthorized(address,address,uint256)": "infinite",
								"_getApproved(uint256)": "infinite",
								"_increaseBalance(address,uint128)": "infinite",
								"_isAuthorized(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_removeTokenFromAllTokensEnumeration(uint256)": "infinite",
								"_removeTokenFromOwnerEnumeration(address,uint256)": "infinite",
								"_requireOwned(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,uint256,address)": "infinite",
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite",
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
									".code": [
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/utils/Base64.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/facets/ERC721Facet.sol",
								"contracts/interfaces/IERC721.sol",
								"contracts/interfaces/IERC721Enumerable.sol",
								"contracts/interfaces/IERC721Metadata.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibERC721.sol\":\"LibERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]},\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]},\"contracts/libraries/LibERC721.sol\":{\"keccak256\":\"0x1d4edd38cf9ec01672aba91cbd8be26257d765c02b7e35ba9d33fa2a2289c12b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb2bdaa6fc0d68af4d38e1f57b279bdbeb185129de97895fdb9f22c48f97948\",\"dweb:/ipfs/QmXJWB4qyVTW1c2SD6nvp6Q3gQRDvg8sNQTzdLeaTCdZVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "893:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "940:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "984:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:0"
									},
									"scope": 17,
									"src": "832:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "295:699:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Base64.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
					"exportedSymbols": {
						"Base64": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Base64",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 20,
								"nodeType": "StructuredDocumentation",
								"src": "126:75:1",
								"text": " @dev Provides a set of functions to operate with Base64 strings."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "Base64",
							"nameLocation": "210:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "223:54:1",
										"text": " @dev Base64 Encoding/Decoding Table"
									},
									"id": 24,
									"mutability": "constant",
									"name": "_TABLE",
									"nameLocation": "307:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "282:100:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 22,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "316:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce",
											"typeString": "literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""
										},
										"value": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "549:3309:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 32,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "766:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "771:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "766:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "781:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "766:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"documentation": " Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol",
												"id": 38,
												"nodeType": "IfStatement",
												"src": "762:31:1",
												"trueBody": {
													"expression": {
														"hexValue": "",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"functionReturnParameters": 31,
													"id": 37,
													"nodeType": "Return",
													"src": "784:9:1"
												}
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "table",
														"nameLocation": "857:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "843:19:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 39,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "843:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"initialValue": {
													"id": 41,
													"name": "_TABLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "865:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "843:28:1"
											},
											{
												"assignments": [
													44
												],
												"declarations": [
													{
														"constant": false,
														"id": 44,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "1288:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 62,
														"src": "1274:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 43,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1274:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "34",
																"id": 47,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 54,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 51,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 48,
																							"name": "data",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 27,
																							"src": "1314:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 49,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1319:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "1314:11:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "32",
																						"id": 50,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1328:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_2_by_1",
																							"typeString": "int_const 2"
																						},
																						"value": "2"
																					},
																					"src": "1314:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 52,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1313:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 53,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1333:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "1313:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 55,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1312:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1308:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1297:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 45,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1301:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1297:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1274:62:1"
											},
											{
												"AST": {
													"nativeSrc": "1399:2429:1",
													"nodeType": "YulBlock",
													"src": "1399:2429:1",
													"statements": [
														{
															"nativeSrc": "1484:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1484:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "table",
																		"nativeSrc": "1504:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1504:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1500:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:1"
																},
																"nativeSrc": "1500:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1500:13:1"
															},
															"variables": [
																{
																	"name": "tablePtr",
																	"nativeSrc": "1488:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1488:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1583:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1583:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "1604:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1612:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1612:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1600:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:1"
																},
																"nativeSrc": "1600:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1600:17:1"
															},
															"variables": [
																{
																	"name": "resultPtr",
																	"nativeSrc": "1587:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1587:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1630:19:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1630:19:1",
															"value": {
																"name": "data",
																"nativeSrc": "1645:4:1",
																"nodeType": "YulIdentifier",
																"src": "1645:4:1"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "1634:7:1",
																	"nodeType": "YulTypedName",
																	"src": "1634:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1662:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1662:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1680:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1680:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1692:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1692:4:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1686:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "1686:5:1"
																		},
																		"nativeSrc": "1686:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1686:11:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1676:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1676:3:1"
																},
																"nativeSrc": "1676:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1676:22:1"
															},
															"variables": [
																{
																	"name": "endPtr",
																	"nativeSrc": "1666:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1666:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1912:33:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1912:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "endPtr",
																		"nativeSrc": "1932:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1932:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1940:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1940:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1928:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1928:3:1"
																},
																"nativeSrc": "1928:17:1",
																"nodeType": "YulFunctionCall",
																"src": "1928:17:1"
															},
															"variables": [
																{
																	"name": "afterPtr",
																	"nativeSrc": "1916:8:1",
																	"nodeType": "YulTypedName",
																	"src": "1916:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1958:33:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1958:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "1982:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1982:8:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1976:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1976:5:1"
																},
																"nativeSrc": "1976:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1976:15:1"
															},
															"variables": [
																{
																	"name": "afterCache",
																	"nativeSrc": "1962:10:1",
																	"nodeType": "YulTypedName",
																	"src": "1962:10:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "2011:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2011:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2021:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2021:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2004:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:1"
																},
																"nativeSrc": "2004:22:1",
																"nodeType": "YulFunctionCall",
																"src": "2004:22:1"
															},
															"nativeSrc": "2004:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "2004:22:1"
														},
														{
															"body": {
																"nativeSrc": "2151:1201:1",
																"nodeType": "YulBlock",
																"src": "2151:1201:1",
																"statements": [
																	{
																		"nativeSrc": "2204:26:1",
																		"nodeType": "YulAssignment",
																		"src": "2204:26:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "2219:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "2219:7:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2228:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2228:1:1",
																					"type": "",
																					"value": "3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2215:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2215:3:1"
																			},
																			"nativeSrc": "2215:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2215:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "2204:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2204:7:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2247:27:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2247:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataPtr",
																					"nativeSrc": "2266:7:1",
																					"nodeType": "YulIdentifier",
																					"src": "2266:7:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2260:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2260:5:1"
																			},
																			"nativeSrc": "2260:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2260:14:1"
																		},
																		"variables": [
																			{
																				"name": "input",
																				"nativeSrc": "2251:5:1",
																				"nodeType": "YulTypedName",
																				"src": "2251:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2802:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2802:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2823:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2823:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2841:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2841:2:1",
																													"type": "",
																													"value": "18"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2845:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2845:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2837:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2837:3:1"
																											},
																											"nativeSrc": "2837:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2837:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2853:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2853:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2833:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2833:3:1"
																									},
																									"nativeSrc": "2833:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2833:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2819:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2819:3:1"
																							},
																							"nativeSrc": "2819:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2819:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2813:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2813:5:1"
																					},
																					"nativeSrc": "2813:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2794:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2794:7:1"
																			},
																			"nativeSrc": "2794:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2794:67:1"
																		},
																		"nativeSrc": "2794:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:67:1"
																	},
																	{
																		"nativeSrc": "2878:30:1",
																		"nodeType": "YulAssignment",
																		"src": "2878:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2895:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2895:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2906:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2891:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2891:3:1"
																			},
																			"nativeSrc": "2891:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2891:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "2878:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2878:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "2945:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "2945:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "2966:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "2966:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "2984:2:1",
																													"nodeType": "YulLiteral",
																													"src": "2984:2:1",
																													"type": "",
																													"value": "12"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "2988:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "2988:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "2980:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "2980:3:1"
																											},
																											"nativeSrc": "2980:14:1",
																											"nodeType": "YulFunctionCall",
																											"src": "2980:14:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "2996:4:1",
																											"nodeType": "YulLiteral",
																											"src": "2996:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "2976:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "2976:3:1"
																									},
																									"nativeSrc": "2976:25:1",
																									"nodeType": "YulFunctionCall",
																									"src": "2976:25:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2962:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "2962:3:1"
																							},
																							"nativeSrc": "2962:40:1",
																							"nodeType": "YulFunctionCall",
																							"src": "2962:40:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2956:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2956:5:1"
																					},
																					"nativeSrc": "2956:47:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2956:47:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "2937:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2937:7:1"
																			},
																			"nativeSrc": "2937:67:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2937:67:1"
																		},
																		"nativeSrc": "2937:67:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2937:67:1"
																	},
																	{
																		"nativeSrc": "3021:30:1",
																		"nodeType": "YulAssignment",
																		"src": "3021:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3038:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3038:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3049:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3049:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3034:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3034:3:1"
																			},
																			"nativeSrc": "3034:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3021:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3021:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3088:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3088:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "3109:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "3109:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"kind": "number",
																													"nativeSrc": "3127:1:1",
																													"nodeType": "YulLiteral",
																													"src": "3127:1:1",
																													"type": "",
																													"value": "6"
																												},
																												{
																													"name": "input",
																													"nativeSrc": "3130:5:1",
																													"nodeType": "YulIdentifier",
																													"src": "3130:5:1"
																												}
																											],
																											"functionName": {
																												"name": "shr",
																												"nativeSrc": "3123:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "3123:3:1"
																											},
																											"nativeSrc": "3123:13:1",
																											"nodeType": "YulFunctionCall",
																											"src": "3123:13:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3138:4:1",
																											"nodeType": "YulLiteral",
																											"src": "3138:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "3119:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3119:3:1"
																									},
																									"nativeSrc": "3119:24:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3119:24:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3105:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3105:3:1"
																							},
																							"nativeSrc": "3105:39:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3105:39:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3099:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3099:5:1"
																					},
																					"nativeSrc": "3099:46:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3099:46:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "3080:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3080:7:1"
																			},
																			"nativeSrc": "3080:66:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3080:66:1"
																		},
																		"nativeSrc": "3080:66:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3080:66:1"
																	},
																	{
																		"nativeSrc": "3163:30:1",
																		"nodeType": "YulAssignment",
																		"src": "3163:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3180:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3180:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3191:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3191:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3176:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3176:3:1"
																			},
																			"nativeSrc": "3176:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3176:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3163:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3163:9:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3230:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3230:9:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tablePtr",
																									"nativeSrc": "3251:8:1",
																									"nodeType": "YulIdentifier",
																									"src": "3251:8:1"
																								},
																								{
																									"arguments": [
																										{
																											"name": "input",
																											"nativeSrc": "3265:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "3265:5:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "3272:4:1",
																											"nodeType": "YulLiteral",
																											"src": "3272:4:1",
																											"type": "",
																											"value": "0x3F"
																										}
																									],
																									"functionName": {
																										"name": "and",
																										"nativeSrc": "3261:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "3261:3:1"
																									},
																									"nativeSrc": "3261:16:1",
																									"nodeType": "YulFunctionCall",
																									"src": "3261:16:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3247:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3247:3:1"
																							},
																							"nativeSrc": "3247:31:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3247:31:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "3241:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3241:5:1"
																					},
																					"nativeSrc": "3241:38:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3241:38:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "3222:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3222:7:1"
																			},
																			"nativeSrc": "3222:58:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3222:58:1"
																		},
																		"nativeSrc": "3222:58:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3222:58:1"
																	},
																	{
																		"nativeSrc": "3297:30:1",
																		"nodeType": "YulAssignment",
																		"src": "3297:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "resultPtr",
																					"nativeSrc": "3314:9:1",
																					"nodeType": "YulIdentifier",
																					"src": "3314:9:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3325:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3325:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3310:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3310:3:1"
																			},
																			"nativeSrc": "3310:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3310:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "resultPtr",
																				"nativeSrc": "3297:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3297:9:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "dataPtr",
																		"nativeSrc": "2117:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2117:7:1"
																	},
																	{
																		"name": "endPtr",
																		"nativeSrc": "2126:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2114:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2114:2:1"
																},
																"nativeSrc": "2114:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2114:19:1"
															},
															"nativeSrc": "2093:1259:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2134:16:1",
																"nodeType": "YulBlock",
																"src": "2134:16:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "2097:16:1",
																"nodeType": "YulBlock",
																"src": "2097:16:1",
																"statements": []
															},
															"src": "2093:1259:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "afterPtr",
																		"nativeSrc": "3420:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3420:8:1"
																	},
																	{
																		"name": "afterCache",
																		"nativeSrc": "3430:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "3430:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:1"
																},
																"nativeSrc": "3413:28:1",
																"nodeType": "YulFunctionCall",
																"src": "3413:28:1"
															},
															"nativeSrc": "3413:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "3413:28:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3621:113:1",
																		"nodeType": "YulBlock",
																		"src": "3621:113:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3651:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3651:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3662:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3662:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3647:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3647:3:1"
																							},
																							"nativeSrc": "3647:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3647:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3666:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3666:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3639:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3639:7:1"
																					},
																					"nativeSrc": "3639:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3639:32:1"
																				},
																				"nativeSrc": "3639:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3639:32:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3700:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3700:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3711:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3711:1:1",
																									"type": "",
																									"value": "2"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3696:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3696:3:1"
																							},
																							"nativeSrc": "3696:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3696:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3715:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3715:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3688:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3688:7:1"
																					},
																					"nativeSrc": "3688:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3688:32:1"
																				},
																				"nativeSrc": "3688:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3688:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3614:120:1",
																	"nodeType": "YulCase",
																	"src": "3614:120:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3619:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3619:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3754:64:1",
																		"nodeType": "YulBlock",
																		"src": "3754:64:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "resultPtr",
																									"nativeSrc": "3784:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "3784:9:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3795:1:1",
																									"nodeType": "YulLiteral",
																									"src": "3795:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "3780:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "3780:3:1"
																							},
																							"nativeSrc": "3780:17:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3780:17:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3799:4:1",
																							"nodeType": "YulLiteral",
																							"src": "3799:4:1",
																							"type": "",
																							"value": "0x3d"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "3772:7:1",
																						"nodeType": "YulIdentifier",
																						"src": "3772:7:1"
																					},
																					"nativeSrc": "3772:32:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3772:32:1"
																				},
																				"nativeSrc": "3772:32:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3772:32:1"
																			}
																		]
																	},
																	"nativeSrc": "3747:71:1",
																	"nodeType": "YulCase",
																	"src": "3747:71:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3752:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3752:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3592:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3592:4:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3586:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3586:5:1"
																		},
																		"nativeSrc": "3586:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3586:11:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3599:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3599:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "3582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:1"
																},
																"nativeSrc": "3582:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3582:19:1"
															},
															"nativeSrc": "3575:243:1",
															"nodeType": "YulSwitch",
															"src": "3575:243:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "1645:4:1",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "1680:4:1",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "1692:4:1",
														"valueSize": 1
													},
													{
														"declaration": 27,
														"isOffset": false,
														"isSlot": false,
														"src": "3592:4:1",
														"valueSize": 1
													},
													{
														"declaration": 44,
														"isOffset": false,
														"isSlot": false,
														"src": "1604:6:1",
														"valueSize": 1
													},
													{
														"declaration": 40,
														"isOffset": false,
														"isSlot": false,
														"src": "1504:5:1",
														"valueSize": 1
													}
												],
												"id": 59,
												"nodeType": "InlineAssembly",
												"src": "1390:2438:1"
											},
											{
												"expression": {
													"id": 60,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 44,
													"src": "3845:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 31,
												"id": 61,
												"nodeType": "Return",
												"src": "3838:13:1"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "389:82:1",
										"text": " @dev Converts a `bytes` to its Bytes64 `string` representation."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "encode",
									"nameLocation": "485:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "505:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "492:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "492:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:19:1"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "534:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "534:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:15:1"
									},
									"scope": 64,
									"src": "476:3382:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "202:3658:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3761:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1373
						],
						"SignedMath": [
							1478
						],
						"Strings": [
							319
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1374,
							"src": "127:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1373,
										"src": "135:4:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 70,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1479,
							"src": "165:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 69,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1478,
										"src": "173:10:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 71,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:2",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "Strings",
							"nameLocation": "259:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 74,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "273:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 72,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 73,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 77,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 319,
									"src": "335:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 75,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 76,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:2",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 84,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "505:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "520:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:2"
									},
									"src": "470:66:2"
								},
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "708:627:2",
										"statements": [
											{
												"id": 130,
												"nodeType": "UncheckedBlock",
												"src": "718:611:2",
												"statements": [
													{
														"assignments": [
															93
														],
														"declarations": [
															{
																"constant": false,
																"id": 93,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 130,
																"src": "742:14:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 92,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 100,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 96,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 87,
																		"src": "770:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 94,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1373,
																		"src": "759:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1373_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 95,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:2",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1193,
																	"src": "759:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:2"
													},
													{
														"assignments": [
															102
														],
														"declarations": [
															{
																"constant": false,
																"id": 102,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:2",
																"nodeType": "VariableDeclaration",
																"scope": 130,
																"src": "794:20:2",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 101,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 107,
														"initialValue": {
															"arguments": [
																{
																	"id": 105,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "828:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 103,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:2"
													},
													{
														"assignments": [
															109
														],
														"declarations": [
															{
																"constant": false,
																"id": 109,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 130,
																"src": "849:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 110,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:2"
													},
													{
														"AST": {
															"nativeSrc": "930:67:2",
															"nodeType": "YulBlock",
															"src": "930:67:2",
															"statements": [
																{
																	"nativeSrc": "948:35:2",
																	"nodeType": "YulAssignment",
																	"src": "948:35:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:2",
																						"nodeType": "YulLiteral",
																						"src": "971:2:2",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:2"
																				},
																				"nativeSrc": "967:15:2",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:2"
																		},
																		"nativeSrc": "955:28:2",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:2"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:2"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 102,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:2",
																"valueSize": 1
															},
															{
																"declaration": 93,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:2",
																"valueSize": 1
															},
															{
																"declaration": 109,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:2",
																"valueSize": 1
															}
														],
														"id": 111,
														"nodeType": "InlineAssembly",
														"src": "921:76:2"
													},
													{
														"body": {
															"id": 126,
															"nodeType": "Block",
															"src": "1023:269:2",
															"statements": [
																{
																	"expression": {
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:2",
																		"subExpression": {
																			"id": 113,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "1041:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 115,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:2"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:2",
																		"nodeType": "YulBlock",
																		"src": "1124:86:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:2",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:2"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:2",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:2"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:2",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:2",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:2",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:2"
																									},
																									"nativeSrc": "1164:14:2",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:2"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:2",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:2"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:2",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:2"
																							},
																							"nativeSrc": "1159:32:2",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:2"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:2",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:2"
																					},
																					"nativeSrc": "1146:46:2",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:2"
																				},
																				"nativeSrc": "1146:46:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:2"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 74,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 109,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 87,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:2",
																			"valueSize": 1
																		}
																	],
																	"id": 116,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:2"
																},
																{
																	"expression": {
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "1227:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 120,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 121,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "1260:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 125,
																	"nodeType": "IfStatement",
																	"src": "1256:21:2",
																	"trueBody": {
																		"id": 124,
																		"nodeType": "Break",
																		"src": "1272:5:2"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 127,
														"nodeType": "WhileStatement",
														"src": "1010:282:2"
													},
													{
														"expression": {
															"id": 128,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 102,
															"src": "1312:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 91,
														"id": 129,
														"nodeType": "Return",
														"src": "1305:13:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:2"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "693:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:2"
									},
									"scope": 319,
									"src": "637:698:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1511:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "1542:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:2",
															"trueExpression": {
																"hexValue": "2d",
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 152,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "1588:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 150,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "1573:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$1478_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:2",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1477,
																		"src": "1573:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 149,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1564:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 140,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:2",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 139,
												"id": 156,
												"nodeType": "Return",
												"src": "1521:75:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:2",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1459:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 134,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:2"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1496:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 137,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:2"
									},
									"scope": 319,
									"src": "1435:168:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "1782:100:2",
										"statements": [
											{
												"id": 176,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "1835:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 170,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 168,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1373,
																				"src": "1842:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1373_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:2",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1315,
																			"src": "1842:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 166,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	178,
																	261,
																	281
																],
																"referencedDeclaration": 261,
																"src": "1823:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 165,
														"id": 175,
														"nodeType": "Return",
														"src": "1816:49:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1729:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1767:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:2"
									},
									"scope": 319,
									"src": "1708:174:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "2095:435:2",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "2105:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 191,
												"initialValue": {
													"id": 190,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 181,
													"src": "2126:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:2"
											},
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "2141:19:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 192,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 197,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2177:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 194,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:2"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 203,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2198:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 205,
														"indexExpression": {
															"hexValue": "30",
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:2"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 209,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2223:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 211,
														"indexExpression": {
															"hexValue": "31",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:2"
											},
											{
												"body": {
													"id": 243,
													"nodeType": "Block",
													"src": "2293:95:2",
													"statements": [
														{
															"expression": {
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 229,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 193,
																		"src": "2307:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 231,
																	"indexExpression": {
																		"id": 230,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "2314:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 232,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 74,
																		"src": "2319:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 236,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 233,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 189,
																			"src": "2330:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 238,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:2"
														},
														{
															"expression": {
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 239,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2361:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 242,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 223,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2281:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 244,
												"initializationExpression": {
													"assignments": [
														216
													],
													"declarations": [
														{
															"constant": false,
															"id": 216,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 244,
															"src": "2253:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 215,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 222,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 218,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "2269:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:2"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:2",
														"subExpression": {
															"id": 226,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2290:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 228,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2401:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "2397:96:2",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "2418:75:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 249,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "2468:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 250,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "2475:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 248,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "2439:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 252,
															"nodeType": "RevertStatement",
															"src": "2432:50:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "2516:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 256,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 255,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 187,
												"id": 259,
												"nodeType": "Return",
												"src": "2502:21:2"
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:2",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2026:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2041:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2080:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 185,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:2"
									},
									"scope": 319,
									"src": "2005:525:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "2762:75:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 274,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 264,
																			"src": "2807:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 272,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 270,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 277,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "2815:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 269,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															178,
															261,
															281
														],
														"referencedDeclaration": 261,
														"src": "2779:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "2772:58:2"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:2",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2710:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:2"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "2747:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:2"
									},
									"scope": 319,
									"src": "2689:148:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 317,
										"nodeType": "Block",
										"src": "2992:104:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 293,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 284,
																		"src": "3015:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "3034:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 296,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 305,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 284,
																			"src": "3063:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 303,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 302,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 311,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 286,
																			"src": "3086:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 309,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 308,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 290,
												"id": 316,
												"nodeType": "Return",
												"src": "3002:87:2"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:2",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2929:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2946:15:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:2"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2986:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 288,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:2"
									},
									"scope": 319,
									"src": "2914:182:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 320,
							"src": "251:2847:2",
							"usedErrors": [
								84
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1373
						]
					},
					"id": 1374,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:3",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1373,
							"linearizedBaseContracts": [
								1373
							],
							"name": "Math",
							"nameLocation": "211:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:3",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 325,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:3"
									},
									"src": "277:29:3"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 330,
									"members": [
										{
											"id": 326,
											"name": "Floor",
											"nameLocation": "336:5:3",
											"nodeType": "EnumValue",
											"src": "336:5:3"
										},
										{
											"id": 327,
											"name": "Ceil",
											"nameLocation": "379:4:3",
											"nodeType": "EnumValue",
											"src": "379:4:3"
										},
										{
											"id": 328,
											"name": "Trunc",
											"nameLocation": "421:5:3",
											"nodeType": "EnumValue",
											"src": "421:5:3"
										},
										{
											"id": 329,
											"name": "Expand",
											"nameLocation": "451:6:3",
											"nodeType": "EnumValue",
											"src": "451:6:3"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:3",
									"nodeType": "EnumDefinition",
									"src": "312:169:3"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "661:140:3",
										"statements": [
											{
												"id": 360,
												"nodeType": "UncheckedBlock",
												"src": "671:124:3",
												"statements": [
													{
														"assignments": [
															343
														],
														"declarations": [
															{
																"constant": false,
																"id": 343,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 360,
																"src": "695:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 342,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 347,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "707:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 345,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "711:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 348,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "730:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 349,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "734:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 355,
														"nodeType": "IfStatement",
														"src": "726:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 341,
															"id": 354,
															"nodeType": "Return",
															"src": "737:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 357,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "782:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 358,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 341,
														"id": 359,
														"nodeType": "Return",
														"src": "768:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "612:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:3"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "646:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "652:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:3"
									},
									"scope": 1373,
									"src": "585:216:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "984:113:3",
										"statements": [
											{
												"id": 388,
												"nodeType": "UncheckedBlock",
												"src": "994:97:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "1022:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 375,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "1026:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 381,
														"nodeType": "IfStatement",
														"src": "1018:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 377,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 379,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 373,
															"id": 380,
															"nodeType": "Return",
															"src": "1029:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "1074:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 384,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "1078:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 386,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 373,
														"id": 387,
														"nodeType": "Return",
														"src": "1060:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:3",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "924:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "935:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "969:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "975:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:3"
									},
									"scope": 1373,
									"src": "908:189:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1283:417:3",
										"statements": [
											{
												"id": 430,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 402,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "1551:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 409,
														"nodeType": "IfStatement",
														"src": "1547:28:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 407,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 401,
															"id": 408,
															"nodeType": "Return",
															"src": "1559:16:3"
														}
													},
													{
														"assignments": [
															411
														],
														"declarations": [
															{
																"constant": false,
																"id": 411,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:3",
																"nodeType": "VariableDeclaration",
																"scope": 430,
																"src": "1589:9:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 410,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 415,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 412,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "1601:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 413,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1605:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 416,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1624:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 417,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 393,
																	"src": "1628:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 419,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "1633:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 425,
														"nodeType": "IfStatement",
														"src": "1620:33:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 401,
															"id": 424,
															"nodeType": "Return",
															"src": "1636:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 427,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "1681:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 428,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 401,
														"id": 429,
														"nodeType": "Return",
														"src": "1667:16:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1223:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1234:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:3"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "1274:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:3"
									},
									"scope": 1373,
									"src": "1207:493:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1887:114:3",
										"statements": [
											{
												"id": 458,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 444,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "1925:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 451,
														"nodeType": "IfStatement",
														"src": "1921:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 449,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 443,
															"id": 450,
															"nodeType": "Return",
															"src": "1933:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 453,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "1978:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 454,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "1982:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 456,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 443,
														"id": 457,
														"nodeType": "Return",
														"src": "1964:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1827:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1838:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:3"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1872:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:3"
									},
									"scope": 1373,
									"src": "1811:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2198:114:3",
										"statements": [
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "2236:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 479,
														"nodeType": "IfStatement",
														"src": "2232:29:3",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 477,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 471,
															"id": 478,
															"nodeType": "Return",
															"src": "2244:17:3"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "2289:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 482,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "2293:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 484,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 471,
														"id": 485,
														"nodeType": "Return",
														"src": "2275:20:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2138:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:3"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2183:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2189:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:3"
									},
									"scope": 1373,
									"src": "2122:190:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "2449:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 498,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "2466:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 499,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "2470:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 502,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2478:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:3",
													"trueExpression": {
														"id": 501,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2474:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 497,
												"id": 504,
												"nodeType": "Return",
												"src": "2459:20:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:3",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2395:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2406:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "2440:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:3"
									},
									"scope": 1373,
									"src": "2382:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "2624:37:3",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 516,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "2641:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 517,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "2645:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 520,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "2653:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:3",
													"trueExpression": {
														"id": 519,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "2649:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 515,
												"id": 522,
												"nodeType": "Return",
												"src": "2634:20:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:3",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2570:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2581:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:3"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2615:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:3"
									},
									"scope": 1373,
									"src": "2557:104:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "2845:82:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 534,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "2900:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 535,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "2904:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 537,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 538,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "2910:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 539,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "2914:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 541,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 533,
												"id": 545,
												"nodeType": "Return",
												"src": "2892:28:3"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:3",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2791:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2802:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:3"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "2836:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:3"
									},
									"scope": 1373,
									"src": "2774:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "3219:260:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 557,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3233:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "3229:127:3",
												"trueBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "3241:115:3",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 560,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 550,
																	"src": "3340:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 561,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "3344:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 556,
															"id": 563,
															"nodeType": "Return",
															"src": "3333:12:3"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 566,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3444:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 570,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 550,
																			"src": "3458:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 573,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 574,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "3467:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:3",
													"trueExpression": {
														"hexValue": "30",
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 556,
												"id": 579,
												"nodeType": "Return",
												"src": "3437:35:3"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:3",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3165:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3176:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3210:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:3"
									},
									"scope": 1373,
									"src": "3148:331:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "3901:4018:3",
										"statements": [
											{
												"id": 705,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:3",
												"statements": [
													{
														"assignments": [
															594
														],
														"declarations": [
															{
																"constant": false,
																"id": 594,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 705,
																"src": "4232:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 593,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 598,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 595,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "4248:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 596,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "4252:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:3"
													},
													{
														"assignments": [
															600
														],
														"declarations": [
															{
																"constant": false,
																"id": 600,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:3",
																"nodeType": "VariableDeclaration",
																"scope": 705,
																"src": "4312:13:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 599,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 601,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:3"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:3",
															"nodeType": "YulBlock",
															"src": "4392:122:3",
															"statements": [
																{
																	"nativeSrc": "4410:30:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:3"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:3",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:3"
																				},
																				"nativeSrc": "4433:6:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:3"
																		},
																		"nativeSrc": "4420:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:3"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:3",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:3",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:3"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:3"
																				},
																				"nativeSrc": "4470:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:3"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:3"
																				},
																				"nativeSrc": "4486:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:3"
																		},
																		"nativeSrc": "4466:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:3",
																"valueSize": 1
															},
															{
																"declaration": 600,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:3",
																"valueSize": 1
															},
															{
																"declaration": 584,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:3",
																"valueSize": 1
															},
															{
																"declaration": 586,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:3",
																"valueSize": 1
															}
														],
														"id": 602,
														"nodeType": "InlineAssembly",
														"src": "4383:131:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 603,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "4595:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 611,
														"nodeType": "IfStatement",
														"src": "4591:368:3",
														"trueBody": {
															"id": 610,
															"nodeType": "Block",
															"src": "4607:352:3",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 606,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 594,
																			"src": "4925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 607,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "4933:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 592,
																	"id": 609,
																	"nodeType": "Return",
																	"src": "4918:26:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 612,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "5065:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 613,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 600,
																"src": "5080:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 619,
														"nodeType": "IfStatement",
														"src": "5061:88:3",
														"trueBody": {
															"id": 618,
															"nodeType": "Block",
															"src": "5087:62:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 615,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 325,
																			"src": "5112:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 617,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:3"
																}
															]
														}
													},
													{
														"assignments": [
															621
														],
														"declarations": [
															{
																"constant": false,
																"id": 621,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:3",
																"nodeType": "VariableDeclaration",
																"scope": 705,
																"src": "5404:17:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 620,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 622,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:3"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:3",
															"nodeType": "YulBlock",
															"src": "5444:291:3",
															"statements": [
																{
																	"nativeSrc": "5513:38:3",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:3"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:3"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:3"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:3"
																		},
																		"nativeSrc": "5526:25:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:3"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:3",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:3"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:3",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:3"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:3"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:3"
																				},
																				"nativeSrc": "5653:20:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:3"
																		},
																		"nativeSrc": "5642:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:3"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:3",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:3"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:3"
																		},
																		"nativeSrc": "5700:21:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:3",
																"valueSize": 1
															},
															{
																"declaration": 600,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:3",
																"valueSize": 1
															},
															{
																"declaration": 600,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:3",
																"valueSize": 1
															},
															{
																"declaration": 621,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:3",
																"valueSize": 1
															},
															{
																"declaration": 621,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:3",
																"valueSize": 1
															},
															{
																"declaration": 621,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:3",
																"valueSize": 1
															},
															{
																"declaration": 584,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:3",
																"valueSize": 1
															},
															{
																"declaration": 586,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:3",
																"valueSize": 1
															}
														],
														"id": 623,
														"nodeType": "InlineAssembly",
														"src": "5435:300:3"
													},
													{
														"assignments": [
															625
														],
														"declarations": [
															{
																"constant": false,
																"id": 625,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:3",
																"nodeType": "VariableDeclaration",
																"scope": 705,
																"src": "5939:12:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 624,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 632,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 626,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "5954:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 628,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "5973:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 630,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:3"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:3",
															"nodeType": "YulBlock",
															"src": "6008:362:3",
															"statements": [
																{
																	"nativeSrc": "6073:37:3",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:3",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:3"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:3"
																		},
																		"nativeSrc": "6088:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:3"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:3",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:3"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:3",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:3"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:3"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:3"
																		},
																		"nativeSrc": "6186:16:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:3"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:3",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:3"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:3",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:3",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:3",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:3",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:3"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:3"
																						},
																						"nativeSrc": "6333:12:3",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:3"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:3"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:3"
																				},
																				"nativeSrc": "6329:23:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:3",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:3",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:3"
																		},
																		"nativeSrc": "6325:31:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:3"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:3",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:3"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:3",
																"valueSize": 1
															},
															{
																"declaration": 588,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:3",
																"valueSize": 1
															},
															{
																"declaration": 594,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:3",
																"valueSize": 1
															},
															{
																"declaration": 625,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:3",
																"valueSize": 1
															},
															{
																"declaration": 625,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:3",
																"valueSize": 1
															},
															{
																"declaration": 625,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:3",
																"valueSize": 1
															},
															{
																"declaration": 625,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:3",
																"valueSize": 1
															},
															{
																"declaration": 625,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:3",
																"valueSize": 1
															}
														],
														"id": 633,
														"nodeType": "InlineAssembly",
														"src": "5999:371:3"
													},
													{
														"expression": {
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 634,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "6436:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 635,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "6445:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 636,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 625,
																	"src": "6453:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 639,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:3"
													},
													{
														"assignments": [
															641
														],
														"declarations": [
															{
																"constant": false,
																"id": 641,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:3",
																"nodeType": "VariableDeclaration",
																"scope": 705,
																"src": "6775:15:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 640,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 648,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 643,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "6798:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 645,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:3"
													},
													{
														"expression": {
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 649,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7031:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 651,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7046:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 652,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7060:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 656,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:3"
													},
													{
														"expression": {
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 657,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7100:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 659,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7115:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 660,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7129:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 664,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:3"
													},
													{
														"expression": {
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 665,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7170:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 667,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7185:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 668,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7199:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 672,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:3"
													},
													{
														"expression": {
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 673,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7240:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 675,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7255:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 676,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7269:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 680,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:3"
													},
													{
														"expression": {
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 681,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7310:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 683,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7325:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 684,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7339:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 688,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:3"
													},
													{
														"expression": {
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 689,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7381:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 691,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 588,
																		"src": "7396:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 692,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "7410:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 696,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:3"
													},
													{
														"expression": {
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 697,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "7851:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 698,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7860:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 699,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "7868:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 702,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:3"
													},
													{
														"expression": {
															"id": 703,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7896:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 592,
														"id": 704,
														"nodeType": "Return",
														"src": "7889:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:3",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3819:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3830:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3841:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:3"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3885:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:3"
									},
									"scope": 1373,
									"src": "3803:4116:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "8161:192:3",
										"statements": [
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "8171:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"id": 725,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "8195:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 726,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "8198:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 727,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "8201:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															707,
															750
														],
														"referencedDeclaration": 707,
														"src": "8188:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 731,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "8244:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$330",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$330",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 730,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "8227:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$330_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 734,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "8264:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 735,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "8267:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 736,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "8270:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 733,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 746,
												"nodeType": "IfStatement",
												"src": "8223:101:3",
												"trueBody": {
													"id": 745,
													"nodeType": "Block",
													"src": "8288:36:3",
													"statements": [
														{
															"expression": {
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 741,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8302:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 747,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 723,
													"src": "8340:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 721,
												"id": 748,
												"nodeType": "Return",
												"src": "8333:13:3"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:3",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8067:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8078:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8089:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8110:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 716,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 715,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "8110:8:3"
													},
													"referencedDeclaration": 330,
													"src": "8110:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "8152:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:3"
									},
									"scope": 1373,
									"src": "8051:302:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "8644:1585:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "8658:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 764,
												"nodeType": "IfStatement",
												"src": "8654:45:3",
												"trueBody": {
													"id": 763,
													"nodeType": "Block",
													"src": "8666:33:3",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 757,
															"id": 762,
															"nodeType": "Return",
															"src": "8680:8:3"
														}
													]
												}
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "9378:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 769,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "9406:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 768,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1029,
																			1064
																		],
																		"referencedDeclaration": 1029,
																		"src": "9401:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 773,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:3"
											},
											{
												"id": 860,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:3",
												"statements": [
													{
														"expression": {
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 776,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9839:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 777,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "9849:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 778,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "9858:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 779,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "9862:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 782,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 786,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:3"
													},
													{
														"expression": {
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 787,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9888:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 788,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "9898:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 789,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "9907:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 790,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "9911:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 793,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 797,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:3"
													},
													{
														"expression": {
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 798,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9937:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 799,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "9947:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 802,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 800,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "9956:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 801,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "9960:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 808,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:3"
													},
													{
														"expression": {
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 809,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "9986:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 810,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "9996:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 811,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "10005:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 812,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "10009:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 815,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 819,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:3"
													},
													{
														"expression": {
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 820,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "10035:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 821,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "10045:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 822,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "10054:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 823,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "10058:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 826,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 830,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:3"
													},
													{
														"expression": {
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 831,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "10084:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 832,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "10094:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 835,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 833,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "10103:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 834,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "10107:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 837,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 841,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:3"
													},
													{
														"expression": {
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 842,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "10133:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 843,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "10143:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 846,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 844,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "10152:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 845,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "10156:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 848,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 852,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 854,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "10193:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 855,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 753,
																		"src": "10201:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 856,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "10205:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 853,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "10189:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 757,
														"id": 859,
														"nodeType": "Return",
														"src": "10182:30:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:3",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "8601:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:3"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "8635:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:3"
									},
									"scope": 1373,
									"src": "8587:1642:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "10405:164:3",
										"statements": [
											{
												"id": 895,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:3",
												"statements": [
													{
														"assignments": [
															874
														],
														"declarations": [
															{
																"constant": false,
																"id": 874,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 895,
																"src": "10439:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 873,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 878,
														"initialValue": {
															"arguments": [
																{
																	"id": 876,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "10461:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 875,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	862,
																	897
																],
																"referencedDeclaration": 862,
																"src": "10456:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 879,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "10484:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 881,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 868,
																						"src": "10511:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 880,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1372,
																					"src": "10494:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$330_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 885,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 883,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 874,
																						"src": "10524:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 884,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 874,
																						"src": "10533:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 886,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 865,
																					"src": "10542:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 892,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 872,
														"id": 894,
														"nodeType": "Return",
														"src": "10477:75:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:3",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "10343:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "10354:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 867,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 866,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "10354:8:3"
													},
													"referencedDeclaration": 330,
													"src": "10354:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:3"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "10396:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:3"
									},
									"scope": 1373,
									"src": "10329:240:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10760:922:3",
										"statements": [
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10770:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"hexValue": "30",
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:3"
											},
											{
												"id": 1025,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 909,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "10826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 923,
														"nodeType": "IfStatement",
														"src": "10822:99:3",
														"trueBody": {
															"id": 922,
															"nodeType": "Block",
															"src": "10844:77:3",
															"statements": [
																{
																	"expression": {
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10862:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 917,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:3"
																},
																{
																	"expression": {
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 918,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "10893:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 919,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 921,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 924,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "10938:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 938,
														"nodeType": "IfStatement",
														"src": "10934:96:3",
														"trueBody": {
															"id": 937,
															"nodeType": "Block",
															"src": "10955:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "10973:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:3"
																},
																{
																	"expression": {
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 933,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11003:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 936,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 939,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11047:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 953,
														"nodeType": "IfStatement",
														"src": "11043:96:3",
														"trueBody": {
															"id": 952,
															"nodeType": "Block",
															"src": "11064:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11082:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:3"
																},
																{
																	"expression": {
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 948,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11112:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 951,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11156:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 968,
														"nodeType": "IfStatement",
														"src": "11152:96:3",
														"trueBody": {
															"id": 967,
															"nodeType": "Block",
															"src": "11173:75:3",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11191:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:3"
																},
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11221:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 969,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11265:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 983,
														"nodeType": "IfStatement",
														"src": "11261:93:3",
														"trueBody": {
															"id": 982,
															"nodeType": "Block",
															"src": "11281:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11299:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:3"
																},
																{
																	"expression": {
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 978,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11328:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 981,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 984,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11371:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 998,
														"nodeType": "IfStatement",
														"src": "11367:93:3",
														"trueBody": {
															"id": 997,
															"nodeType": "Block",
															"src": "11387:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11405:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 992,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:3"
																},
																{
																	"expression": {
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 993,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11434:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 996,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 999,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11477:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1013,
														"nodeType": "IfStatement",
														"src": "11473:93:3",
														"trueBody": {
															"id": 1012,
															"nodeType": "Block",
															"src": "11493:73:3",
															"statements": [
																{
																	"expression": {
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1004,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11511:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1007,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:3"
																},
																{
																	"expression": {
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1008,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11540:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1011,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1014,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 900,
																	"src": "11583:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1024,
														"nodeType": "IfStatement",
														"src": "11579:64:3",
														"trueBody": {
															"id": 1023,
															"nodeType": "Block",
															"src": "11599:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1019,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "11617:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1022,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1026,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 906,
													"src": "11669:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 904,
												"id": 1027,
												"nodeType": "Return",
												"src": "11662:13:3"
											}
										]
									},
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:3",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10713:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:3"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10751:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:3"
									},
									"scope": 1373,
									"src": "10699:983:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "11915:168:3",
										"statements": [
											{
												"id": 1062,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:3",
												"statements": [
													{
														"assignments": [
															1041
														],
														"declarations": [
															{
																"constant": false,
																"id": 1041,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1062,
																"src": "11949:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1045,
														"initialValue": {
															"arguments": [
																{
																	"id": 1043,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "11971:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1042,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1029,
																	1064
																],
																"referencedDeclaration": 1029,
																"src": "11966:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1046,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "11998:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1048,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1035,
																						"src": "12025:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1047,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1372,
																					"src": "12008:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$330_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1049,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1052,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1050,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1051,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1041,
																						"src": "12043:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1053,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1032,
																					"src": "12052:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1059,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1039,
														"id": 1061,
														"nodeType": "Return",
														"src": "11991:75:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:3",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11849:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11864:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1034,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1033,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "11864:8:3"
													},
													"referencedDeclaration": 330,
													"src": "11864:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "11906:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:3"
									},
									"scope": 1373,
									"src": "11835:248:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "12276:854:3",
										"statements": [
											{
												"assignments": [
													1073
												],
												"declarations": [
													{
														"constant": false,
														"id": 1073,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "12286:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1072,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1075,
												"initialValue": {
													"hexValue": "30",
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:3"
											},
											{
												"id": 1189,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12342:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1092,
														"nodeType": "IfStatement",
														"src": "12338:103:3",
														"trueBody": {
															"id": 1091,
															"nodeType": "Block",
															"src": "12361:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1081,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12379:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1086,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:3"
																},
																{
																	"expression": {
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1087,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12414:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1090,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12458:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1109,
														"nodeType": "IfStatement",
														"src": "12454:103:3",
														"trueBody": {
															"id": 1108,
															"nodeType": "Block",
															"src": "12477:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1098,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12495:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1099,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1103,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:3"
																},
																{
																	"expression": {
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1104,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12530:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1107,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12574:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1126,
														"nodeType": "IfStatement",
														"src": "12570:103:3",
														"trueBody": {
															"id": 1125,
															"nodeType": "Block",
															"src": "12593:80:3",
															"statements": [
																{
																	"expression": {
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1115,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12611:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1120,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:3"
																},
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12646:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1127,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12690:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1143,
														"nodeType": "IfStatement",
														"src": "12686:100:3",
														"trueBody": {
															"id": 1142,
															"nodeType": "Block",
															"src": "12708:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1132,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12726:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1137,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:3"
																},
																{
																	"expression": {
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1138,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12760:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1141,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12803:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1160,
														"nodeType": "IfStatement",
														"src": "12799:100:3",
														"trueBody": {
															"id": 1159,
															"nodeType": "Block",
															"src": "12821:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1149,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12839:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1150,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1154,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:3"
																},
																{
																	"expression": {
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1155,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12873:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1158,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1161,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "12916:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1177,
														"nodeType": "IfStatement",
														"src": "12912:100:3",
														"trueBody": {
															"id": 1176,
															"nodeType": "Block",
															"src": "12934:78:3",
															"statements": [
																{
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1166,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "12952:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:3"
																},
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "12986:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1178,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "13029:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1188,
														"nodeType": "IfStatement",
														"src": "13025:66:3",
														"trueBody": {
															"id": 1187,
															"nodeType": "Block",
															"src": "13047:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1183,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "13065:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1186,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1190,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1073,
													"src": "13117:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1071,
												"id": 1191,
												"nodeType": "Return",
												"src": "13110:13:3"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:3",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "12229:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:3"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "12267:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:3"
									},
									"scope": 1373,
									"src": "12214:916:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "13365:170:3",
										"statements": [
											{
												"id": 1226,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:3",
												"statements": [
													{
														"assignments": [
															1205
														],
														"declarations": [
															{
																"constant": false,
																"id": 1205,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1226,
																"src": "13399:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1204,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1209,
														"initialValue": {
															"arguments": [
																{
																	"id": 1207,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "13422:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1206,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1193,
																	1228
																],
																"referencedDeclaration": 1193,
																"src": "13416:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1210,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "13449:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1212,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "13476:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1211,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1372,
																					"src": "13459:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$330_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1218,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1216,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1214,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1215,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1205,
																						"src": "13495:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1217,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1196,
																					"src": "13504:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1203,
														"id": 1225,
														"nodeType": "Return",
														"src": "13442:76:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:3",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "13299:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "13314:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1197,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "13314:8:3"
													},
													"referencedDeclaration": 330,
													"src": "13314:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:3"
									},
									"returnParameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "13356:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:3"
									},
									"scope": 1373,
									"src": "13284:251:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "13855:600:3",
										"statements": [
											{
												"assignments": [
													1237
												],
												"declarations": [
													{
														"constant": false,
														"id": 1237,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 1314,
														"src": "13865:14:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1239,
												"initialValue": {
													"hexValue": "30",
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:3"
											},
											{
												"id": 1311,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:3",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1240,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "13921:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1254,
														"nodeType": "IfStatement",
														"src": "13917:98:3",
														"trueBody": {
															"id": 1253,
															"nodeType": "Block",
															"src": "13939:76:3",
															"statements": [
																{
																	"expression": {
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "13957:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1248,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:3"
																},
																{
																	"expression": {
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1249,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "13988:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1252,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1255,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "14032:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1269,
														"nodeType": "IfStatement",
														"src": "14028:95:3",
														"trueBody": {
															"id": 1268,
															"nodeType": "Block",
															"src": "14049:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1260,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14067:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1263,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:3"
																},
																{
																	"expression": {
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1264,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "14097:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1267,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1270,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "14140:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1284,
														"nodeType": "IfStatement",
														"src": "14136:95:3",
														"trueBody": {
															"id": 1283,
															"nodeType": "Block",
															"src": "14157:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1275,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14175:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1278,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:3"
																},
																{
																	"expression": {
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "14205:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1282,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1285,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "14248:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1299,
														"nodeType": "IfStatement",
														"src": "14244:95:3",
														"trueBody": {
															"id": 1298,
															"nodeType": "Block",
															"src": "14265:74:3",
															"statements": [
																{
																	"expression": {
																		"id": 1292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1290,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "14283:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1293,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:3"
																},
																{
																	"expression": {
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1294,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "14313:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1297,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:3"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1300,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "14356:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1310,
														"nodeType": "IfStatement",
														"src": "14352:64:3",
														"trueBody": {
															"id": 1309,
															"nodeType": "Block",
															"src": "14372:44:3",
															"statements": [
																{
																	"expression": {
																		"id": 1307,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1305,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1237,
																			"src": "14390:6:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1308,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:3"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1312,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1237,
													"src": "14442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1313,
												"nodeType": "Return",
												"src": "14435:13:3"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:3",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "13808:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:3"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "13846:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:3"
									},
									"scope": 1373,
									"src": "13792:663:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "14692:177:3",
										"statements": [
											{
												"id": 1351,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:3",
												"statements": [
													{
														"assignments": [
															1327
														],
														"declarations": [
															{
																"constant": false,
																"id": 1327,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 1351,
																"src": "14726:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1331,
														"initialValue": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "14750:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1328,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1315,
																	1353
																],
																"referencedDeclaration": 1315,
																"src": "14743:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:3"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1332,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "14777:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1334,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1321,
																						"src": "14804:8:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$330",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1333,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1372,
																					"src": "14787:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$330_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1335,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1343,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1341,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1336,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1339,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1337,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1327,
																									"src": "14823:6:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1338,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:3",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1340,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1342,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1318,
																					"src": "14838:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:3",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1348,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1325,
														"id": 1350,
														"nodeType": "Return",
														"src": "14770:82:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:3",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "14626:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "14641:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1319,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "14641:8:3"
													},
													"referencedDeclaration": 330,
													"src": "14641:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:3"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "14683:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:3"
									},
									"scope": 1373,
									"src": "14610:259:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1371,
										"nodeType": "Block",
										"src": "15067:48:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1364,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1357,
																	"src": "15090:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$330",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$330",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1362,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1368,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1361,
												"id": 1370,
												"nodeType": "Return",
												"src": "15077:31:3"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:3",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "15019:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$330",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1356,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1355,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 330,
														"src": "15019:8:3"
													},
													"referencedDeclaration": 330,
													"src": "15019:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$330",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:3"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "15061:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:3"
									},
									"scope": 1373,
									"src": "14993:122:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1374,
							"src": "203:14914:3",
							"usedErrors": [
								325
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1478
						]
					},
					"id": 1479,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1375,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1376,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:4",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1478,
							"linearizedBaseContracts": [
								1478
							],
							"name": "SignedMath",
							"nameLocation": "224:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "376:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1386,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1379,
															"src": "393:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1387,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1381,
															"src": "397:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1390,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "405:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:4",
													"trueExpression": {
														"id": 1389,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "401:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1392,
												"nodeType": "Return",
												"src": "386:20:4"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:4",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "325:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1378,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "335:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1380,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:4"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "368:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1383,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:4"
									},
									"scope": 1478,
									"src": "312:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "555:37:4",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1404,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1405,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "576:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1408,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "584:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:4",
													"trueExpression": {
														"id": 1407,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "580:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1403,
												"id": 1410,
												"nodeType": "Return",
												"src": "565:20:4"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:4",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "504:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "514:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1398,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:4"
									},
									"returnParameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "547:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1401,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:4"
									},
									"scope": 1478,
									"src": "491:101:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "797:162:4",
										"statements": [
											{
												"assignments": [
													1423
												],
												"declarations": [
													{
														"constant": false,
														"id": 1423,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1455,
														"src": "859:8:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1422,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1436,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1424,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "871:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1425,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1417,
																	"src": "875:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1427,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1428,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "882:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1429,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1417,
																				"src": "886:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1431,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1434,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1437,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "911:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1442,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1423,
																						"src": "931:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1441,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1440,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1438,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1447,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1415,
																				"src": "945:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1448,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1417,
																				"src": "949:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1450,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1452,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1421,
												"id": 1454,
												"nodeType": "Return",
												"src": "904:48:4"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:4",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "746:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1414,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "756:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1416,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:4"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "789:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1419,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:4"
									},
									"scope": 1478,
									"src": "729:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "1103:158:4",
										"statements": [
											{
												"id": 1475,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1466,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "1228:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:4",
																		"subExpression": {
																			"id": 1470,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1459,
																			"src": "1242:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:4",
																	"trueExpression": {
																		"id": 1469,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "1237:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1464,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1463,
														"id": 1474,
														"nodeType": "Return",
														"src": "1213:31:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:4",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1061:8:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1458,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:4"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1094:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:4"
									},
									"scope": 1478,
									"src": "1048:213:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1479,
							"src": "216:1047:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:4"
				},
				"id": 4
			},
			"contracts/facets/ERC721Facet.sol": {
				"ast": {
					"absolutePath": "contracts/facets/ERC721Facet.sol",
					"exportedSymbols": {
						"Base64": [
							64
						],
						"ERC721Errors": [
							2098
						],
						"ERC721Facet": [
							1895
						],
						"IERC721Enumerable": [
							2012
						],
						"IERC721Metadata": [
							2039
						],
						"LibERC721": [
							3154
						],
						"Math": [
							1373
						],
						"SignedMath": [
							1478
						],
						"Strings": [
							319
						]
					},
					"id": 1896,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1480,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "@openzeppelin/contracts/utils/Strings.sol",
							"id": 1481,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 320,
							"src": "61:51:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Base64.sol",
							"file": "@openzeppelin/contracts/utils/Base64.sol",
							"id": 1482,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 65,
							"src": "114:50:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC721Metadata.sol",
							"file": "../interfaces/IERC721Metadata.sol",
							"id": 1484,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 2040,
							"src": "166:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1483,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2039,
										"src": "174:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
							"file": "../interfaces/IERC721Enumerable.sol",
							"id": 1486,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 2013,
							"src": "234:70:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1485,
										"name": "IERC721Enumerable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2012,
										"src": "242:17:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/LibERC721.sol",
							"file": "../libraries/LibERC721.sol",
							"id": 1488,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 3155,
							"src": "306:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1487,
										"name": "LibERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3154,
										"src": "314:9:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Errors.sol",
							"file": "../libraries/Errors.sol",
							"id": 1490,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1896,
							"sourceUnit": 2099,
							"src": "361:53:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1489,
										"name": "ERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2098,
										"src": "369:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1491,
										"name": "IERC721Metadata",
										"nameLocations": [
											"442:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2039,
										"src": "442:15:5"
									},
									"id": 1492,
									"nodeType": "InheritanceSpecifier",
									"src": "442:15:5"
								},
								{
									"baseName": {
										"id": 1493,
										"name": "IERC721Enumerable",
										"nameLocations": [
											"459:17:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2012,
										"src": "459:17:5"
									},
									"id": 1494,
									"nodeType": "InheritanceSpecifier",
									"src": "459:17:5"
								}
							],
							"canonicalName": "ERC721Facet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1895,
							"linearizedBaseContracts": [
								1895,
								2012,
								2039,
								1980
							],
							"name": "ERC721Facet",
							"nameLocation": "427:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1497,
									"libraryName": {
										"id": 1495,
										"name": "Strings",
										"nameLocations": [
											"490:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 319,
										"src": "490:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "484:23:5",
									"typeName": {
										"id": 1496,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "502:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"baseFunctions": [
										2024
									],
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "567:49:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1502,
																"name": "LibERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "585:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																	"typeString": "type(library LibERC721)"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "595:6:5",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2196,
															"src": "585:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "585:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
															"typeString": "struct LibERC721.Layout storage pointer"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "604:4:5",
													"memberName": "name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2142,
													"src": "585:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1501,
												"id": 1506,
												"nodeType": "Return",
												"src": "578:30:5"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "524:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:2:5"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "552:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "552:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:15:5"
									},
									"scope": 1895,
									"src": "515:101:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2030
									],
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "678:51:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1513,
																"name": "LibERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3154,
																"src": "696:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																	"typeString": "type(library LibERC721)"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "706:6:5",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2196,
															"src": "696:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "696:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
															"typeString": "struct LibERC721.Layout storage pointer"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "715:6:5",
													"memberName": "symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2144,
													"src": "696:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1512,
												"id": 1517,
												"nodeType": "Return",
												"src": "689:32:5"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "633:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:5"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "663:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1510,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "663:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:15:5"
									},
									"scope": 1895,
									"src": "624:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1993
									],
									"body": {
										"id": 1530,
										"nodeType": "Block",
										"src": "790:61:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1524,
																	"name": "LibERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "808:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																		"typeString": "type(library LibERC721)"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "818:6:5",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2196,
																"src": "808:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "808:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "827:9:5",
														"memberName": "allTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "808:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "837:6:5",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "808:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1529,
												"nodeType": "Return",
												"src": "801:42:5"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "746:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:2:5"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "781:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:9:5"
									},
									"scope": 1895,
									"src": "737:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2003
									],
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "981:194:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1540,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "996:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [
															{
																"id": 1542,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "1015:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1541,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "1005:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1005:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "996:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "992:114:5",
												"trueBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "1023:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1548,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1533,
																		"src": "1081:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1549,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "1088:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1545,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "1045:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1058:22:5",
																	"memberName": "ERC721OutOfBoundsIndex",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2094,
																	"src": "1045:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1045:49:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1551,
															"nodeType": "RevertStatement",
															"src": "1038:56:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1554,
																		"name": "LibERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3154,
																		"src": "1123:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																			"typeString": "type(library LibERC721)"
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1133:6:5",
																	"memberName": "layout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2196,
																	"src": "1123:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1123:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1142:11:5",
															"memberName": "ownedTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2171,
															"src": "1123:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1559,
														"indexExpression": {
															"id": 1558,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "1154:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1123:37:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1561,
													"indexExpression": {
														"id": 1560,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "1161:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1123:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1539,
												"id": 1562,
												"nodeType": "Return",
												"src": "1116:51:5"
											}
										]
									},
									"functionSelector": "2f745c59",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "868:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "906:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "898:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "930:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "922:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:55:5"
									},
									"returnParameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1895,
									"src": "859:316:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2011
									],
									"body": {
										"id": 1594,
										"nodeType": "Block",
										"src": "1258:187:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1571,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1273:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1572,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "1282:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1282:13:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1273:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1586,
												"nodeType": "IfStatement",
												"src": "1269:116:5",
												"trueBody": {
													"id": 1585,
													"nodeType": "Block",
													"src": "1297:88:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1363:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1355:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1578,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1355:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1355:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1582,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "1367:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1575,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "1319:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 1577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1332:22:5",
																	"memberName": "ERC721OutOfBoundsIndex",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2094,
																	"src": "1319:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (address,uint256) pure returns (error)"
																	}
																},
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1319:54:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1584,
															"nodeType": "RevertStatement",
															"src": "1312:61:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1587,
																	"name": "LibERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "1402:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																		"typeString": "type(library LibERC721)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1412:6:5",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2196,
																"src": "1402:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1402:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1421:9:5",
														"memberName": "allTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "1402:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1592,
													"indexExpression": {
														"id": 1591,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1431:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1402:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1593,
												"nodeType": "Return",
												"src": "1395:42:5"
											}
										]
									},
									"functionSelector": "4f6ccce7",
									"id": 1595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1192:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1213:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1205:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:15:5"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1595,
												"src": "1249:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:9:5"
									},
									"scope": 1895,
									"src": "1183:262:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1905
									],
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "1517:141:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1602,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "1532:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1549:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1541:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1603,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1541:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1541:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1532:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "1528:70:5",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1611,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "1592:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1608,
																"name": "ERC721Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "1560:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																	"typeString": "type(library ERC721Errors)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:18:5",
															"memberName": "ERC721InvalidOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2046,
															"src": "1560:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1560:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1613,
													"nodeType": "RevertStatement",
													"src": "1553:45:5"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1615,
																	"name": "LibERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "1616:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																		"typeString": "type(library LibERC721)"
																	}
																},
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1626:6:5",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2196,
																"src": "1616:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1635:8:5",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2155,
														"src": "1616:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1620,
													"indexExpression": {
														"id": 1619,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "1644:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1616:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1601,
												"id": 1621,
												"nodeType": "Return",
												"src": "1609:41:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1462:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1472:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:15:5"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "1508:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:5"
									},
									"scope": 1895,
									"src": "1453:205:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1913
									],
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "1730:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "1772:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1630,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "1748:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1758:13:5",
														"memberName": "_requireOwned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3084,
														"src": "1748:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1748:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1634,
												"nodeType": "Return",
												"src": "1741:39:5"
											}
										]
									},
									"functionSelector": "6352211e",
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1675:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1691:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1683:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:17:5"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1721:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1720:9:5"
									},
									"scope": 1895,
									"src": "1666:122:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1935
									],
									"body": {
										"id": 1652,
										"nodeType": "Block",
										"src": "1906:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1646,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1934:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1647,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "1940:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "1944:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1953:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1645,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1653,
															1682
														],
														"referencedDeclaration": 1682,
														"src": "1917:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1917:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "1917:39:5"
											}
										]
									},
									"functionSelector": "42842e0e",
									"id": 1653,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1805:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1840:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "1832:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1863:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "1855:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1855:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1884:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "1876:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1876:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1821:77:5"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1906:0:5"
									},
									"scope": 1895,
									"src": "1796:168:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1925
									],
									"body": {
										"id": 1681,
										"nodeType": "Block",
										"src": "2110:129:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1665,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "2134:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1666,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2140:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1667,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "2144:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1664,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1730,
														"src": "2121:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "2121:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1673,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2195:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2199:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2195:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1675,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1655,
															"src": "2207:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "2213:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "2217:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "2226:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1670,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "2163:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2173:21:5",
														"memberName": "checkOnERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3153,
														"src": "2163:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "2163:68:5"
											}
										]
									},
									"functionSelector": "b88d4fde",
									"id": 1682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1981:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2016:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2008:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2039:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2031:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2031:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2060:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2052:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2052:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2091:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1682,
												"src": "2078:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2078:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1997:105:5"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2110:0:5"
									},
									"scope": 1895,
									"src": "1972:267:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1945
									],
									"body": {
										"id": 1729,
										"nodeType": "Block",
										"src": "2361:373:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "2376:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1694,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2390:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2382:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1692,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2382:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2382:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2376:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1706,
												"nodeType": "IfStatement",
												"src": "2372:88:5",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2457:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2449:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1700,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2449:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2449:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1697,
																"name": "ERC721Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "2414:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																	"typeString": "type(library ERC721Errors)"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2427:21:5",
															"memberName": "ERC721InvalidReceiver",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2070,
															"src": "2414:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																"typeString": "function (address) pure returns (error)"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2414:46:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1705,
													"nodeType": "RevertStatement",
													"src": "2407:53:5"
												}
											},
											{
												"assignments": [
													1708
												],
												"declarations": [
													{
														"constant": false,
														"id": 1708,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2481:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1729,
														"src": "2473:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2473:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1716,
												"initialValue": {
													"arguments": [
														{
															"id": 1711,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "2515:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "2519:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1713,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2528:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2532:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2528:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1709,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "2497:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2507:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2476,
														"src": "2497:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2473:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "2554:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1718,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "2571:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2554:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1728,
												"nodeType": "IfStatement",
												"src": "2550:176:5",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1723,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1684,
																"src": "2649:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1724,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "2672:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1725,
																"name": "previousOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "2698:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1720,
																"name": "ERC721Errors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "2597:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																	"typeString": "type(library ERC721Errors)"
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2610:20:5",
															"memberName": "ERC721IncorrectOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2060,
															"src": "2597:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																"typeString": "function (address,uint256,address) pure returns (error)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2597:129:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1727,
													"nodeType": "RevertStatement",
													"src": "2590:136:5"
												}
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2256:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2287:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2279:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2310:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2302:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2331:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "2323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2268:77:5"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:5"
									},
									"scope": 1895,
									"src": "2247:487:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1953
									],
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "2795:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1740,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "2825:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "2829:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1742,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2838:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2842:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2838:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1737,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "2806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2816:8:5",
														"memberName": "_approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2935,
														"src": "2806:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2806:43:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "2806:43:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2751:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2767:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "2759:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2779:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "2771:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:29:5"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:0:5"
									},
									"scope": 1895,
									"src": "2742:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1961
									],
									"body": {
										"id": 1763,
										"nodeType": "Block",
										"src": "2940:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2980:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2984:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2980:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1759,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "2992:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1760,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "3002:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 1754,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "2951:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2961:18:5",
														"memberName": "_setApprovalForAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3053,
														"src": "2951:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "2951:60:5"
											}
										]
									},
									"functionSelector": "a22cb465",
									"id": 1764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2874:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2915:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "2910:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1750,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2910:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2891:33:5"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2940:0:5"
									},
									"scope": 1895,
									"src": "2865:154:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1969
									],
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "3095:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "3130:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1771,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "3106:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:13:5",
														"memberName": "_requireOwned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3084,
														"src": "3106:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3106:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1776,
												"nodeType": "ExpressionStatement",
												"src": "3106:32:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "3181:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1777,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "3158:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3168:12:5",
														"memberName": "_getApproved",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2226,
														"src": "3158:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3158:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1781,
												"nodeType": "Return",
												"src": "3151:38:5"
											}
										]
									},
									"functionSelector": "081812fc",
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3036:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3056:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3048:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3047:17:5"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "3086:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:9:5"
									},
									"scope": 1895,
									"src": "3027:170:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1979
									],
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "3316:79:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1792,
																		"name": "LibERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3154,
																		"src": "3334:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																			"typeString": "type(library LibERC721)"
																		}
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3344:6:5",
																	"memberName": "layout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2196,
																	"src": "3334:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 1794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3334:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3353:17:5",
															"memberName": "operatorApprovals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2165,
															"src": "3334:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1797,
														"indexExpression": {
															"id": 1796,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "3371:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3334:43:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1799,
													"indexExpression": {
														"id": 1798,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "3378:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3334:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1791,
												"id": 1800,
												"nodeType": "Return",
												"src": "3327:60:5"
											}
										]
									},
									"functionSelector": "e985e9c5",
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3214:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3249:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3241:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3241:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3273:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3265:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3230:58:5"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "3310:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1789,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3310:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3309:6:5"
									},
									"scope": 1895,
									"src": "3205:190:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "3462:690:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3600:31:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	"value": "data:application/json;base64,"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"hexValue": "7b226e616d65223a22",
																					"id": 1816,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3741:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					"value": "{\"name\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1817,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1508,
																						"src": "3783:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () view returns (string memory)"
																						}
																					},
																					"id": 1818,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3783:6:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c226465736372697074696f6e223a22",
																					"id": 1819,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3820:19:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					"value": "\",\"description\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1820,
																						"name": "_contractDescription",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1894,
																						"src": "3870:20:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_string_memory_ptr_$",
																							"typeString": "function () pure returns (string memory)"
																						}
																					},
																					"id": 1821,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3870:22:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				},
																				{
																					"hexValue": "222c22696d616765223a22",
																					"id": 1822,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3923:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					"value": "\",\"image\":\""
																				},
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1823,
																						"name": "_contractImage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1886,
																						"src": "3967:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 1824,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3967:16:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"hexValue": "227d",
																					"id": 1825,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4014:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					},
																					"value": "\"}"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832",
																						"typeString": "literal_string \"{\"name\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_4c216c0cacb2979ab2fa64169618dff639cb413b3341193391c2734a2cc9c17d",
																						"typeString": "literal_string \"\",\"description\":\"\""
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_1911d47c22fdf14b4435e8bace6691f53a0ce5f0537d721a6a13822841bc852d",
																						"typeString": "literal_string \"\",\"image\":\"\""
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475",
																						"typeString": "literal_string \"\"}\""
																					}
																				],
																				"expression": {
																					"id": 1814,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "3694:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1815,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "3698:12:5",
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "3694:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3694:351:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"expression": {
																			"id": 1812,
																			"name": "Base64",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "3654:6:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Base64_$64_$",
																				"typeString": "type(library Base64)"
																			}
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3661:6:5",
																		"memberName": "encode",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 63,
																		"src": "3654:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (bytes memory) pure returns (string memory)"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3654:414:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa",
																		"typeString": "literal_string \"data:application/json;base64,\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3518:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3522:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3518:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3518:611:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3493:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1807,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3493:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3493:651:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1806,
												"id": 1830,
												"nodeType": "Return",
												"src": "3473:671:5"
											}
										]
									},
									"functionSelector": "e8a3d485",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractURI",
									"nameLocation": "3412:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3423:2:5"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "3447:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3447:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:15:5"
									},
									"scope": 1895,
									"src": "3403:749:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2038
									],
									"body": {
										"id": 1869,
										"nodeType": "Block",
										"src": "4231:247:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1842,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "4266:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1839,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "4242:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$3154_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:13:5",
														"memberName": "_requireOwned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3084,
														"src": "4242:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4242:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "4242:32:5"
											},
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "4301:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1869,
														"src": "4287:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1845,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "4287:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1847,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1878,
														"src": "4311:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4311:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4287:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1852,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "4358:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4352:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1850,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "4352:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4352:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4367:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4352:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4352:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4468:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "4352:118:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 1860,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "4411:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1861,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "4420:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4428:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 132,
																	"src": "4420:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4420:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "2e6a736f6e",
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4440:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																	"typeString": "literal_string \".json\""
																},
																"value": ".json"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
																	"typeString": "literal_string \".json\""
																}
															],
															"expression": {
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4397:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 1857,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "4397:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4404:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "4397:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4397:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1868,
												"nodeType": "Return",
												"src": "4332:138:5"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 1870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "4169:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4186:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4178:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:17:5"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1870,
												"src": "4216:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4216:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4215:15:5"
									},
									"scope": 1895,
									"src": "4160:318:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "4552:45:5",
										"statements": [
											{
												"expression": {
													"hexValue": "697066733a2f2f736f6d657468696e672f",
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4570:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8c25369d3eccd8b368d25df1150a39ba67d190cf1f16ebf8a3707123103098e6",
														"typeString": "literal_string \"ipfs://something/\""
													},
													"value": "ipfs://something/"
												},
												"functionReturnParameters": 1874,
												"id": 1876,
												"nodeType": "Return",
												"src": "4563:26:5"
											}
										]
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "4495:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4503:2:5"
									},
									"returnParameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "4537:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1872,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4537:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4536:15:5"
									},
									"scope": 1895,
									"src": "4486:111:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "4668:81:5",
										"statements": [
											{
												"expression": {
													"hexValue": "697066733a2f2f516d636967396548385857455a5a7546395a47514437674141484d446a373973543875643738375067443537754e",
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4686:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_585614bb91ad8ba7a82ca696a2a8c1013b91b1a829f17f122d730fe2aca1b7b6",
														"typeString": "literal_string \"ipfs://Qmcig9eH8XWEZZuF9ZGQD7gAAHMDj79sT8ud787PgD57uN\""
													},
													"value": "ipfs://Qmcig9eH8XWEZZuF9ZGQD7gAAHMDj79sT8ud787PgD57uN"
												},
												"functionReturnParameters": 1882,
												"id": 1884,
												"nodeType": "Return",
												"src": "4679:62:5"
											}
										]
									},
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractImage",
									"nameLocation": "4614:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4628:2:5"
									},
									"returnParameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "4654:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4654:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4653:14:5"
									},
									"scope": 1895,
									"src": "4605:144:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "4827:138:5",
										"statements": [
											{
												"expression": {
													"hexValue": "5468697320697320636f6e7472616374206465736372697074696f6e2e4465706f6c796564206279206a757374776569277320455243373231204469616d6f6e6420696d706c656d656e746174696f6e2e",
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4858:99:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_181e845e6c0eb8c054a077e1938a77f4971788cb2d26cf8484daf453967e5fbd",
														"typeString": "literal_string \"This is contract description.Depolyed by justwei's ERC721 Diamond implementation.\""
													},
													"value": "This is contract description.Depolyed by justwei's ERC721 Diamond implementation."
												},
												"functionReturnParameters": 1890,
												"id": 1892,
												"nodeType": "Return",
												"src": "4838:119:5"
											}
										]
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contractDescription",
									"nameLocation": "4766:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4786:2:5"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "4812:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1888,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4812:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:15:5"
									},
									"scope": 1895,
									"src": "4757:208:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1896,
							"src": "418:4550:5",
							"usedErrors": [
								2046,
								2051,
								2060,
								2070,
								2077,
								2082,
								2087,
								2094
							],
							"usedEvents": [
								2109,
								2118,
								2127
							]
						}
					],
					"src": "33:4935:5"
				},
				"id": 5
			},
			"contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1980
						]
					},
					"id": 1981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1897,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1980,
							"linearizedBaseContracts": [
								1980
							],
							"name": "IERC721",
							"nameLocation": "149:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "164:78:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1905,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "257:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "266:15:6"
									},
									"returnParameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "313:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "305:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "304:17:6"
									},
									"scope": 1980,
									"src": "248:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1906,
										"nodeType": "StructuredDocumentation",
										"src": "330:137:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "482:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "498:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "490:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "490:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:17:6"
									},
									"returnParameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "538:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1913,
												"src": "530:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:15:6"
									},
									"scope": 1980,
									"src": "473:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1914,
										"nodeType": "StructuredDocumentation",
										"src": "553:578:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1146:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1181:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1173:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1915,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1204:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1196:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1225:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1217:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1258:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1925,
												"src": "1243:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1243:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:107:6"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1278:0:6"
									},
									"scope": 1980,
									"src": "1137:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1926,
										"nodeType": "StructuredDocumentation",
										"src": "1287:720:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2022:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2057:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2049:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2080:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2072:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:77:6"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:0:6"
									},
									"scope": 1980,
									"src": "2013:112:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1936,
										"nodeType": "StructuredDocumentation",
										"src": "2133:747:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2895:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2916:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2908:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2930:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2922:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2942:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1945,
												"src": "2934:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:43:6"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2959:0:6"
									},
									"scope": 1980,
									"src": "2886:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1946,
										"nodeType": "StructuredDocumentation",
										"src": "2968:464:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3447:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1948,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3463:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "3455:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3475:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "3467:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3467:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:29:6"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3492:0:6"
									},
									"scope": 1980,
									"src": "3438:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "3501:324:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3840:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3866:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3858:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3858:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3881:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "3876:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1957,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3876:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3857:33:6"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3899:0:6"
									},
									"scope": 1980,
									"src": "3831:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "3908:145:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1969,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4068:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4098:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4090:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4090:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:33:6"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4144:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "4136:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:18:6"
									},
									"scope": 1980,
									"src": "4059:95:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1970,
										"nodeType": "StructuredDocumentation",
										"src": "4162:142:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4319:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4354:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "4346:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4378:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "4370:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4370:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4335:58:6"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "4417:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1976,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4416:6:6"
									},
									"scope": 1980,
									"src": "4310:113:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1981,
							"src": "139:4287:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "111:4315:6"
				},
				"id": 6
			},
			"contracts/interfaces/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							1980
						],
						"IERC721Enumerable": [
							2012
						]
					},
					"id": 2013,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:7"
						},
						{
							"absolutePath": "contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2013,
							"sourceUnit": 1981,
							"src": "160:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1983,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1980,
										"src": "169:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1986,
										"name": "IERC721",
										"nameLocations": [
											"376:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1980,
										"src": "376:7:7"
									},
									"id": 1987,
									"nodeType": "InheritanceSpecifier",
									"src": "376:7:7"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1985,
								"nodeType": "StructuredDocumentation",
								"src": "204:139:7",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 2012,
							"linearizedBaseContracts": [
								2012,
								1980
							],
							"name": "IERC721Enumerable",
							"nameLocation": "355:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "391:84:7",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "490:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "501:2:7"
									},
									"returnParameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "527:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:9:7"
									},
									"scope": 2012,
									"src": "481:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "544:174:7",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 2003,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "733:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "761:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "753:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "776:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "768:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:30:7"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "806:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:9:7"
									},
									"scope": 2012,
									"src": "724:91:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2004,
										"nodeType": "StructuredDocumentation",
										"src": "823:167:7",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 2011,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1005:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1026:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1018:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:15:7"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2011,
												"src": "1056:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:9:7"
									},
									"scope": 2012,
									"src": "996:69:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2013,
							"src": "345:723:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "132:936:7"
				},
				"id": 7
			},
			"contracts/interfaces/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1980
						],
						"IERC721Metadata": [
							2039
						]
					},
					"id": 2040,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2014,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "130:24:8"
						},
						{
							"absolutePath": "contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2016,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2040,
							"sourceUnit": 1981,
							"src": "158:40:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2015,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1980,
										"src": "167:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2017,
										"name": "IERC721",
										"nameLocations": [
											"231:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1980,
										"src": "231:7:8"
									},
									"id": 2018,
									"nodeType": "InheritanceSpecifier",
									"src": "231:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2039,
							"linearizedBaseContracts": [
								2039,
								1980
							],
							"name": "IERC721Metadata",
							"nameLocation": "212:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "246:60:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "321:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "325:2:8"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2024,
												"src": "351:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2021,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "351:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "350:15:8"
									},
									"scope": 2039,
									"src": "312:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2025,
										"nodeType": "StructuredDocumentation",
										"src": "374:62:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "451:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "457:2:8"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "483:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "483:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:15:8"
									},
									"scope": 2039,
									"src": "442:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2031,
										"nodeType": "StructuredDocumentation",
										"src": "506:92:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "613:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "630:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "622:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "621:17:8"
									},
									"returnParameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "662:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2035,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:15:8"
									},
									"scope": 2039,
									"src": "604:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2040,
							"src": "202:478:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "130:550:8"
				},
				"id": 8
			},
			"contracts/libraries/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Errors.sol",
					"exportedSymbols": {
						"ERC721Errors": [
							2098
						]
					},
					"id": 2099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2041,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2098,
							"linearizedBaseContracts": [
								2098
							],
							"name": "ERC721Errors",
							"nameLocation": "150:12:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "170:223:9",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 2046,
									"name": "ERC721InvalidOwner",
									"nameLocation": "405:18:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "432:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "424:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:9"
									},
									"src": "399:40:9"
								},
								{
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "447:135:9",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 2051,
									"name": "ERC721NonexistentToken",
									"nameLocation": "594:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "625:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "617:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:17:9"
									},
									"src": "588:46:9"
								},
								{
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "642:294:9",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2060,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "948:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "977:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "969:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "993:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "985:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1010:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "1002:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2057,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:48:9"
									},
									"src": "942:75:9"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "1025:155:9",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2065,
									"name": "ERC721InvalidSender",
									"nameLocation": "1192:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1220:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "1212:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:16:9"
									},
									"src": "1186:42:9"
								},
								{
									"documentation": {
										"id": 2066,
										"nodeType": "StructuredDocumentation",
										"src": "1236:162:9",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2070,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "1410:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1440:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2070,
												"src": "1432:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:18:9"
									},
									"src": "1404:46:9"
								},
								{
									"documentation": {
										"id": 2071,
										"nodeType": "StructuredDocumentation",
										"src": "1458:251:9",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2077,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "1721:26:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1756:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1748:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1774:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2077,
												"src": "1766:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:35:9"
									},
									"src": "1715:68:9"
								},
								{
									"documentation": {
										"id": 2078,
										"nodeType": "StructuredDocumentation",
										"src": "1791:177:9",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2082,
									"name": "ERC721InvalidApprover",
									"nameLocation": "1980:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "2010:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2002:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:18:9"
									},
									"src": "1974:46:9"
								},
								{
									"documentation": {
										"id": 2083,
										"nodeType": "StructuredDocumentation",
										"src": "2028:200:9",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2087,
									"name": "ERC721InvalidOperator",
									"nameLocation": "2240:21:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2270:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "2262:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:18:9"
									},
									"src": "2234:46:9"
								},
								{
									"documentation": {
										"id": 2088,
										"nodeType": "StructuredDocumentation",
										"src": "2288:172:9",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 2094,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "2472:22:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2503:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "2495:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2518:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "2510:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:30:9"
									},
									"src": "2466:59:9"
								},
								{
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "2533:52:9",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 2097,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "2597:34:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:2:9"
									},
									"src": "2591:43:9"
								}
							],
							"scope": 2099,
							"src": "142:2495:9",
							"usedErrors": [
								2046,
								2051,
								2060,
								2065,
								2070,
								2077,
								2082,
								2087,
								2094,
								2097
							],
							"usedEvents": []
						}
					],
					"src": "114:2523:9"
				},
				"id": 9
			},
			"contracts/libraries/Events.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Events.sol",
					"exportedSymbols": {
						"ERC721Events": [
							2128
						]
					},
					"id": 2129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Events",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2128,
							"linearizedBaseContracts": [
								2128
							],
							"name": "ERC721Events",
							"nameLocation": "147:12:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "167:90:10",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2109,
									"name": "Transfer",
									"nameLocation": "269:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "304:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "288:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2105,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "335:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "319:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "364:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "348:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:101:10"
									},
									"src": "263:116:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "387:96:10",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2118,
									"name": "Approval",
									"nameLocation": "495:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "530:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "514:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "562:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "546:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "597:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "581:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:108:10"
									},
									"src": "489:123:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "620:119:10",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 2127,
									"name": "ApprovalForAll",
									"nameLocation": "751:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2121,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "792:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "776:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2123,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "824:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "808:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "848:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "843:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "843:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:98:10"
									},
									"src": "745:119:10"
								}
							],
							"scope": 2129,
							"src": "139:728:10",
							"usedErrors": [],
							"usedEvents": [
								2109,
								2118,
								2127
							]
						}
					],
					"src": "111:756:10"
				},
				"id": 10
			},
			"contracts/libraries/LibERC721.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/LibERC721.sol",
					"exportedSymbols": {
						"ERC721Errors": [
							2098
						],
						"ERC721Events": [
							2128
						],
						"IERC721Receiver": [
							17
						],
						"LibERC721": [
							3154
						]
					},
					"id": 3155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 2131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 18,
							"src": "63:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Errors.sol",
							"file": "./Errors.sol",
							"id": 2133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 2099,
							"src": "131:42:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2132,
										"name": "ERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2098,
										"src": "139:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Events.sol",
							"file": "./Events.sol",
							"id": 2135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3155,
							"sourceUnit": 2129,
							"src": "175:42:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2134,
										"name": "ERC721Events",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2128,
										"src": "183:12:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibERC721",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3154,
							"linearizedBaseContracts": [
								3154
							],
							"name": "LibERC721",
							"nameLocation": "229:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2140,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "272:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 3154,
									"src": "246:85:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2136,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e73746f726167652e657263373231",
												"id": 2138,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "306:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78",
													"typeString": "literal_string \"diamond.storage.erc721\""
												},
												"value": "diamond.storage.erc721"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78",
													"typeString": "literal_string \"diamond.storage.erc721\""
												}
											],
											"id": 2137,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "296:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "296:35:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibERC721.Layout",
									"id": 2184,
									"members": [
										{
											"constant": false,
											"id": 2142,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "372:4:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "365:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2141,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "365:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2144,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "394:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "387:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2143,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "387:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2147,
											"mutability": "mutable",
											"name": "allTokens",
											"nameLocation": "421:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "411:19:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2146,
												"nodeType": "ArrayTypeName",
												"src": "411:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2151,
											"mutability": "mutable",
											"name": "owners",
											"nameLocation": "477:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "441:42:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 2150,
												"keyName": "tokenId",
												"keyNameLocation": "457:7:11",
												"keyType": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "441:35:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "525:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "494:39:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 2154,
												"keyName": "owner",
												"keyNameLocation": "510:5:11",
												"keyType": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "494:30:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "tokenApprovals",
											"nameLocation": "580:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "544:50:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 2158,
												"keyName": "tokenId",
												"keyNameLocation": "560:7:11",
												"keyType": {
													"id": 2156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "544:35:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "operatorApprovals",
											"nameLocation": "664:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "605:76:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
												"typeString": "mapping(address => mapping(address => bool))"
											},
											"typeName": {
												"id": 2164,
												"keyName": "owner",
												"keyNameLocation": "621:5:11",
												"keyType": {
													"id": 2160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "605:58:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
													"typeString": "mapping(address => mapping(address => bool))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2163,
													"keyName": "oprator",
													"keyNameLocation": "646:7:11",
													"keyType": {
														"id": 2161,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "638:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "630:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 2162,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "657:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "ownedTokens",
											"nameLocation": "752:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "692:71:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint256 => uint256))"
											},
											"typeName": {
												"id": 2170,
												"keyName": "owner",
												"keyNameLocation": "708:5:11",
												"keyType": {
													"id": 2166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "692:59:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint256 => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2169,
													"keyName": "index",
													"keyNameLocation": "733:5:11",
													"keyType": {
														"id": 2167,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "725:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Mapping",
													"src": "717:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
														"typeString": "mapping(uint256 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 2168,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "742:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2175,
											"mutability": "mutable",
											"name": "ownedTokensIndex",
											"nameLocation": "802:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "774:44:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 2174,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "774:27:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2179,
											"mutability": "mutable",
											"name": "allTokensIndex",
											"nameLocation": "865:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "829:50:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 2178,
												"keyName": "tokenId",
												"keyNameLocation": "845:7:11",
												"keyType": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "829:35:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2183,
											"mutability": "mutable",
											"name": "_gaps",
											"nameLocation": "902:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2184,
											"src": "890:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$88_storage_ptr",
												"typeString": "uint256[88]"
											},
											"typeName": {
												"baseType": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2182,
												"length": {
													"hexValue": "3838",
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "898:2:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_88_by_1",
														"typeString": "int_const 88"
													},
													"value": "88"
												},
												"nodeType": "ArrayTypeName",
												"src": "890:11:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$88_storage_ptr",
													"typeString": "uint256[88]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "347:6:11",
									"nodeType": "StructDefinition",
									"scope": 3154,
									"src": "340:575:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2195,
										"nodeType": "Block",
										"src": "982:105:11",
										"statements": [
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "1001:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 2195,
														"src": "993:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2190,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "993:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2193,
												"initialValue": {
													"id": 2192,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2140,
													"src": "1008:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "993:27:11"
											},
											{
												"AST": {
													"nativeSrc": "1040:40:11",
													"nodeType": "YulBlock",
													"src": "1040:40:11",
													"statements": [
														{
															"nativeSrc": "1055:14:11",
															"nodeType": "YulAssignment",
															"src": "1055:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1065:4:11",
																"nodeType": "YulIdentifier",
																"src": "1065:4:11"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "1055:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1055:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2188,
														"isOffset": false,
														"isSlot": true,
														"src": "1055:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2191,
														"isOffset": false,
														"isSlot": false,
														"src": "1065:4:11",
														"valueSize": 1
													}
												],
												"id": 2194,
												"nodeType": "InlineAssembly",
												"src": "1031:49:11"
											}
										]
									},
									"id": 2196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "932:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:2:11"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "979:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "964:16:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
													"typeString": "struct LibERC721.Layout"
												},
												"typeName": {
													"id": 2187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2186,
														"name": "Layout",
														"nameLocations": [
															"964:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2184,
														"src": "964:6:11"
													},
													"referencedDeclaration": 2184,
													"src": "964:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
														"typeString": "struct LibERC721.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:18:11"
									},
									"scope": 3154,
									"src": "923:164:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "1679:50:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2204,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "1697:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1697:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:6:11",
														"memberName": "owners",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2151,
														"src": "1697:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2208,
													"indexExpression": {
														"id": 2207,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "1713:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1697:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2203,
												"id": 2209,
												"nodeType": "Return",
												"src": "1690:31:11"
											}
										]
									},
									"documentation": {
										"id": 2197,
										"nodeType": "StructuredDocumentation",
										"src": "1095:511:11",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "1621:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2199,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1638:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1630:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:17:11"
									},
									"returnParameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "1670:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:11"
									},
									"scope": 3154,
									"src": "1612:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "1921:58:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2219,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "1939:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1939:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1948:14:11",
														"memberName": "tokenApprovals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2159,
														"src": "1939:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2223,
													"indexExpression": {
														"id": 2222,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "1963:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1939:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2218,
												"id": 2224,
												"nodeType": "Return",
												"src": "1932:39:11"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "1737:107:11",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "1859:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1880:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "1872:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:17:11"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "1912:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:9:11"
									},
									"scope": 3154,
									"src": "1850:129:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2264,
										"nodeType": "Block",
										"src": "2434:211:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2238,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "2465:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2484:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2476:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2239,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2476:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2476:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2465:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2244,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2229,
																			"src": "2504:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2245,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "2513:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2504:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2247,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2196,
																						"src": "2541:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2541:8:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2550:17:11",
																				"memberName": "operatorApprovals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2165,
																				"src": "2541:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 2251,
																			"indexExpression": {
																				"id": 2250,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2229,
																				"src": "2568:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2541:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 2253,
																		"indexExpression": {
																			"id": 2252,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2231,
																			"src": "2575:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2541:42:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2504:79:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2256,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2233,
																				"src": "2617:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2255,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2226,
																			"src": "2604:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2604:21:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2258,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "2629:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2604:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2504:132:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2503:134:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2465:172:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2237,
												"id": 2263,
												"nodeType": "Return",
												"src": "2445:192:11"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "1987:306:11",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "2308:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2340:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2332:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2356:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2390:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2382:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:83:11"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "2428:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2428:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:6:11"
									},
									"scope": 3154,
									"src": "2299:346:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "3212:366:11",
										"statements": [
											{
												"condition": {
													"id": 2280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3227:39:11",
													"subExpression": {
														"arguments": [
															{
																"id": 2276,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "3242:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2277,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "3249:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2278,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "3258:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2275,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "3228:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3228:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "3223:348:11",
												"trueBody": {
													"id": 2303,
													"nodeType": "Block",
													"src": "3268:303:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2281,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2268,
																	"src": "3287:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3304:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3296:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2282,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3296:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3296:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3287:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2301,
																"nodeType": "Block",
																"src": "3400:160:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2297,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2270,
																					"src": "3488:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2298,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "3518:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2294,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "3426:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 2296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3439:26:11",
																				"memberName": "ERC721InsufficientApproval",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2077,
																				"src": "3426:39:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 2299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3426:118:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2300,
																		"nodeType": "RevertStatement",
																		"src": "3419:125:11"
																	}
																]
															},
															"id": 2302,
															"nodeType": "IfStatement",
															"src": "3283:277:11",
															"trueBody": {
																"id": 2293,
																"nodeType": "Block",
																"src": "3308:86:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2290,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "3370:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2287,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "3334:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 2289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3347:22:11",
																				"memberName": "ERC721NonexistentToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2051,
																				"src": "3334:35:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3334:44:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2292,
																		"nodeType": "RevertStatement",
																		"src": "3327:51:11"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2266,
										"nodeType": "StructuredDocumentation",
										"src": "2653:430:11",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "3098:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3133:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "3125:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3157:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "3149:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3183:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "3175:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:83:11"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3212:0:11"
									},
									"scope": 3154,
									"src": "3089:489:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2333,
										"nodeType": "Block",
										"src": "4300:200:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 2316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2314,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "4315:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4324:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4315:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2323,
												"nodeType": "IfStatement",
												"src": "4311:99:11",
												"trueBody": {
													"id": 2322,
													"nodeType": "Block",
													"src": "4327:83:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2317,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "4349:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4362:34:11",
																	"memberName": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2097,
																	"src": "4349:47:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4349:49:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2321,
															"nodeType": "RevertStatement",
															"src": "4342:56:11"
														}
													]
												}
											},
											{
												"id": 2332,
												"nodeType": "UncheckedBlock",
												"src": "4420:73:11",
												"statements": [
													{
														"expression": {
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2324,
																			"name": "layout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2196,
																			"src": "4445:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																				"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4445:8:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																			"typeString": "struct LibERC721.Layout storage pointer"
																		}
																	},
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4454:8:11",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2155,
																	"src": "4445:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2328,
																"indexExpression": {
																	"id": 2327,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2309,
																	"src": "4463:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4445:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "4475:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "4445:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2331,
														"nodeType": "ExpressionStatement",
														"src": "4445:36:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "3586:640:11",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "4241:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4266:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "4258:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4283:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2334,
												"src": "4275:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2310,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:33:11"
									},
									"returnParameters": {
										"id": 2313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4300:0:11"
									},
									"scope": 3154,
									"src": "4232:268:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2475,
										"nodeType": "Block",
										"src": "5227:1248:11",
										"statements": [
											{
												"assignments": [
													2347
												],
												"declarations": [
													{
														"constant": false,
														"id": 2347,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "5246:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2475,
														"src": "5238:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2346,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5238:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2351,
												"initialValue": {
													"arguments": [
														{
															"id": 2349,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "5271:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2348,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "5262:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5238:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2352,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2341,
														"src": "5342:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5358:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5350:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2353,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5350:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5350:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5342:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2365,
												"nodeType": "IfStatement",
												"src": "5338:97:11",
												"trueBody": {
													"id": 2364,
													"nodeType": "Block",
													"src": "5362:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2359,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2347,
																		"src": "5394:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2360,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2341,
																		"src": "5409:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2361,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "5415:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2358,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2306,
																	"src": "5377:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5377:46:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2363,
															"nodeType": "ExpressionStatement",
															"src": "5377:46:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2366,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "5482:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5507:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5499:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2367,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5499:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5499:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5482:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2395,
												"nodeType": "IfStatement",
												"src": "5478:289:11",
												"trueBody": {
													"id": 2394,
													"nodeType": "Block",
													"src": "5511:256:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5626:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5618:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2373,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5618:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5618:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2377,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "5630:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5647:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5639:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2378,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5639:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5639:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5651:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2372,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2935,
																		3010
																	],
																	"referencedDeclaration": 3010,
																	"src": "5609:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5609:48:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2384,
															"nodeType": "ExpressionStatement",
															"src": "5609:48:11"
														},
														{
															"id": 2393,
															"nodeType": "UncheckedBlock",
															"src": "5674:82:11",
															"statements": [
																{
																	"expression": {
																		"id": 2391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2385,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2196,
																						"src": "5703:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 2386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5703:8:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 2387,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5712:8:11",
																				"memberName": "balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "5703:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2389,
																			"indexExpression": {
																				"id": 2388,
																				"name": "previousOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2347,
																				"src": "5721:13:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5703:32:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2390,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5739:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5703:37:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2392,
																	"nodeType": "ExpressionStatement",
																	"src": "5703:37:11"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2396,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "5783:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5797:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5789:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2397,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5789:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5789:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5783:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2412,
												"nodeType": "IfStatement",
												"src": "5779:119:11",
												"trueBody": {
													"id": 2411,
													"nodeType": "Block",
													"src": "5801:97:11",
													"statements": [
														{
															"id": 2410,
															"nodeType": "UncheckedBlock",
															"src": "5816:71:11",
															"statements": [
																{
																	"expression": {
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2402,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2196,
																						"src": "5845:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 2403,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5845:8:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 2404,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5854:8:11",
																				"memberName": "balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2155,
																				"src": "5845:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2406,
																			"indexExpression": {
																				"id": 2405,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2337,
																				"src": "5863:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5845:21:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5870:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5845:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2409,
																	"nodeType": "ExpressionStatement",
																	"src": "5845:26:11"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2413,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "5910:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5910:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5919:6:11",
															"memberName": "owners",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2151,
															"src": "5910:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2417,
														"indexExpression": {
															"id": 2416,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "5926:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5910:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2418,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "5937:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5910:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "5910:29:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2424,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "5979:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "5994:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2426,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "5998:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2421,
															"name": "ERC721Events",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "5957:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Events_$2128_$",
																"typeString": "type(library ERC721Events)"
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5970:8:11",
														"memberName": "Transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2109,
														"src": "5957:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2428,
												"nodeType": "EmitStatement",
												"src": "5952:54:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2429,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2347,
														"src": "6023:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6040:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2430,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6040:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6040:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6023:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2440,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "6129:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "6146:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6129:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2449,
													"nodeType": "IfStatement",
													"src": "6125:108:11",
													"trueBody": {
														"id": 2448,
														"nodeType": "Block",
														"src": "6150:83:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2444,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2347,
																			"src": "6198:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2445,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "6213:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2443,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2612,
																		"src": "6165:32:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6165:56:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2447,
																"nodeType": "ExpressionStatement",
																"src": "6165:56:11"
															}
														]
													}
												},
												"id": 2450,
												"nodeType": "IfStatement",
												"src": "6019:214:11",
												"trueBody": {
													"id": 2439,
													"nodeType": "Block",
													"src": "6052:67:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2436,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "6099:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2435,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2538,
																	"src": "6067:31:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6067:40:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2438,
															"nodeType": "ExpressionStatement",
															"src": "6067:40:11"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2451,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2337,
														"src": "6247:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6261:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6253:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2452,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6253:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6247:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2462,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2347,
															"src": "6347:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2463,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "6364:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6347:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2471,
													"nodeType": "IfStatement",
													"src": "6343:92:11",
													"trueBody": {
														"id": 2470,
														"nodeType": "Block",
														"src": "6368:67:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2466,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2337,
																			"src": "6411:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2467,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2339,
																			"src": "6415:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2465,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "6383:27:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6383:40:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2469,
																"nodeType": "ExpressionStatement",
																"src": "6383:40:11"
															}
														]
													}
												},
												"id": 2472,
												"nodeType": "IfStatement",
												"src": "6243:192:11",
												"trueBody": {
													"id": 2461,
													"nodeType": "Block",
													"src": "6265:72:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2458,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2339,
																		"src": "6317:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2457,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2673,
																	"src": "6280:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6280:45:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2460,
															"nodeType": "ExpressionStatement",
															"src": "6280:45:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2473,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2347,
													"src": "6454:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2345,
												"id": 2474,
												"nodeType": "Return",
												"src": "6447:20:11"
											}
										]
									},
									"documentation": {
										"id": 2335,
										"nodeType": "StructuredDocumentation",
										"src": "4508:592:11",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5115:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5141:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "5133:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5133:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5162:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "5154:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "5188:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "5180:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:77:11"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2476,
												"src": "5218:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:9:11"
									},
									"scope": 3154,
									"src": "5106:1369:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2512,
										"nodeType": "Block",
										"src": "6851:168:11",
										"statements": [
											{
												"assignments": [
													2485
												],
												"declarations": [
													{
														"constant": false,
														"id": 2485,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6870:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2512,
														"src": "6862:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6862:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2493,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2486,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "6879:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6879:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6888:8:11",
															"memberName": "balances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2155,
															"src": "6879:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2490,
														"indexExpression": {
															"id": 2489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2479,
															"src": "6897:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6879:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 2491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6903:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6879:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6862:42:11"
											},
											{
												"expression": {
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2494,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "6915:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 2495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6915:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 2496,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6924:11:11",
																"memberName": "ownedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "6915:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2498,
															"indexExpression": {
																"id": 2497,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2479,
																"src": "6936:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6915:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2500,
														"indexExpression": {
															"id": 2499,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "6940:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6915:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2501,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2481,
														"src": "6950:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6915:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "6915:42:11"
											},
											{
												"expression": {
													"id": 2510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2504,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "6968:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6968:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2506,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6977:16:11",
															"memberName": "ownedTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2175,
															"src": "6968:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2508,
														"indexExpression": {
															"id": 2507,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "6994:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6968:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2509,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2485,
														"src": "7005:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2511,
												"nodeType": "ExpressionStatement",
												"src": "6968:43:11"
											}
										]
									},
									"documentation": {
										"id": 2477,
										"nodeType": "StructuredDocumentation",
										"src": "6483:287:11",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 2513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "6785:27:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2479,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6821:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "6813:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6813:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6833:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2513,
												"src": "6825:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6812:29:11"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6851:0:11"
									},
									"scope": 3154,
									"src": "6776:243:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "7287:122:11",
										"statements": [
											{
												"expression": {
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2519,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7298:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7298:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7307:14:11",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2179,
															"src": "7298:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2523,
														"indexExpression": {
															"id": 2522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "7322:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7298:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2524,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7333:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7333:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2526,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7342:9:11",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2147,
															"src": "7333:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7352:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7333:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7298:60:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2529,
												"nodeType": "ExpressionStatement",
												"src": "7298:60:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2534,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2516,
															"src": "7393:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2530,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "7369:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7369:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2532,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7378:9:11",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2147,
															"src": "7369:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7388:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7369:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7369:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "7369:32:11"
											}
										]
									},
									"documentation": {
										"id": 2514,
										"nodeType": "StructuredDocumentation",
										"src": "7027:187:11",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "7229:31:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7269:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "7261:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7260:17:11"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7287:0:11"
									},
									"scope": 3154,
									"src": "7220:189:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "8143:952:11",
										"statements": [
											{
												"assignments": [
													2547
												],
												"declarations": [
													{
														"constant": false,
														"id": 2547,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "8336:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "8328:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8328:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2553,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2548,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "8353:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8353:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2550,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8362:8:11",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2155,
														"src": "8353:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2552,
													"indexExpression": {
														"id": 2551,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "8371:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8353:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8328:48:11"
											},
											{
												"assignments": [
													2555
												],
												"declarations": [
													{
														"constant": false,
														"id": 2555,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "8395:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2611,
														"src": "8387:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2554,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8387:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2561,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2556,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "8408:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8408:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2558,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8417:16:11",
														"memberName": "ownedTokensIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2175,
														"src": "8408:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2560,
													"indexExpression": {
														"id": 2559,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "8434:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8408:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8387:55:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2562,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "8549:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2563,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2547,
														"src": "8563:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8549:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2594,
												"nodeType": "IfStatement",
												"src": "8545:352:11",
												"trueBody": {
													"id": 2593,
													"nodeType": "Block",
													"src": "8579:318:11",
													"statements": [
														{
															"assignments": [
																2566
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2566,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "8602:11:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2593,
																	"src": "8594:19:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2565,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8594:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2574,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2567,
																				"name": "layout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2196,
																				"src": "8616:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																					"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																				}
																			},
																			"id": 2568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8616:8:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																				"typeString": "struct LibERC721.Layout storage pointer"
																			}
																		},
																		"id": 2569,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8625:11:11",
																		"memberName": "ownedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2171,
																		"src": "8616:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 2571,
																	"indexExpression": {
																		"id": 2570,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "8637:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8616:26:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2573,
																"indexExpression": {
																	"id": 2572,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "8643:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8616:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8594:64:11"
														},
														{
															"expression": {
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2575,
																					"name": "layout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2196,
																					"src": "8675:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																						"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																					}
																				},
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8675:8:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																					"typeString": "struct LibERC721.Layout storage pointer"
																				}
																			},
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8684:11:11",
																			"memberName": "ownedTokens",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2171,
																			"src": "8675:20:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 2579,
																		"indexExpression": {
																			"id": 2578,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "8696:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8675:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2581,
																	"indexExpression": {
																		"id": 2580,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2555,
																		"src": "8702:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8675:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2582,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "8716:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8675:52:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2584,
															"nodeType": "ExpressionStatement",
															"src": "8675:52:11"
														},
														{
															"expression": {
																"id": 2591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2585,
																				"name": "layout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2196,
																				"src": "8800:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																					"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																				}
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8800:8:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																				"typeString": "struct LibERC721.Layout storage pointer"
																			}
																		},
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8809:16:11",
																		"memberName": "ownedTokensIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2175,
																		"src": "8800:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2589,
																	"indexExpression": {
																		"id": 2588,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2566,
																		"src": "8826:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8800:38:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2590,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2555,
																	"src": "8841:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8800:51:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2592,
															"nodeType": "ExpressionStatement",
															"src": "8800:51:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8986:41:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2595,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "8993:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8993:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9002:16:11",
															"memberName": "ownedTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2175,
															"src": "8993:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2599,
														"indexExpression": {
															"id": 2598,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "9019:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8993:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2601,
												"nodeType": "ExpressionStatement",
												"src": "8986:41:11"
											},
											{
												"expression": {
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9038:49:11",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2602,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "9045:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 2603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9045:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 2604,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9054:11:11",
																"memberName": "ownedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2171,
																"src": "9045:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 2606,
															"indexExpression": {
																"id": 2605,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "9066:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9045:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2608,
														"indexExpression": {
															"id": 2607,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2547,
															"src": "9072:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9045:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "9038:49:11"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "7417:613:11",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "8045:32:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8096:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8088:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8088:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8119:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "8111:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8111:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8077:56:11"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8143:0:11"
									},
									"scope": 3154,
									"src": "8036:1059:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2672,
										"nodeType": "Block",
										"src": "9466:1064:11",
										"statements": [
											{
												"assignments": [
													2619
												],
												"declarations": [
													{
														"constant": false,
														"id": 2619,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "9656:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 2672,
														"src": "9648:22:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9648:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2626,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2620,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "9673:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9673:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9682:9:11",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2147,
															"src": "9673:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9692:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9673:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 2624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9701:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9673:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9648:54:11"
											},
											{
												"assignments": [
													2628
												],
												"declarations": [
													{
														"constant": false,
														"id": 2628,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "9721:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2672,
														"src": "9713:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2627,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2629,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "9734:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9734:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2631,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9743:14:11",
														"memberName": "allTokensIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2179,
														"src": "9734:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 2633,
													"indexExpression": {
														"id": 2632,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2615,
														"src": "9758:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9734:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:53:11"
											},
											{
												"assignments": [
													2636
												],
												"declarations": [
													{
														"constant": false,
														"id": 2636,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "10101:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 2672,
														"src": "10093:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2635,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10093:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2642,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2637,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2196,
																"src": "10115:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10115:8:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10124:9:11",
														"memberName": "allTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2147,
														"src": "10115:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 2641,
													"indexExpression": {
														"id": 2640,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2619,
														"src": "10134:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10115:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10093:56:11"
											},
											{
												"expression": {
													"id": 2649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2643,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "10162:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10162:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10171:9:11",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2147,
															"src": "10162:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2647,
														"indexExpression": {
															"id": 2646,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "10181:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10162:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2648,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2636,
														"src": "10195:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10162:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2650,
												"nodeType": "ExpressionStatement",
												"src": "10162:44:11"
											},
											{
												"expression": {
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2651,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "10275:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10275:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10284:14:11",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2179,
															"src": "10275:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2655,
														"indexExpression": {
															"id": 2654,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2636,
															"src": "10299:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10275:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2656,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "10314:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10275:49:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2658,
												"nodeType": "ExpressionStatement",
												"src": "10275:49:11"
											},
											{
												"expression": {
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10448:39:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2659,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "10455:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10455:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10464:14:11",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2179,
															"src": "10455:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2663,
														"indexExpression": {
															"id": 2662,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "10479:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10455:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "10448:39:11"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2666,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "10498:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10498:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 2668,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10507:9:11",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2147,
															"src": "10498:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10517:3:11",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "10498:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 2670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10498:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2671,
												"nodeType": "ExpressionStatement",
												"src": "10498:24:11"
											}
										]
									},
									"documentation": {
										"id": 2613,
										"nodeType": "StructuredDocumentation",
										"src": "9107:281:11",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 2673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "9403:36:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9448:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2673,
												"src": "9440:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9439:17:11"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9466:0:11"
									},
									"scope": 3154,
									"src": "9394:1136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2726,
										"nodeType": "Block",
										"src": "10919:308:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2681,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2676,
														"src": "10934:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10948:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10940:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2682,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10940:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2685,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10940:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10934:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2697,
												"nodeType": "IfStatement",
												"src": "10930:102:11",
												"trueBody": {
													"id": 2696,
													"nodeType": "Block",
													"src": "10952:80:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2692,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11017:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11009:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2690,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11009:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11009:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2687,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "10974:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10987:21:11",
																	"memberName": "ERC721InvalidReceiver",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2070,
																	"src": "10974:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10974:46:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2695,
															"nodeType": "RevertStatement",
															"src": "10967:53:11"
														}
													]
												}
											},
											{
												"assignments": [
													2699
												],
												"declarations": [
													{
														"constant": false,
														"id": 2699,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11050:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2726,
														"src": "11042:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2698,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11042:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2708,
												"initialValue": {
													"arguments": [
														{
															"id": 2701,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2676,
															"src": "11074:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2678,
															"src": "11078:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11095:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11087:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2703,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11087:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11087:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2700,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "11066:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11066:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11042:56:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2709,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "11113:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11138:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11130:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2710,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11130:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2713,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11130:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11113:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2725,
												"nodeType": "IfStatement",
												"src": "11109:111:11",
												"trueBody": {
													"id": 2724,
													"nodeType": "Block",
													"src": "11142:78:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2720,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11205:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11197:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2718,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11197:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11197:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2715,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "11164:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11177:19:11",
																	"memberName": "ERC721InvalidSender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2065,
																	"src": "11164:32:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:44:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2723,
															"nodeType": "RevertStatement",
															"src": "11157:51:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2674,
										"nodeType": "StructuredDocumentation",
										"src": "10538:322:11",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10875:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10889:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "10881:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10881:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2678,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10901:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2727,
												"src": "10893:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10893:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10880:29:11"
									},
									"returnParameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10919:0:11"
									},
									"scope": 3154,
									"src": "10866:361:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2741,
										"nodeType": "Block",
										"src": "11647:45:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2736,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2730,
															"src": "11668:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2737,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2732,
															"src": "11672:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11681:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2735,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2742,
															2770
														],
														"referencedDeclaration": 2770,
														"src": "11658:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11658:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2740,
												"nodeType": "ExpressionStatement",
												"src": "11658:26:11"
											}
										]
									},
									"documentation": {
										"id": 2728,
										"nodeType": "StructuredDocumentation",
										"src": "11235:349:11",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11599:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11617:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "11609:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11609:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11629:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2742,
												"src": "11621:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11621:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11608:29:11"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11647:0:11"
									},
									"scope": 3154,
									"src": "11590:102:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "12029:112:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2753,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "12046:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2754,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "12050:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2752,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2727,
														"src": "12040:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2756,
												"nodeType": "ExpressionStatement",
												"src": "12040:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2758,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12091:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12095:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12091:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12111:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12103:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12103:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12103:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2764,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2745,
															"src": "12115:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2765,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2747,
															"src": "12119:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2749,
															"src": "12128:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2757,
														"name": "checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "12069:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12069:64:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2768,
												"nodeType": "ExpressionStatement",
												"src": "12069:64:11"
											}
										]
									},
									"documentation": {
										"id": 2743,
										"nodeType": "StructuredDocumentation",
										"src": "11700:213:11",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11928:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11956:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "11948:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11948:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11977:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "11969:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11969:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12008:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "11995:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2748,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11995:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11937:82:11"
									},
									"returnParameters": {
										"id": 2751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12029:0:11"
									},
									"scope": 3154,
									"src": "11919:222:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2804,
										"nodeType": "Block",
										"src": "12521:204:11",
										"statements": [
											{
												"assignments": [
													2777
												],
												"declarations": [
													{
														"constant": false,
														"id": 2777,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12540:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2804,
														"src": "12532:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2776,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12532:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2789,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12572:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12564:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2779,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12564:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12564:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2783,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "12576:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12593:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12585:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2784,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12585:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12585:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2778,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "12556:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12556:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12532:64:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2790,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2777,
														"src": "12611:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12636:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12628:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2791,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12628:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12628:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12611:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2803,
												"nodeType": "IfStatement",
												"src": "12607:111:11",
												"trueBody": {
													"id": 2802,
													"nodeType": "Block",
													"src": "12640:78:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2799,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "12698:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2796,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "12662:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12675:22:11",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2051,
																	"src": "12662:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12662:44:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2801,
															"nodeType": "RevertStatement",
															"src": "12655:51:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "12149:325:11",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12489:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12503:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2805,
												"src": "12495:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12495:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12494:17:11"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12521:0:11"
									},
									"scope": 3154,
									"src": "12480:245:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2870,
										"nodeType": "Block",
										"src": "13133:504:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2815,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "13148:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13162:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13154:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2816,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13154:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13154:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13148:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2831,
												"nodeType": "IfStatement",
												"src": "13144:102:11",
												"trueBody": {
													"id": 2830,
													"nodeType": "Block",
													"src": "13166:80:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13231:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13223:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2824,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13223:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13223:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2821,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "13188:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13201:21:11",
																	"memberName": "ERC721InvalidReceiver",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2070,
																	"src": "13188:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13188:46:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2829,
															"nodeType": "RevertStatement",
															"src": "13181:53:11"
														}
													]
												}
											},
											{
												"assignments": [
													2833
												],
												"declarations": [
													{
														"constant": false,
														"id": 2833,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13264:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2870,
														"src": "13256:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2832,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13256:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2842,
												"initialValue": {
													"arguments": [
														{
															"id": 2835,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2810,
															"src": "13288:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2836,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "13292:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13309:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13301:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13301:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13301:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2834,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "13280:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13280:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13256:56:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2843,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "13327:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13352:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2845,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13344:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2844,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13344:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2847,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13344:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13327:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2856,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2833,
															"src": "13444:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2857,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2808,
															"src": "13461:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "13444:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2868,
													"nodeType": "IfStatement",
													"src": "13440:190:11",
													"trueBody": {
														"id": 2867,
														"nodeType": "Block",
														"src": "13467:163:11",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2862,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2808,
																			"src": "13541:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2863,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2812,
																			"src": "13564:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2864,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2833,
																			"src": "13590:13:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 2859,
																			"name": "ERC721Errors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2098,
																			"src": "13489:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																				"typeString": "type(library ERC721Errors)"
																			}
																		},
																		"id": 2861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13502:20:11",
																		"memberName": "ERC721IncorrectOwner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2060,
																		"src": "13489:33:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 2865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13489:129:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 2866,
																"nodeType": "RevertStatement",
																"src": "13482:136:11"
															}
														]
													}
												},
												"id": 2869,
												"nodeType": "IfStatement",
												"src": "13323:307:11",
												"trueBody": {
													"id": 2855,
													"nodeType": "Block",
													"src": "13356:78:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "13414:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2849,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "13378:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 2851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13391:22:11",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2051,
																	"src": "13378:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13378:44:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2854,
															"nodeType": "RevertStatement",
															"src": "13371:51:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "12733:323:11",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "13071:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13089:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13081:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13081:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13103:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13095:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13095:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13115:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2871,
												"src": "13107:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13107:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13080:43:11"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13133:0:11"
									},
									"scope": 3154,
									"src": "13062:575:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2888,
										"nodeType": "Block",
										"src": "14667:55:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2882,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2874,
															"src": "14692:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2883,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2876,
															"src": "14698:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2884,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2878,
															"src": "14702:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14711:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2881,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2889,
															2917
														],
														"referencedDeclaration": 2917,
														"src": "14678:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14678:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2887,
												"nodeType": "ExpressionStatement",
												"src": "14678:36:11"
											}
										]
									},
									"documentation": {
										"id": 2872,
										"nodeType": "StructuredDocumentation",
										"src": "13645:941:11",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14601:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14623:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "14615:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14615:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2876,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14637:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "14629:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14629:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14649:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2889,
												"src": "14641:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14641:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14614:43:11"
									},
									"returnParameters": {
										"id": 2880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14667:0:11"
									},
									"scope": 3154,
									"src": "14592:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2916,
										"nodeType": "Block",
										"src": "15102:116:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "15123:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "15129:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2904,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2896,
															"src": "15133:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2901,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2871,
														"src": "15113:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15113:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2906,
												"nodeType": "ExpressionStatement",
												"src": "15113:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2908,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15174:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15178:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15174:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2910,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2892,
															"src": "15186:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2894,
															"src": "15192:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2912,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2896,
															"src": "15196:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2913,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2898,
															"src": "15205:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2907,
														"name": "checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3153,
														"src": "15152:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15152:58:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2915,
												"nodeType": "ExpressionStatement",
												"src": "15152:58:11"
											}
										]
									},
									"documentation": {
										"id": 2890,
										"nodeType": "StructuredDocumentation",
										"src": "14730:229:11",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14974:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2892,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15006:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "14998:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14998:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15029:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "15021:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15021:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15050:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "15042:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15042:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15081:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2917,
												"src": "15068:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2897,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15068:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14987:105:11"
									},
									"returnParameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15102:0:11"
									},
									"scope": 3154,
									"src": "14965:253:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2934,
										"nodeType": "Block",
										"src": "15743:52:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2928,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2920,
															"src": "15763:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2929,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "15767:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2930,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "15776:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15782:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2927,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2935,
															3010
														],
														"referencedDeclaration": 3010,
														"src": "15754:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15754:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2933,
												"nodeType": "ExpressionStatement",
												"src": "15754:33:11"
											}
										]
									},
									"documentation": {
										"id": 2918,
										"nodeType": "StructuredDocumentation",
										"src": "15226:441:11",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15682:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2920,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "15691:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15711:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "15703:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15728:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2935,
												"src": "15720:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15720:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15690:43:11"
									},
									"returnParameters": {
										"id": 2926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:11"
									},
									"scope": 3154,
									"src": "15673:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3009,
										"nodeType": "Block",
										"src": "16112:694:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2947,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2944,
														"src": "16180:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2948,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2942,
															"src": "16193:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16209:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16201:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16201:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16201:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16193:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16180:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3000,
												"nodeType": "IfStatement",
												"src": "16176:573:11",
												"trueBody": {
													"id": 2999,
													"nodeType": "Block",
													"src": "16213:536:11",
													"statements": [
														{
															"assignments": [
																2956
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2956,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "16236:5:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2999,
																	"src": "16228:13:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2955,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16228:7:11",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2960,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2958,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2940,
																		"src": "16258:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2957,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3084,
																	"src": "16244:13:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16244:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16228:38:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2961,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "16415:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2964,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16431:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16423:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2962,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16423:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16423:10:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16415:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2967,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2956,
																			"src": "16454:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2968,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "16463:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16454:13:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16415:52:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16488:40:11",
																	"subExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2971,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2196,
																						"src": "16489:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 2972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16489:8:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 2973,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16498:17:11",
																				"memberName": "operatorApprovals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2165,
																				"src": "16489:26:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 2975,
																			"indexExpression": {
																				"id": 2974,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2956,
																				"src": "16516:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16489:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 2977,
																		"indexExpression": {
																			"id": 2976,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2942,
																			"src": "16523:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16489:39:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16415:113:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2987,
															"nodeType": "IfStatement",
															"src": "16393:233:11",
															"trueBody": {
																"id": 2986,
																"nodeType": "Block",
																"src": "16544:82:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2983,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2942,
																					"src": "16605:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2980,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2098,
																					"src": "16570:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 2982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16583:21:11",
																				"memberName": "ERC721InvalidApprover",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2082,
																				"src": "16570:34:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16570:40:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2985,
																		"nodeType": "RevertStatement",
																		"src": "16563:47:11"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2988,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2944,
																"src": "16646:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2998,
															"nodeType": "IfStatement",
															"src": "16642:96:11",
															"trueBody": {
																"id": 2997,
																"nodeType": "Block",
																"src": "16657:81:11",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2992,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2956,
																					"src": "16703:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2993,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2938,
																					"src": "16710:2:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2994,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2940,
																					"src": "16714:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2989,
																					"name": "ERC721Events",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2128,
																					"src": "16681:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Events_$2128_$",
																						"typeString": "type(library ERC721Events)"
																					}
																				},
																				"id": 2991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16694:8:11",
																				"memberName": "Approval",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2118,
																				"src": "16681:21:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2995,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16681:41:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2996,
																		"nodeType": "EmitStatement",
																		"src": "16676:46:11"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3001,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2196,
																	"src": "16761:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 3002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16761:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16770:14:11",
															"memberName": "tokenApprovals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2159,
															"src": "16761:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 3005,
														"indexExpression": {
															"id": 3004,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2940,
															"src": "16785:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16761:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3006,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2938,
														"src": "16796:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16761:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3008,
												"nodeType": "ExpressionStatement",
												"src": "16761:37:11"
											}
										]
									},
									"documentation": {
										"id": 2936,
										"nodeType": "StructuredDocumentation",
										"src": "15803:174:11",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 3010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15992:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2938,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16019:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "16011:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16040:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "16032:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16032:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16066:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "16058:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16058:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16086:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3010,
												"src": "16081:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16081:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16000:102:11"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16112:0:11"
									},
									"scope": 3154,
									"src": "15983:823:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3052,
										"nodeType": "Block",
										"src": "17144:259:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3020,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3015,
														"src": "17159:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17179:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17171:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3021,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17171:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17171:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17159:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3033,
												"nodeType": "IfStatement",
												"src": "17155:106:11",
												"trueBody": {
													"id": 3032,
													"nodeType": "Block",
													"src": "17183:78:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3029,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3015,
																		"src": "17240:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3026,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "17205:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17218:21:11",
																	"memberName": "ERC721InvalidOperator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2087,
																	"src": "17205:34:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 3030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17205:44:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3031,
															"nodeType": "RevertStatement",
															"src": "17198:51:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3034,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2196,
																		"src": "17271:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$2184_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 3035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17271:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$2184_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 3036,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17280:17:11",
																"memberName": "operatorApprovals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2165,
																"src": "17271:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 3038,
															"indexExpression": {
																"id": 3037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3013,
																"src": "17298:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17271:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3040,
														"indexExpression": {
															"id": 3039,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "17305:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17271:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3017,
														"src": "17317:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17271:54:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3043,
												"nodeType": "ExpressionStatement",
												"src": "17271:54:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3047,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3013,
															"src": "17369:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3048,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3015,
															"src": "17376:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3049,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3017,
															"src": "17386:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 3044,
															"name": "ERC721Events",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2128,
															"src": "17341:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Events_$2128_$",
																"typeString": "type(library ERC721Events)"
															}
														},
														"id": 3046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17354:14:11",
														"memberName": "ApprovalForAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2127,
														"src": "17341:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 3050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17341:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3051,
												"nodeType": "EmitStatement",
												"src": "17336:59:11"
											}
										]
									},
									"documentation": {
										"id": 3011,
										"nodeType": "StructuredDocumentation",
										"src": "16814:205:11",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 3053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "17034:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17071:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "17063:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17063:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17095:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "17087:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17087:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17119:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3053,
												"src": "17114:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17114:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17052:82:11"
									},
									"returnParameters": {
										"id": 3019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17144:0:11"
									},
									"scope": 3154,
									"src": "17025:378:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3083,
										"nodeType": "Block",
										"src": "17718:188:11",
										"statements": [
											{
												"assignments": [
													3062
												],
												"declarations": [
													{
														"constant": false,
														"id": 3062,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17737:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3083,
														"src": "17729:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3061,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17729:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3066,
												"initialValue": {
													"arguments": [
														{
															"id": 3064,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3056,
															"src": "17754:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3063,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "17745:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17745:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17729:33:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3067,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3062,
														"src": "17777:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17794:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17786:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3068,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17786:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 3071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17786:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17777:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3080,
												"nodeType": "IfStatement",
												"src": "17773:103:11",
												"trueBody": {
													"id": 3079,
													"nodeType": "Block",
													"src": "17798:78:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3076,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3056,
																		"src": "17856:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3073,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2098,
																		"src": "17820:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 3075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17833:22:11",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2051,
																	"src": "17820:35:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17820:44:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3078,
															"nodeType": "RevertStatement",
															"src": "17813:51:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3081,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3062,
													"src": "17893:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3060,
												"id": 3082,
												"nodeType": "Return",
												"src": "17886:12:11"
											}
										]
									},
									"documentation": {
										"id": 3054,
										"nodeType": "StructuredDocumentation",
										"src": "17411:229:11",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 3084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "17655:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17677:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "17669:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17669:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17668:17:11"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3084,
												"src": "17709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17708:9:11"
									},
									"scope": 3154,
									"src": "17646:260:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3152,
										"nodeType": "Block",
										"src": "18625:947:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 3098,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3091,
																"src": "18640:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18643:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "18640:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18648:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18640:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18657:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18640:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3151,
												"nodeType": "IfStatement",
												"src": "18636:929:11",
												"trueBody": {
													"id": 3150,
													"nodeType": "Block",
													"src": "18660:905:11",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 3128,
																		"nodeType": "Block",
																		"src": "18904:218:11",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 3119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3115,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3113,
																						"src": "18927:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 3116,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 17,
																								"src": "18937:15:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 3117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "18953:16:11",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "18937:32:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 3118,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "18970:8:11",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "18937:41:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "18927:51:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 3127,
																				"nodeType": "IfStatement",
																				"src": "18923:184:11",
																				"trueBody": {
																					"id": 3126,
																					"nodeType": "Block",
																					"src": "18980:127:11",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3123,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3091,
																										"src": "19084:2:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 3120,
																										"name": "ERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2098,
																										"src": "19049:12:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																											"typeString": "type(library ERC721Errors)"
																										}
																									},
																									"id": 3122,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "19062:21:11",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2070,
																									"src": "19049:34:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 3124,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19049:38:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 3125,
																							"nodeType": "RevertStatement",
																							"src": "19042:45:11"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3129,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3114,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3113,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "18896:6:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 3129,
																				"src": "18889:13:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 3112,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "18889:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "18888:15:11"
																	},
																	"src": "18880:242:11"
																},
																{
																	"block": {
																		"id": 3147,
																		"nodeType": "Block",
																		"src": "19151:403:11",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3136,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 3133,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3131,
																							"src": "19174:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 3134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19181:6:11",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19174:13:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 3135,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19191:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19174:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 3145,
																					"nodeType": "Block",
																					"src": "19344:195:11",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "19432:88:11",
																								"nodeType": "YulBlock",
																								"src": "19432:88:11",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "19470:2:11",
																															"nodeType": "YulLiteral",
																															"src": "19470:2:11",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "19474:6:11",
																															"nodeType": "YulIdentifier",
																															"src": "19474:6:11"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "19466:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "19466:3:11"
																													},
																													"nativeSrc": "19466:15:11",
																													"nodeType": "YulFunctionCall",
																													"src": "19466:15:11"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "19489:6:11",
																															"nodeType": "YulIdentifier",
																															"src": "19489:6:11"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "19483:5:11",
																														"nodeType": "YulIdentifier",
																														"src": "19483:5:11"
																													},
																													"nativeSrc": "19483:13:11",
																													"nodeType": "YulFunctionCall",
																													"src": "19483:13:11"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "19459:6:11",
																												"nodeType": "YulIdentifier",
																												"src": "19459:6:11"
																											},
																											"nativeSrc": "19459:38:11",
																											"nodeType": "YulFunctionCall",
																											"src": "19459:38:11"
																										},
																										"nativeSrc": "19459:38:11",
																										"nodeType": "YulExpressionStatement",
																										"src": "19459:38:11"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 3131,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19474:6:11",
																									"valueSize": 1
																								},
																								{
																									"declaration": 3131,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19489:6:11",
																									"valueSize": 1
																								}
																							],
																							"id": 3144,
																							"nodeType": "InlineAssembly",
																							"src": "19423:97:11"
																						}
																					]
																				},
																				"id": 3146,
																				"nodeType": "IfStatement",
																				"src": "19170:369:11",
																				"trueBody": {
																					"id": 3143,
																					"nodeType": "Block",
																					"src": "19194:144:11",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 3140,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3091,
																										"src": "19315:2:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 3137,
																										"name": "ERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2098,
																										"src": "19280:12:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$2098_$",
																											"typeString": "type(library ERC721Errors)"
																										}
																									},
																									"id": 3139,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "19293:21:11",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 2070,
																									"src": "19280:34:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 3141,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19280:38:11",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 3142,
																							"nodeType": "RevertStatement",
																							"src": "19273:45:11"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 3148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 3132,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 3131,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "19143:6:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 3148,
																				"src": "19130:19:11",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 3130,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "19130:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19129:21:11"
																	},
																	"src": "19123:431:11"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 3107,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3087,
																		"src": "18755:8:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3108,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3089,
																		"src": "18786:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3109,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3093,
																		"src": "18813:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 3110,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3095,
																		"src": "18843:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3104,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3091,
																				"src": "18712:2:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3103,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "18696:15:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18696:19:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$17",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 3106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18716:16:11",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "18696:36:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 3111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:170:11",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 3149,
															"nodeType": "TryStatement",
															"src": "18675:879:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3085,
										"nodeType": "StructuredDocumentation",
										"src": "17914:533:11",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address is doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 3153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "18462:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3087,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18502:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "18494:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18494:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18529:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "18521:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18521:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18552:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "18544:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18544:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3093,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18573:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "18565:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18565:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18604:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "18591:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18591:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18483:132:11"
									},
									"returnParameters": {
										"id": 3097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18625:0:11"
									},
									"scope": 3154,
									"src": "18453:1119:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3155,
							"src": "221:19354:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:19540:11"
				},
				"id": 11
			}
		}
	}
}