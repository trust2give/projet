{
	"id": "ed9c0ae3a3075c075b994f1c9ff28686",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/facets/MintFacet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport {LibERC721} from \"../libraries/LibERC721.sol\";\r\n\r\ncontract MintFacet {\r\n\r\n    function mint(address _to, uint256 _tokenId) external payable {\r\n        LibERC721._mint(_to, _tokenId);\r\n    }\r\n\r\n    function balanceOf() external view returns (uint) {\r\n        return address(this).balance;        \r\n    }\r\n\r\n    function safeMint(address _to, uint256 _tokenId) external payable {\r\n        LibERC721._mint(_to, _tokenId);\r\n    }\r\n\r\n    function burn(uint256 _tokenId) external {\r\n        LibERC721._burn(_tokenId);\r\n    }\r\n\r\n}"
			},
			"contracts/libraries/LibERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\nimport {ERC721Errors} from \"./Errors.sol\";\r\nimport {ERC721Events} from \"./Events.sol\";\r\n\r\nlibrary LibERC721 {\r\n    bytes32 internal constant STORAGE_SLOT =\r\n        keccak256(\"diamond.storage.erc721\");\r\n\r\n    struct Layout {\r\n        string name;\r\n        string symbol;\r\n        uint256[] allTokens;\r\n        mapping(uint256 tokenId => address) owners;\r\n        mapping(address owner => uint) balances;\r\n        mapping(uint256 tokenId => address) tokenApprovals;\r\n        mapping(address owner => mapping(address oprator => bool)) operatorApprovals;\r\n        mapping(address owner => mapping(uint256 index => uint256)) ownedTokens;\r\n        mapping(uint256 => uint256) ownedTokensIndex;\r\n        mapping(uint256 tokenId => uint256) allTokensIndex;\r\n        uint256[88] _gaps;\r\n    }\r\n\r\n    function layout() internal pure returns (Layout storage l) {\r\n        bytes32 slot = STORAGE_SLOT;\r\n        assembly {\r\n            l.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\r\n     *\r\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\r\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\r\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\r\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\r\n     */\r\n    function _ownerOf(uint256 tokenId) internal view returns (address) {\r\n        return layout().owners[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\r\n     */\r\n    function _getApproved(uint256 tokenId) internal view returns (address) {\r\n        return layout().tokenApprovals[tokenId];\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\r\n     * particular (ignoring whether it is owned by `owner`).\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _isAuthorized(\r\n        address owner,\r\n        address spender,\r\n        uint256 tokenId\r\n    ) internal view returns (bool) {\r\n        return\r\n            spender != address(0) &&\r\n            (owner == spender ||\r\n                layout().operatorApprovals[owner][spender] ||\r\n                _getApproved(tokenId) == spender);\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\r\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\r\n     * the `spender` for the specific `tokenId`.\r\n     *\r\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\r\n     * assumption.\r\n     */\r\n    function _checkAuthorized(\r\n        address owner,\r\n        address spender,\r\n        uint256 tokenId\r\n    ) internal view {\r\n        if (!_isAuthorized(owner, spender, tokenId)) {\r\n            if (owner == address(0)) {\r\n                revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n            } else {\r\n                revert ERC721Errors.ERC721InsufficientApproval(\r\n                    spender,\r\n                    tokenId\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\r\n     *\r\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\r\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\r\n     *\r\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\r\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\r\n     * remain consistent with one another.\r\n     */\r\n    function _increaseBalance(address account, uint128 amount) internal {\r\n        if (amount > 0) {\r\n            revert ERC721Errors.ERC721EnumerableForbiddenBatchMint();\r\n        }\r\n        unchecked {\r\n            layout().balances[account] += amount;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\r\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\r\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\r\n     */\r\n    function _update(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth\r\n    ) internal returns (address) {\r\n        address previousOwner = _ownerOf(tokenId);\r\n\r\n        // Perform (optional) operator check\r\n        if (auth != address(0)) {\r\n            _checkAuthorized(previousOwner, auth, tokenId);\r\n        }\r\n\r\n        // Execute the update\r\n        if (previousOwner != address(0)) {\r\n            // Clear approval. No need to re-authorize or emit the Approval event\r\n            _approve(address(0), tokenId, address(0), false);\r\n\r\n            unchecked {\r\n                layout().balances[previousOwner] -= 1;\r\n            }\r\n        }\r\n\r\n        if (to != address(0)) {\r\n            unchecked {\r\n                layout().balances[to] += 1;\r\n            }\r\n        }\r\n\r\n        layout().owners[tokenId] = to;\r\n\r\n        emit ERC721Events.Transfer(previousOwner, to, tokenId);\r\n\r\n        if (previousOwner == address(0)) {\r\n            _addTokenToAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _removeTokenFromOwnerEnumeration(previousOwner, tokenId);\r\n        }\r\n        if (to == address(0)) {\r\n            _removeTokenFromAllTokensEnumeration(tokenId);\r\n        } else if (previousOwner != to) {\r\n            _addTokenToOwnerEnumeration(to, tokenId);\r\n        }\r\n\r\n        return previousOwner;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\r\n     * @param to address representing the new owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\r\n     */\r\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {\r\n        uint256 length = layout().balances[to] - 1;\r\n        layout().ownedTokens[to][length] = tokenId;\r\n        layout().ownedTokensIndex[tokenId] = length;\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to add a token to this extension's token tracking data structures.\r\n     * @param tokenId uint256 ID of the token to be added to the tokens list\r\n     */\r\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {\r\n        layout().allTokensIndex[tokenId] = layout().allTokens.length;\r\n        layout().allTokens.push(tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\r\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\r\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\r\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\r\n     * @param from address representing the previous owner of the given token ID\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\r\n     */\r\n    function _removeTokenFromOwnerEnumeration(\r\n        address from,\r\n        uint256 tokenId\r\n    ) internal {\r\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = layout().balances[from];\r\n        uint256 tokenIndex = layout().ownedTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary\r\n        if (tokenIndex != lastTokenIndex) {\r\n            uint256 lastTokenId = layout().ownedTokens[from][lastTokenIndex];\r\n\r\n            layout().ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n            layout().ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n        }\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete layout().ownedTokensIndex[tokenId];\r\n        delete layout().ownedTokens[from][lastTokenIndex];\r\n    }\r\n\r\n        /**\r\n     * @dev Private function to remove a token from this extension's token tracking data structures.\r\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\r\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\r\n     */\r\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {\r\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\r\n        // then delete the last slot (swap and pop).\r\n\r\n        uint256 lastTokenIndex = layout().allTokens.length - 1;\r\n        uint256 tokenIndex = layout().allTokensIndex[tokenId];\r\n\r\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\r\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\r\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\r\n        uint256 lastTokenId = layout().allTokens[lastTokenIndex];\r\n\r\n        layout().allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\r\n        layout().allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\r\n\r\n        // This also deletes the contents at the last position of the array\r\n        delete layout().allTokensIndex[tokenId];\r\n        layout().allTokens.pop();\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId` and transfers it to `to`.\r\n     *\r\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - `to` cannot be the zero address.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _mint(address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner != address(0)) {\r\n            revert ERC721Errors.ERC721InvalidSender(address(0));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must not exist.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeMint(address to, uint256 tokenId) internal {\r\n        _safeMint(to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeMint(\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        _mint(to, tokenId);\r\n        checkOnERC721Received(msg.sender, address(0), to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `tokenId`.\r\n     * The approval is cleared when the token is burned.\r\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` must exist.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _burn(uint256 tokenId) internal {\r\n        address previousOwner = _update(address(0), tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers `tokenId` from `from` to `to`.\r\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - `tokenId` token must be owned by `from`.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _transfer(address from, address to, uint256 tokenId) internal {\r\n        if (to == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidReceiver(address(0));\r\n        }\r\n        address previousOwner = _update(to, tokenId, address(0));\r\n        if (previousOwner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        } else if (previousOwner != from) {\r\n            revert ERC721Errors.ERC721IncorrectOwner(\r\n                from,\r\n                tokenId,\r\n                previousOwner\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\r\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\r\n     *\r\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\r\n     *\r\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\r\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\r\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `tokenId` token must exist and be owned by `from`.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` cannot be the zero address.\r\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\r\n        _safeTransfer(from, to, tokenId, \"\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\r\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\r\n     */\r\n    function _safeTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        _transfer(from, to, tokenId);\r\n        checkOnERC721Received(msg.sender, from, to, tokenId, data);\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `to` to operate on `tokenId`\r\n     *\r\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\r\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\r\n     */\r\n    function _approve(address to, uint256 tokenId, address auth) internal {\r\n        _approve(to, tokenId, auth, true);\r\n    }\r\n\r\n    /**\r\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\r\n     * emitted in the context of transfers.\r\n     */\r\n    function _approve(\r\n        address to,\r\n        uint256 tokenId,\r\n        address auth,\r\n        bool emitEvent\r\n    ) internal {\r\n        // Avoid reading the owner unless necessary\r\n        if (emitEvent || auth != address(0)) {\r\n            address owner = _requireOwned(tokenId);\r\n\r\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\r\n            if (\r\n                auth != address(0) &&\r\n                owner != auth &&\r\n                !layout().operatorApprovals[owner][auth]\r\n            ) {\r\n                revert ERC721Errors.ERC721InvalidApprover(auth);\r\n            }\r\n\r\n            if (emitEvent) {\r\n                emit ERC721Events.Approval(owner, to, tokenId);\r\n            }\r\n        }\r\n\r\n        layout().tokenApprovals[tokenId] = to;\r\n    }\r\n\r\n    /**\r\n     * @dev Approve `operator` to operate on all of `owner` tokens\r\n     *\r\n     * Requirements:\r\n     * - operator can't be the address zero.\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     */\r\n    function _setApprovalForAll(\r\n        address owner,\r\n        address operator,\r\n        bool approved\r\n    ) internal {\r\n        if (operator == address(0)) {\r\n            revert ERC721Errors.ERC721InvalidOperator(operator);\r\n        }\r\n        layout().operatorApprovals[owner][operator] = approved;\r\n        emit ERC721Events.ApprovalForAll(owner, operator, approved);\r\n    }\r\n\r\n    /**\r\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\r\n     * Returns the owner.\r\n     *\r\n     * Overrides to ownership logic should be done to {_ownerOf}.\r\n     */\r\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\r\n        address owner = _ownerOf(tokenId);\r\n        if (owner == address(0)) {\r\n            revert ERC721Errors.ERC721NonexistentToken(tokenId);\r\n        }\r\n        return owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\r\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\r\n     *\r\n     * The acceptance call is not executed and treated as a no-op if the target address is doesn't contain code (i.e. an EOA).\r\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\r\n     * the transfer.\r\n     */\r\n    function checkOnERC721Received(\r\n        address operator,\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        bytes memory data\r\n    ) internal {\r\n        if (to.code.length > 0) {\r\n            try\r\n                IERC721Receiver(to).onERC721Received(\r\n                    operator,\r\n                    from,\r\n                    tokenId,\r\n                    data\r\n                )\r\n            returns (bytes4 retval) {\r\n                if (retval != IERC721Receiver.onERC721Received.selector) {\r\n                    // Token rejected\r\n                    revert ERC721Errors.ERC721InvalidReceiver(to);\r\n                }\r\n            } catch (bytes memory reason) {\r\n                if (reason.length == 0) {\r\n                    // non-IERC721Receiver implementer\r\n                    revert ERC721Errors.ERC721InvalidReceiver(to);\r\n                } else {\r\n                    /// @solidity memory-safe-assembly\r\n                    assembly {\r\n                        revert(add(32, reason), mload(reason))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"
			},
			"contracts/libraries/Events.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\r\n\r\npragma solidity ^0.8.18;\r\n\r\nlibrary ERC721Events {\r\n    /**\r\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\r\n     */\r\n    event Transfer(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\r\n     */\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed approved,\r\n        uint256 indexed tokenId\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\r\n     */\r\n    event ApprovalForAll(\r\n        address indexed owner,\r\n        address indexed operator,\r\n        bool approved\r\n    );\r\n}"
			},
			"contracts/libraries/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\r\npragma solidity ^0.8.18;\r\n\r\nlibrary ERC721Errors {\r\n    /**\r\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\r\n     * Used in balance queries.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721InvalidOwner(address owner);\r\n\r\n    /**\r\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721NonexistentToken(uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     * @param tokenId Identifier number of a token.\r\n     * @param owner Address of the current owner of a token.\r\n     */\r\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\r\n     * @param sender Address whose tokens are being transferred.\r\n     */\r\n    error ERC721InvalidSender(address sender);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\r\n     * @param receiver Address to which tokens are being transferred.\r\n     */\r\n    error ERC721InvalidReceiver(address receiver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     * @param tokenId Identifier number of a token.\r\n     */\r\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\r\n     * @param approver Address initiating an approval operation.\r\n     */\r\n    error ERC721InvalidApprover(address approver);\r\n\r\n    /**\r\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\r\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\r\n     */\r\n    error ERC721InvalidOperator(address operator);\r\n\r\n    /**\r\n     * @dev An `owner`'s token query was out of bounds for `index`.\r\n     *\r\n     * NOTE: The owner being `address(0)` indicates a global out of bounds index.\r\n     */\r\n    error ERC721OutOfBoundsIndex(address owner, uint256 index);\r\n\r\n    /**\r\n     * @dev Batch mint is not allowed.\r\n     */\r\n    error ERC721EnumerableForbiddenBatchMint();\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/facets/MintFacet.sol": {
				"MintFacet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/facets/MintFacet.sol\":118:591  contract MintFacet {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/facets/MintFacet.sol\":118:591  contract MintFacet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x722713f7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa1448194\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/facets/MintFacet.sol\":146:257  function mint(address _to, uint256 _tokenId) external payable {... */\n    tag_2:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/facets/MintFacet.sol\":501:586  function burn(uint256 _tokenId) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_10:\n      pop\n      tag_6\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n        /* \"contracts/facets/MintFacet.sol\":265:370  function balanceOf() external view returns (uint) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n        /* \"contracts/facets/MintFacet.sol\":333:354  address(this).balance */\n      selfbalance\n        /* \"contracts/facets/MintFacet.sol\":265:370  function balanceOf() external view returns (uint) {... */\n      mload(0x40)\n        /* \"#utility.yul\":802:827   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":790:792   */\n      0x20\n        /* \"#utility.yul\":775:793   */\n      add\n        /* \"contracts/facets/MintFacet.sol\":265:370  function balanceOf() external view returns (uint) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/facets/MintFacet.sol\":146:257  function mint(address _to, uint256 _tokenId) external payable {... */\n    tag_9:\n        /* \"contracts/facets/MintFacet.sol\":219:249  LibERC721._mint(_to, _tokenId) */\n      tag_24\n        /* \"contracts/facets/MintFacet.sol\":235:238  _to */\n      dup3\n        /* \"contracts/facets/MintFacet.sol\":240:248  _tokenId */\n      dup3\n        /* \"contracts/facets/MintFacet.sol\":219:234  LibERC721._mint */\n      tag_25\n        /* \"contracts/facets/MintFacet.sol\":219:249  LibERC721._mint(_to, _tokenId) */\n      jump\t// in\n    tag_24:\n        /* \"contracts/facets/MintFacet.sol\":146:257  function mint(address _to, uint256 _tokenId) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/facets/MintFacet.sol\":501:586  function burn(uint256 _tokenId) external {... */\n    tag_14:\n        /* \"contracts/facets/MintFacet.sol\":553:578  LibERC721._burn(_tokenId) */\n      tag_27\n        /* \"contracts/facets/MintFacet.sol\":569:577  _tokenId */\n      dup2\n        /* \"contracts/facets/MintFacet.sol\":553:568  LibERC721._burn */\n      tag_28\n        /* \"contracts/facets/MintFacet.sol\":553:578  LibERC721._burn(_tokenId) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/facets/MintFacet.sol\":501:586  function burn(uint256 _tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":10866:11227  function _mint(address to, uint256 tokenId) internal {... */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":10934:10950  to == address(0) */\n      dup3\n      and\n        /* \"contracts/libraries/LibERC721.sol\":10930:11032  if (to == address(0)) {... */\n      tag_33\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":10974:11020  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":11017:11018  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":10974:11020  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":984:1035   */\n      mstore\n        /* \"#utility.yul\":957:975   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10974:11020  ERC721Errors.ERC721InvalidReceiver(address(0)) */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/libraries/LibERC721.sol\":10930:11032  if (to == address(0)) {... */\n    tag_33:\n        /* \"contracts/libraries/LibERC721.sol\":11042:11063  address previousOwner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":11066:11098  _update(to, tokenId, address(0)) */\n      tag_36\n        /* \"contracts/libraries/LibERC721.sol\":11074:11076  to */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":11078:11085  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":11095:11096  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":11066:11073  _update */\n      tag_37\n        /* \"contracts/libraries/LibERC721.sol\":11066:11098  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_36:\n        /* \"contracts/libraries/LibERC721.sol\":11042:11098  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":11113:11140  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":11109:11220  if (previousOwner != address(0)) {... */\n      tag_38\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":11164:11208  ERC721Errors.ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":11205:11206  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":11164:11208  ERC721Errors.ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":984:1035   */\n      mstore\n        /* \"#utility.yul\":957:975   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":11164:11208  ERC721Errors.ERC721InvalidSender(address(0)) */\n      tag_34\n        /* \"#utility.yul\":838:1041   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":11109:11220  if (previousOwner != address(0)) {... */\n    tag_38:\n        /* \"contracts/libraries/LibERC721.sol\":10919:11227  {... */\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":10866:11227  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":12480:12725  function _burn(uint256 tokenId) internal {... */\n    tag_28:\n        /* \"contracts/libraries/LibERC721.sol\":12532:12553  address previousOwner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":12556:12596  _update(address(0), tokenId, address(0)) */\n      tag_41\n        /* \"contracts/libraries/LibERC721.sol\":12572:12573  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":12576:12583  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":12593:12594  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":12556:12563  _update */\n      tag_37\n        /* \"contracts/libraries/LibERC721.sol\":12556:12596  _update(address(0), tokenId, address(0)) */\n      jump\t// in\n    tag_41:\n        /* \"contracts/libraries/LibERC721.sol\":12532:12596  address previousOwner = _update(address(0), tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":12611:12638  previousOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/LibERC721.sol\":12607:12718  if (previousOwner == address(0)) {... */\n      tag_24\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":12662:12706  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":802:827   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":775:793   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":12662:12706  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      tag_34\n        /* \"#utility.yul\":656:833   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":5106:6475  function _update(... */\n    tag_37:\n        /* \"contracts/libraries/LibERC721.sol\":5218:5225  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5238:5259  address previousOwner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5262:5279  _ownerOf(tokenId) */\n      tag_45\n        /* \"contracts/libraries/LibERC721.sol\":5271:5278  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5262:5270  _ownerOf */\n      tag_46\n        /* \"contracts/libraries/LibERC721.sol\":5262:5279  _ownerOf(tokenId) */\n      jump\t// in\n    tag_45:\n        /* \"contracts/libraries/LibERC721.sol\":5238:5279  address previousOwner = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5342:5360  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5338:5435  if (auth != address(0)) {... */\n      tag_48\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5377:5423  _checkAuthorized(previousOwner, auth, tokenId) */\n      tag_48\n        /* \"contracts/libraries/LibERC721.sol\":5394:5407  previousOwner */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":5409:5413  auth */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5415:5422  tokenId */\n      dup7\n        /* \"contracts/libraries/LibERC721.sol\":5377:5393  _checkAuthorized */\n      tag_49\n        /* \"contracts/libraries/LibERC721.sol\":5377:5423  _checkAuthorized(previousOwner, auth, tokenId) */\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5482:5509  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5478:5767  if (previousOwner != address(0)) {... */\n      tag_50\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5609:5657  _approve(address(0), tokenId, address(0), false) */\n      tag_51\n        /* \"contracts/libraries/LibERC721.sol\":5626:5627  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5630:5637  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":5647:5648  0 */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5651:5656  false */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":5609:5617  _approve */\n      tag_52\n        /* \"contracts/libraries/LibERC721.sol\":5609:5657  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_51:\n        /* \"contracts/libraries/LibERC721.sol\":5739:5740  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":5703:5711  layout() */\n      tag_53\n        /* \"contracts/libraries/LibERC721.sol\":5703:5709  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":5703:5711  layout() */\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5703:5735  layout().balances[previousOwner] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5703:5720  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5703:5735  layout().balances[previousOwner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5703:5740  layout().balances[previousOwner] -= 1 */\n      dup1\n      sload\n      swap2\n      swap1\n      swap2\n      sub\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5478:5767  if (previousOwner != address(0)) {... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5783:5799  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":5779:5898  if (to != address(0)) {... */\n      tag_55\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":5870:5871  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":5845:5853  layout() */\n      tag_56\n        /* \"contracts/libraries/LibERC721.sol\":5845:5851  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":5845:5853  layout() */\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":5845:5866  layout().balances[to] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5845:5862  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5845:5866  layout().balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5845:5871  layout().balances[to] += 1 */\n      dup1\n      sload\n      swap1\n      swap2\n      add\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5779:5898  if (to != address(0)) {... */\n    tag_55:\n        /* \"contracts/libraries/LibERC721.sol\":5937:5939  to */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":5910:5918  layout() */\n      tag_57\n        /* \"contracts/libraries/LibERC721.sol\":5910:5916  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":5910:5918  layout() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":5910:5925  layout().owners */\n      0x03\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":5910:5939  layout().owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      mload\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      dup7\n      swap3\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      dup9\n      dup2\n      and\n      swap3\n      swap1\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"contracts/libraries/LibERC721.sol\":5910:5934  layout().owners[tokenId] */\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":5957:6006  ERC721Events.Transfer(previousOwner, to, tokenId) */\n      log4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6023:6050  previousOwner == address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6019:6233  if (previousOwner == address(0)) {... */\n      tag_58\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6067:6107  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_59\n        /* \"contracts/libraries/LibERC721.sol\":6099:6106  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":6067:6098  _addTokenToAllTokensEnumeration */\n      tag_60\n        /* \"contracts/libraries/LibERC721.sol\":6067:6107  _addTokenToAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/libraries/LibERC721.sol\":6019:6233  if (previousOwner == address(0)) {... */\n      jump(tag_63)\n    tag_58:\n        /* \"contracts/libraries/LibERC721.sol\":6146:6148  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6129:6148  previousOwner != to */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6129:6142  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6129:6148  previousOwner != to */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":6125:6233  if (previousOwner != to) {... */\n      tag_63\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6165:6221  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      tag_63\n        /* \"contracts/libraries/LibERC721.sol\":6198:6211  previousOwner */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":6213:6220  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6165:6197  _removeTokenFromOwnerEnumeration */\n      tag_64\n        /* \"contracts/libraries/LibERC721.sol\":6165:6221  _removeTokenFromOwnerEnumeration(previousOwner, tokenId) */\n      jump\t// in\n    tag_63:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6247:6263  to == address(0) */\n      dup6\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6243:6435  if (to == address(0)) {... */\n      tag_65\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6280:6325  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_66\n        /* \"contracts/libraries/LibERC721.sol\":6317:6324  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":6280:6316  _removeTokenFromAllTokensEnumeration */\n      tag_67\n        /* \"contracts/libraries/LibERC721.sol\":6280:6325  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/libraries/LibERC721.sol\":6243:6435  if (to == address(0)) {... */\n      jump(tag_70)\n    tag_65:\n        /* \"contracts/libraries/LibERC721.sol\":6364:6366  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6347:6366  previousOwner != to */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":6347:6360  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6347:6366  previousOwner != to */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":6343:6435  if (previousOwner != to) {... */\n      tag_70\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":6383:6423  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_70\n        /* \"contracts/libraries/LibERC721.sol\":6411:6413  to */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6415:6422  tokenId */\n      dup6\n        /* \"contracts/libraries/LibERC721.sol\":6383:6410  _addTokenToOwnerEnumeration */\n      tag_71\n        /* \"contracts/libraries/LibERC721.sol\":6383:6423  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n    tag_70:\n        /* \"contracts/libraries/LibERC721.sol\":6454:6467  previousOwner */\n      swap5\n        /* \"contracts/libraries/LibERC721.sol\":5106:6475  function _update(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":1612:1729  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n    tag_46:\n        /* \"contracts/libraries/LibERC721.sol\":1670:1677  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":1697:1705  layout() */\n      tag_73\n        /* \"contracts/libraries/LibERC721.sol\":1697:1703  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":1697:1705  layout() */\n      jump\t// in\n    tag_73:\n        /* \"contracts/libraries/LibERC721.sol\":1697:1721  layout().owners[tokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":1697:1712  layout().owners */\n      0x03\n      add\n        /* \"contracts/libraries/LibERC721.sol\":1697:1721  layout().owners[tokenId] */\n      0x20\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":1612:1729  function _ownerOf(uint256 tokenId) internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":3089:3578  function _checkAuthorized(... */\n    tag_49:\n        /* \"contracts/libraries/LibERC721.sol\":3228:3266  _isAuthorized(owner, spender, tokenId) */\n      tag_75\n        /* \"contracts/libraries/LibERC721.sol\":3242:3247  owner */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3249:3256  spender */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3258:3265  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":3228:3241  _isAuthorized */\n      tag_76\n        /* \"contracts/libraries/LibERC721.sol\":3228:3266  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_75:\n        /* \"contracts/libraries/LibERC721.sol\":3223:3571  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_38\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":3287:3306  owner == address(0) */\n      dup4\n      and\n        /* \"contracts/libraries/LibERC721.sol\":3283:3560  if (owner == address(0)) {... */\n      tag_78\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":3334:3378  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":802:827   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":775:793   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":3334:3378  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      tag_34\n        /* \"#utility.yul\":656:833   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":3283:3560  if (owner == address(0)) {... */\n    tag_78:\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1238:1270   */\n      dup4\n      and\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1220:1271   */\n      mstore\n        /* \"#utility.yul\":1287:1305   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1280:1314   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1193:1211   */\n      0x44\n      add\n        /* \"contracts/libraries/LibERC721.sol\":3426:3544  ERC721Errors.ERC721InsufficientApproval(... */\n      tag_34\n        /* \"#utility.yul\":1046:1320   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":15983:16806  function _approve(... */\n    tag_52:\n        /* \"contracts/libraries/LibERC721.sol\":16180:16189  emitEvent */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":16180:16211  emitEvent || auth != address(0) */\n      dup1\n      tag_84\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16193:16211  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16180:16211  emitEvent || auth != address(0) */\n    tag_84:\n        /* \"contracts/libraries/LibERC721.sol\":16176:16749  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_85\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16228:16241  address owner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":16244:16266  _requireOwned(tokenId) */\n      tag_86\n        /* \"contracts/libraries/LibERC721.sol\":16258:16265  tokenId */\n      dup5\n        /* \"contracts/libraries/LibERC721.sol\":16244:16257  _requireOwned */\n      tag_87\n        /* \"contracts/libraries/LibERC721.sol\":16244:16266  _requireOwned(tokenId) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/libraries/LibERC721.sol\":16228:16266  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16415:16433  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":16415:16467  auth != address(0) &&... */\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16463:16467  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16454:16467  owner != auth */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16454:16459  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16454:16467  owner != auth */\n      and\n      eq\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16415:16467  auth != address(0) &&... */\n    tag_88:\n        /* \"contracts/libraries/LibERC721.sol\":16415:16528  auth != address(0) &&... */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16489:16497  layout() */\n      tag_90\n        /* \"contracts/libraries/LibERC721.sol\":16489:16495  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":16489:16497  layout() */\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16489:16522  layout().operatorApprovals[owner] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":16489:16515  layout().operatorApprovals */\n      0x06\n      swap3\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16489:16522  layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":16489:16528  layout().operatorApprovals[owner][auth] */\n      swap3\n      dup8\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16488:16528  !layout().operatorApprovals[owner][auth] */\n      iszero\n        /* \"contracts/libraries/LibERC721.sol\":16415:16528  auth != address(0) &&... */\n    tag_89:\n        /* \"contracts/libraries/LibERC721.sol\":16393:16626  if (... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1002:1034   */\n      dup5\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":984:1035   */\n      mstore\n        /* \"#utility.yul\":957:975   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16570:16610  ERC721Errors.ERC721InvalidApprover(auth) */\n      tag_34\n        /* \"#utility.yul\":838:1041   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":16393:16626  if (... */\n    tag_91:\n        /* \"contracts/libraries/LibERC721.sol\":16646:16655  emitEvent */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":16642:16738  if (emitEvent) {... */\n      iszero\n      tag_93\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":16714:16721  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":16710:16712  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16681:16722  ERC721Events.Approval(owner, to, tokenId) */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":16703:16708  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":16681:16722  ERC721Events.Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/libraries/LibERC721.sol\":16642:16738  if (emitEvent) {... */\n    tag_93:\n        /* \"contracts/libraries/LibERC721.sol\":16213:16749  {... */\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":16176:16749  if (emitEvent || auth != address(0)) {... */\n    tag_85:\n        /* \"contracts/libraries/LibERC721.sol\":16796:16798  to */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":16761:16769  layout() */\n      tag_94\n        /* \"contracts/libraries/LibERC721.sol\":16761:16767  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":16761:16769  layout() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/libraries/LibERC721.sol\":16761:16793  layout().tokenApprovals[tokenId] */\n      0x00\n      swap5\n      dup6\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":16761:16784  layout().tokenApprovals */\n      0x05\n      add\n        /* \"contracts/libraries/LibERC721.sol\":16761:16793  layout().tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":16761:16798  layout().tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":15983:16806  function _approve(... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":923:1087  function layout() internal pure returns (Layout storage l) {... */\n    tag_54:\n        /* \"contracts/libraries/LibERC721.sol\":296:331  keccak256(\"diamond.storage.erc721\") */\n      0xf2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":923:1087  function layout() internal pure returns (Layout storage l) {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":7220:7409  function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {... */\n    tag_60:\n        /* \"contracts/libraries/LibERC721.sol\":7333:7341  layout() */\n      tag_97\n        /* \"contracts/libraries/LibERC721.sol\":7333:7339  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":7333:7341  layout() */\n      jump\t// in\n    tag_97:\n        /* \"contracts/libraries/LibERC721.sol\":7333:7351  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7333:7358  layout().allTokens.length */\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":7298:7306  layout() */\n      tag_98\n        /* \"contracts/libraries/LibERC721.sol\":7298:7304  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":7298:7306  layout() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/libraries/LibERC721.sol\":7298:7330  layout().allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":7298:7321  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7298:7330  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":7298:7358  layout().allTokensIndex[tokenId] = layout().allTokens.length */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":7369:7377  layout() */\n      tag_99\n        /* \"contracts/libraries/LibERC721.sol\":7369:7375  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":7369:7377  layout() */\n      jump\t// in\n    tag_99:\n        /* \"contracts/libraries/LibERC721.sol\":7369:7387  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":7369:7401  layout().allTokens.push(tokenId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":7220:7409  function _addTokenToAllTokensEnumeration(uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":8036:9095  function _removeTokenFromOwnerEnumeration(... */\n    tag_64:\n        /* \"contracts/libraries/LibERC721.sol\":8328:8350  uint256 lastTokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":8353:8361  layout() */\n      tag_102\n        /* \"contracts/libraries/LibERC721.sol\":8353:8359  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8353:8361  layout() */\n      jump\t// in\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8353:8376  layout().balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8353:8370  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8353:8376  layout().balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap2\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8408:8416  layout() */\n      tag_103\n        /* \"contracts/libraries/LibERC721.sol\":8408:8414  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8408:8416  layout() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/libraries/LibERC721.sol\":8408:8442  layout().ownedTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8408:8433  layout().ownedTokensIndex */\n      0x08\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8408:8442  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8549:8577  tokenIndex != lastTokenIndex */\n      dup2\n      dup2\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":8545:8897  if (tokenIndex != lastTokenIndex) {... */\n      tag_104\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":8594:8613  uint256 lastTokenId */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":8616:8624  layout() */\n      tag_105\n        /* \"contracts/libraries/LibERC721.sol\":8616:8622  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8616:8624  layout() */\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8616:8642  layout().ownedTokens[from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8616:8636  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8616:8642  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8616:8658  layout().ownedTokens[from][lastTokenIndex] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n      pop\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":8675:8683  layout() */\n      tag_106\n        /* \"contracts/libraries/LibERC721.sol\":8675:8681  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8675:8683  layout() */\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":8675:8701  layout().ownedTokens[from] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8675:8695  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8675:8701  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8675:8713  layout().ownedTokens[from][tokenIndex] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8675:8727  layout().ownedTokens[from][tokenIndex] = lastTokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":8702:8712  tokenIndex */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":8800:8808  layout() */\n      tag_107\n        /* \"contracts/libraries/LibERC721.sol\":8800:8806  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8800:8808  layout() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/libraries/LibERC721.sol\":8800:8838  layout().ownedTokensIndex[lastTokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8800:8825  layout().ownedTokensIndex */\n      0x08\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8800:8838  layout().ownedTokensIndex[lastTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8800:8851  layout().ownedTokensIndex[lastTokenId] = tokenIndex */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":8545:8897  if (tokenIndex != lastTokenIndex) {... */\n    tag_104:\n        /* \"contracts/libraries/LibERC721.sol\":8993:9001  layout() */\n      tag_108\n        /* \"contracts/libraries/LibERC721.sol\":8993:8999  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":8993:9001  layout() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/libraries/LibERC721.sol\":8993:9027  layout().ownedTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":8993:9018  layout().ownedTokensIndex */\n      0x08\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":8993:9027  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":8986:9027  delete layout().ownedTokensIndex[tokenId] */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":9045:9053  layout() */\n      tag_109\n        /* \"contracts/libraries/LibERC721.sol\":9045:9051  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":9045:9053  layout() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":9045:9071  layout().ownedTokens[from] */\n      swap1\n      swap5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":9045:9065  layout().ownedTokens */\n      0x07\n      swap5\n      swap1\n      swap5\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9045:9071  layout().ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":9045:9087  layout().ownedTokens[from][lastTokenIndex] */\n      swap4\n      dup7\n      mstore\n      swap3\n      swap1\n      mstore\n      pop\n      dup3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":9038:9087  delete layout().ownedTokens[from][lastTokenIndex] */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":8036:9095  function _removeTokenFromOwnerEnumeration(... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":9394:10530  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {... */\n    tag_67:\n        /* \"contracts/libraries/LibERC721.sol\":9648:9670  uint256 lastTokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":9701:9702  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":9673:9681  layout() */\n      tag_111\n        /* \"contracts/libraries/LibERC721.sol\":9673:9679  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":9673:9681  layout() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/libraries/LibERC721.sol\":9673:9691  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9673:9698  layout().allTokens.length */\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":9673:9702  layout().allTokens.length - 1 */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"contracts/libraries/LibERC721.sol\":9648:9702  uint256 lastTokenIndex = layout().allTokens.length - 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":9713:9731  uint256 tokenIndex */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":9734:9742  layout() */\n      tag_114\n        /* \"contracts/libraries/LibERC721.sol\":9734:9740  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":9734:9742  layout() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/libraries/LibERC721.sol\":9734:9766  layout().allTokensIndex[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":9734:9757  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":9734:9766  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap2\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":10115:10123  layout() */\n      tag_115\n        /* \"contracts/libraries/LibERC721.sol\":10115:10121  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":10115:10123  layout() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/libraries/LibERC721.sol\":10115:10133  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10134:10148  lastTokenIndex */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":10115:10149  layout().allTokens[lastTokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_117\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":10093:10149  uint256 lastTokenId = layout().allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":10195:10206  lastTokenId */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":10162:10170  layout() */\n      tag_120\n        /* \"contracts/libraries/LibERC721.sol\":10162:10168  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":10162:10170  layout() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/libraries/LibERC721.sol\":10162:10180  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10181:10191  tokenIndex */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":10162:10192  layout().allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_122\n      jumpi\n      tag_122\n      tag_118\n      jump\t// in\n    tag_122:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10162:10206  layout().allTokens[tokenIndex] = lastTokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10314:10324  tokenIndex */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":10275:10283  layout() */\n      tag_124\n        /* \"contracts/libraries/LibERC721.sol\":10275:10281  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":10275:10283  layout() */\n      jump\t// in\n    tag_124:\n        /* \"contracts/libraries/LibERC721.sol\":10275:10311  layout().allTokensIndex[lastTokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":10275:10298  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10275:10311  layout().allTokensIndex[lastTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":10275:10324  layout().allTokensIndex[lastTokenId] = tokenIndex */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10455:10463  layout() */\n      tag_125\n        /* \"contracts/libraries/LibERC721.sol\":10455:10461  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":10455:10463  layout() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/libraries/LibERC721.sol\":10455:10487  layout().allTokensIndex[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":10455:10478  layout().allTokensIndex */\n      0x09\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10455:10487  layout().allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":10448:10487  delete layout().allTokensIndex[tokenId] */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":10498:10506  layout() */\n      tag_126\n        /* \"contracts/libraries/LibERC721.sol\":10498:10504  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":10498:10506  layout() */\n      jump\t// in\n    tag_126:\n        /* \"contracts/libraries/LibERC721.sol\":10498:10516  layout().allTokens */\n      0x02\n      add\n        /* \"contracts/libraries/LibERC721.sol\":10498:10522  layout().allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_128\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":9466:10530  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":9394:10530  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":6776:7019  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {... */\n    tag_71:\n        /* \"contracts/libraries/LibERC721.sol\":6862:6876  uint256 length */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":6903:6904  1 */\n      0x01\n        /* \"contracts/libraries/LibERC721.sol\":6879:6887  layout() */\n      tag_132\n        /* \"contracts/libraries/LibERC721.sol\":6879:6885  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":6879:6887  layout() */\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6879:6900  layout().balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6879:6896  layout().balances */\n      0x04\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6879:6900  layout().balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/libraries/LibERC721.sol\":6879:6904  layout().balances[to] - 1 */\n      tag_133\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_133:\n        /* \"contracts/libraries/LibERC721.sol\":6862:6904  uint256 length = layout().balances[to] - 1 */\n      swap1\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":6950:6957  tokenId */\n      dup2\n        /* \"contracts/libraries/LibERC721.sol\":6915:6923  layout() */\n      tag_134\n        /* \"contracts/libraries/LibERC721.sol\":6915:6921  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":6915:6923  layout() */\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":6915:6939  layout().ownedTokens[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6915:6935  layout().ownedTokens */\n      0x07\n      swap2\n      swap1\n      swap2\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6915:6939  layout().ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6915:6947  layout().ownedTokens[to][length] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6915:6957  layout().ownedTokens[to][length] = tokenId */\n      sstore\n        /* \"contracts/libraries/LibERC721.sol\":6940:6946  length */\n      dup1\n        /* \"contracts/libraries/LibERC721.sol\":6968:6976  layout() */\n      tag_135\n        /* \"contracts/libraries/LibERC721.sol\":6968:6974  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":6968:6976  layout() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/libraries/LibERC721.sol\":6968:7002  layout().ownedTokensIndex[tokenId] */\n      0x00\n      swap4\n      dup5\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":6968:6993  layout().ownedTokensIndex */\n      0x08\n      add\n        /* \"contracts/libraries/LibERC721.sol\":6968:7002  layout().ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":6968:7011  layout().ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":6776:7019  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) internal {... */\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":2299:2645  function _isAuthorized(... */\n    tag_76:\n        /* \"contracts/libraries/LibERC721.sol\":2428:2432  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2465:2486  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":2465:2637  spender != address(0) &&... */\n      tag_70\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2513:2520  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2504:2520  owner == spender */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2504:2509  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2504:2520  owner == spender */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":2504:2583  owner == spender ||... */\n      dup1\n      tag_138\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2541:2549  layout() */\n      tag_139\n        /* \"contracts/libraries/LibERC721.sol\":2541:2547  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":2541:2549  layout() */\n      jump\t// in\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2541:2574  layout().operatorApprovals[owner] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":2541:2567  layout().operatorApprovals */\n      0x06\n      swap3\n      swap1\n      swap3\n      add\n        /* \"contracts/libraries/LibERC721.sol\":2541:2574  layout().operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/libraries/LibERC721.sol\":2541:2583  layout().operatorApprovals[owner][spender] */\n      swap3\n      dup8\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2504:2583  owner == spender ||... */\n    tag_138:\n        /* \"contracts/libraries/LibERC721.sol\":2504:2636  owner == spender ||... */\n      dup1\n      tag_70\n      jumpi\n      pop\n        /* \"contracts/libraries/LibERC721.sol\":2629:2636  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2604:2636  _getApproved(tokenId) == spender */\n      and\n        /* \"contracts/libraries/LibERC721.sol\":2604:2625  _getApproved(tokenId) */\n      tag_141\n        /* \"contracts/libraries/LibERC721.sol\":2617:2624  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":2604:2616  _getApproved */\n      tag_142\n        /* \"contracts/libraries/LibERC721.sol\":2604:2625  _getApproved(tokenId) */\n      jump\t// in\n    tag_141:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":2604:2636  _getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"contracts/libraries/LibERC721.sol\":2445:2637  return... */\n      swap5\n        /* \"contracts/libraries/LibERC721.sol\":2299:2645  function _isAuthorized(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":17646:17906  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_87:\n        /* \"contracts/libraries/LibERC721.sol\":17709:17716  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":17729:17742  address owner */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":17745:17762  _ownerOf(tokenId) */\n      tag_144\n        /* \"contracts/libraries/LibERC721.sol\":17754:17761  tokenId */\n      dup4\n        /* \"contracts/libraries/LibERC721.sol\":17745:17753  _ownerOf */\n      tag_46\n        /* \"contracts/libraries/LibERC721.sol\":17745:17762  _ownerOf(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/libraries/LibERC721.sol\":17729:17762  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/libraries/LibERC721.sol\":17777:17796  owner == address(0) */\n      dup2\n      and\n        /* \"contracts/libraries/LibERC721.sol\":17773:17876  if (owner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"contracts/libraries/LibERC721.sol\":17820:17864  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":802:827   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":775:793   */\n      0x24\n      add\n        /* \"contracts/libraries/LibERC721.sol\":17820:17864  ERC721Errors.ERC721NonexistentToken(tokenId) */\n      tag_34\n        /* \"#utility.yul\":656:833   */\n      jump\n        /* \"contracts/libraries/LibERC721.sol\":17773:17876  if (owner == address(0)) {... */\n    tag_145:\n        /* \"contracts/libraries/LibERC721.sol\":17893:17898  owner */\n      swap3\n        /* \"contracts/libraries/LibERC721.sol\":17646:17906  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/LibERC721.sol\":1850:1979  function _getApproved(uint256 tokenId) internal view returns (address) {... */\n    tag_142:\n        /* \"contracts/libraries/LibERC721.sol\":1912:1919  address */\n      0x00\n        /* \"contracts/libraries/LibERC721.sol\":1939:1947  layout() */\n      tag_148\n        /* \"contracts/libraries/LibERC721.sol\":1939:1945  layout */\n      tag_54\n        /* \"contracts/libraries/LibERC721.sol\":1939:1947  layout() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/libraries/LibERC721.sol\":1939:1971  layout().tokenApprovals[tokenId] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"contracts/libraries/LibERC721.sol\":1939:1962  layout().tokenApprovals */\n      0x05\n      add\n        /* \"contracts/libraries/LibERC721.sol\":1939:1971  layout().tokenApprovals[tokenId] */\n      0x20\n      mstore\n      pop\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/libraries/LibERC721.sol\":1850:1979  function _getApproved(uint256 tokenId) internal view returns (address) {... */\n      jump\t// out\n        /* \"#utility.yul\":14:420   */\n    tag_8:\n        /* \"#utility.yul\":82:88   */\n      0x00\n        /* \"#utility.yul\":90:96   */\n      0x00\n        /* \"#utility.yul\":143:145   */\n      0x40\n        /* \"#utility.yul\":131:140   */\n      dup4\n        /* \"#utility.yul\":122:129   */\n      dup6\n        /* \"#utility.yul\":118:141   */\n      sub\n        /* \"#utility.yul\":114:146   */\n      slt\n        /* \"#utility.yul\":111:163   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":159:160   */\n      0x00\n        /* \"#utility.yul\":156:157   */\n      0x00\n        /* \"#utility.yul\":149:161   */\n      revert\n        /* \"#utility.yul\":111:163   */\n    tag_151:\n        /* \"#utility.yul\":185:208   */\n      dup3\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":237:268   */\n      dup2\n      and\n        /* \"#utility.yul\":227:269   */\n      dup2\n      eq\n        /* \"#utility.yul\":217:287   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":283:284   */\n      0x00\n        /* \"#utility.yul\":280:281   */\n      0x00\n        /* \"#utility.yul\":273:285   */\n      revert\n        /* \"#utility.yul\":217:287   */\n    tag_152:\n        /* \"#utility.yul\":306:311   */\n      swap5\n        /* \"#utility.yul\":384:386   */\n      0x20\n        /* \"#utility.yul\":369:387   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":356:388   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:420   */\n      jump\t// out\n        /* \"#utility.yul\":425:651   */\n    tag_13:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":537:539   */\n      0x20\n        /* \"#utility.yul\":525:534   */\n      dup3\n        /* \"#utility.yul\":516:523   */\n      dup5\n        /* \"#utility.yul\":512:535   */\n      sub\n        /* \"#utility.yul\":508:540   */\n      slt\n        /* \"#utility.yul\":505:557   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":553:554   */\n      0x00\n        /* \"#utility.yul\":550:551   */\n      0x00\n        /* \"#utility.yul\":543:555   */\n      revert\n        /* \"#utility.yul\":505:557   */\n    tag_154:\n      pop\n        /* \"#utility.yul\":598:621   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":425:651   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1325:1550   */\n    tag_113:\n        /* \"#utility.yul\":1392:1401   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1413:1424   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1410:1544   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1466:1476   */\n      0x4e487b71\n        /* \"#utility.yul\":1461:1464   */\n      0xe0\n        /* \"#utility.yul\":1457:1477   */\n      shl\n        /* \"#utility.yul\":1454:1455   */\n      0x00\n        /* \"#utility.yul\":1447:1478   */\n      mstore\n        /* \"#utility.yul\":1501:1505   */\n      0x11\n        /* \"#utility.yul\":1498:1499   */\n      0x04\n        /* \"#utility.yul\":1491:1506   */\n      mstore\n        /* \"#utility.yul\":1529:1533   */\n      0x24\n        /* \"#utility.yul\":1526:1527   */\n      0x00\n        /* \"#utility.yul\":1519:1534   */\n      revert\n        /* \"#utility.yul\":1555:1682   */\n    tag_118:\n        /* \"#utility.yul\":1616:1626   */\n      0x4e487b71\n        /* \"#utility.yul\":1611:1614   */\n      0xe0\n        /* \"#utility.yul\":1607:1627   */\n      shl\n        /* \"#utility.yul\":1604:1605   */\n      0x00\n        /* \"#utility.yul\":1597:1628   */\n      mstore\n        /* \"#utility.yul\":1647:1651   */\n      0x32\n        /* \"#utility.yul\":1644:1645   */\n      0x04\n        /* \"#utility.yul\":1637:1652   */\n      mstore\n        /* \"#utility.yul\":1671:1675   */\n      0x24\n        /* \"#utility.yul\":1668:1669   */\n      0x00\n        /* \"#utility.yul\":1661:1676   */\n      revert\n        /* \"#utility.yul\":1687:1814   */\n    tag_129:\n        /* \"#utility.yul\":1748:1758   */\n      0x4e487b71\n        /* \"#utility.yul\":1743:1746   */\n      0xe0\n        /* \"#utility.yul\":1739:1759   */\n      shl\n        /* \"#utility.yul\":1736:1737   */\n      0x00\n        /* \"#utility.yul\":1729:1760   */\n      mstore\n        /* \"#utility.yul\":1779:1783   */\n      0x31\n        /* \"#utility.yul\":1776:1777   */\n      0x04\n        /* \"#utility.yul\":1769:1784   */\n      mstore\n        /* \"#utility.yul\":1803:1807   */\n      0x24\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1793:1808   */\n      revert\n\n    auxdata: 0xa264697066735822122044970c2beef576ce75e1369d601c7c88e1437d7020be77fc793beebc682190df64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061095a8061001c5f395ff3fe60806040526004361061003e575f3560e01c806340c10f191461004257806342966c6814610057578063722713f714610076578063a144819414610042575b5f5ffd5b610055610050366004610891565b610095565b005b348015610062575f5ffd5b506100556100713660046108c6565b6100a3565b348015610081575f5ffd5b504760405190815260200160405180910390f35b61009f82826100af565b5050565b6100ac8161011a565b50565b6001600160a01b0382166100dd57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6100e983835f610152565b90506001600160a01b03811615610115576040516339e3563760e11b81525f60048201526024016100d4565b505050565b5f6101265f835f610152565b90506001600160a01b03811661009f57604051637e27328960e01b8152600481018390526024016100d4565b5f5f61015d846102e8565b90506001600160a01b038316156101795761017981848661030d565b6001600160a01b038116156101c2576101945f855f5f610371565b600161019e6104ac565b6001600160a01b0383165f9081526004919091016020526040902080549190910390555b6001600160a01b038516156101fe5760016101db6104ac565b6001600160a01b0387165f90815260049190910160205260409020805490910190555b846102076104ac565b5f868152600391909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551869288811692908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a46001600160a01b03811661027e57610279846104d0565b6102a1565b846001600160a01b0316816001600160a01b0316146102a1576102a18185610516565b6001600160a01b0385166102bd576102b88461062d565b6102e0565b846001600160a01b0316816001600160a01b0316146102e0576102e0858561071c565b949350505050565b5f6102f16104ac565b5f9283526003016020525060409020546001600160a01b031690565b61031883838361079f565b610115576001600160a01b03831661034657604051637e27328960e01b8152600481018290526024016100d4565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016100d4565b808061038557506001600160a01b03821615155b15610471575f6103948461082f565b90506001600160a01b038316158015906103c05750826001600160a01b0316816001600160a01b031614155b80156103fe57506103cf6104ac565b6001600160a01b038083165f90815260069290920160209081526040808420928716845291905290205460ff16155b156104275760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016100d4565b811561046f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8361047a6104ac565b5f948552600501602052604090932080546001600160a01b0319166001600160a01b0390941693909317909255505050565b7ff2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea7890565b6104d86104ac565b600201546104e46104ac565b5f83815260099190910160205260409020556104fe6104ac565b60020180546001810182555f91825260209091200155565b5f61051f6104ac565b6001600160a01b0384165f908152600491909101602052604081205491506105456104ac565b5f848152600891909101602052604090205490508181146105dc575f6105696104ac565b6001600160a01b0386165f9081526007919091016020908152604080832086845290915290205490508061059b6104ac565b6001600160a01b0387165f90815260079190910160209081526040808320868452909152902055816105cb6104ac565b5f9283526008016020526040909120555b6105e46104ac565b5f84815260089190910160205260408120556105fe6104ac565b6001600160a01b039094165f908152600794909401602090815260408086209386529290525082209190915550565b5f60016106386104ac565b6002015461064691906108dd565b90505f6106516104ac565b5f8481526009919091016020526040812054915061066d6104ac565b6002018381548110610681576106816108fc565b905f5260205f2001549050806106956104ac565b60020183815481106106a9576106a96108fc565b5f91825260209091200155816106bd6104ac565b5f83815260099190910160205260409020556106d76104ac565b5f85815260099190910160205260408120556106f16104ac565b60020180548061070357610703610910565b600190038181905f5260205f20015f9055905550505050565b5f60016107276104ac565b6001600160a01b0385165f908152600491909101602052604090205461074d91906108dd565b9050816107586104ac565b6001600160a01b0385165f90815260079190910160209081526040808320858452909152902055806107886104ac565b5f9384526008016020526040909220919091555050565b5f6001600160a01b038316158015906102e05750826001600160a01b0316846001600160a01b0316148061080457506107d66104ac565b6001600160a01b038086165f90815260069290920160209081526040808420928716845291905290205460ff165b806102e05750826001600160a01b031661081d8361086c565b6001600160a01b031614949350505050565b5f5f61083a836102e8565b90506001600160a01b03811661086657604051637e27328960e01b8152600481018490526024016100d4565b92915050565b5f6108756104ac565b5f9283526005016020525060409020546001600160a01b031690565b5f5f604083850312156108a2575f5ffd5b82356001600160a01b03811681146108b8575f5ffd5b946020939093013593505050565b5f602082840312156108d6575f5ffd5b5035919050565b8181038181111561086657634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea264697066735822122044970c2beef576ce75e1369d601c7c88e1437d7020be77fc793beebc682190df64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x95A DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x55 PUSH2 0x50 CALLDATASIZE PUSH1 0x4 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F DUP3 DUP3 PUSH2 0xAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAC DUP2 PUSH2 0x11A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE9 DUP4 DUP4 PUSH0 PUSH2 0x152 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126 PUSH0 DUP4 PUSH0 PUSH2 0x152 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x15D DUP5 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 DUP2 DUP5 DUP7 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x194 PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x19E PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1FE JUMPI PUSH1 0x1 PUSH2 0x1DB PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST DUP5 PUSH2 0x207 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE MLOAD DUP7 SWAP3 DUP9 DUP2 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27E JUMPI PUSH2 0x279 DUP5 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A1 JUMPI PUSH2 0x2A1 DUP2 DUP6 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2BD JUMPI PUSH2 0x2B8 DUP5 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2E0 JUMPI PUSH2 0x2E0 DUP6 DUP6 PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x318 DUP4 DUP4 DUP4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x115 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xD4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x385 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x471 JUMPI PUSH0 PUSH2 0x394 DUP5 PUSH2 0x82F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3C0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI POP PUSH2 0x3CF PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x46F JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH2 0x47A PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP5 DUP6 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xF2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78 SWAP1 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0x4E4 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x4FE PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x51F PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0x545 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5DC JUMPI PUSH0 PUSH2 0x569 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x59B PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0x5CB PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x5E4 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x5FE PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP5 SWAP1 SWAP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP7 MSTORE SWAP3 SWAP1 MSTORE POP DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x638 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x651 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0x66D PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x8FC JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH2 0x695 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x8FC JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP2 PUSH2 0x6BD PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x6D7 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x6F1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x703 JUMPI PUSH2 0x703 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x727 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x758 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x788 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2E0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x804 JUMPI POP PUSH2 0x7D6 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x2E0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81D DUP4 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x83A DUP4 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x875 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO SWAP8 0xC 0x2B 0xEE CREATE2 PUSH23 0xCE75E1369D601C7C88E1437D7020BE77FC793BEEBC6821 SWAP1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "118:473:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_575": {
									"entryPoint": 1232,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_550": {
									"entryPoint": 1820,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_approve_1047": {
									"entryPoint": 881,
									"id": 1047,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_842": {
									"entryPoint": 282,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkAuthorized_343": {
									"entryPoint": 781,
									"id": 343,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_getApproved_263": {
									"entryPoint": 2156,
									"id": 263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_302": {
									"entryPoint": 1951,
									"id": 302,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_764": {
									"entryPoint": 175,
									"id": 764,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_ownerOf_248": {
									"entryPoint": 744,
									"id": 248,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_removeTokenFromAllTokensEnumeration_710": {
									"entryPoint": 1581,
									"id": 710,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_649": {
									"entryPoint": 1302,
									"id": 649,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_requireOwned_1121": {
									"entryPoint": 2095,
									"id": 1121,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_update_513": {
									"entryPoint": 338,
									"id": 513,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@balanceOf_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@burn_75": {
									"entryPoint": 163,
									"id": 75,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@layout_233": {
									"entryPoint": 1196,
									"id": 233,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_36": {
									"entryPoint": 149,
									"id": 36,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeMint_63": {
									"entryPoint": null,
									"id": 63,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x31": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1816:5",
										"nodeType": "YulBlock",
										"src": "0:1816:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "101:319:5",
													"nodeType": "YulBlock",
													"src": "101:319:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "147:16:5",
																"nodeType": "YulBlock",
																"src": "147:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "156:1:5",
																					"nodeType": "YulLiteral",
																					"src": "156:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "159:1:5",
																					"nodeType": "YulLiteral",
																					"src": "159:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "149:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:5"
																			},
																			"nativeSrc": "149:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:5"
																		},
																		"nativeSrc": "149:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "122:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "131:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "118:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:5"
																		},
																		"nativeSrc": "118:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "143:2:5",
																		"nodeType": "YulLiteral",
																		"src": "143:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "114:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:5"
																},
																"nativeSrc": "114:32:5",
																"nodeType": "YulFunctionCall",
																"src": "114:32:5"
															},
															"nativeSrc": "111:52:5",
															"nodeType": "YulIf",
															"src": "111:52:5"
														},
														{
															"nativeSrc": "172:36:5",
															"nodeType": "YulVariableDeclaration",
															"src": "172:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "198:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "185:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "185:12:5"
																},
																"nativeSrc": "185:23:5",
																"nodeType": "YulFunctionCall",
																"src": "185:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "176:5:5",
																	"nodeType": "YulTypedName",
																	"src": "176:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "271:16:5",
																"nodeType": "YulBlock",
																"src": "271:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "280:1:5",
																					"nodeType": "YulLiteral",
																					"src": "280:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "283:1:5",
																					"nodeType": "YulLiteral",
																					"src": "283:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "273:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:5"
																			},
																			"nativeSrc": "273:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:5"
																		},
																		"nativeSrc": "273:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "230:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "241:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "256:3:5",
																										"nodeType": "YulLiteral",
																										"src": "256:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "261:1:5",
																										"nodeType": "YulLiteral",
																										"src": "261:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "252:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "252:3:5"
																								},
																								"nativeSrc": "252:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "252:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "265:1:5",
																								"nodeType": "YulLiteral",
																								"src": "265:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "248:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:5"
																						},
																						"nativeSrc": "248:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "248:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "237:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:5"
																				},
																				"nativeSrc": "237:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "237:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "227:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:5"
																		},
																		"nativeSrc": "227:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "227:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:5"
																},
																"nativeSrc": "220:50:5",
																"nodeType": "YulFunctionCall",
																"src": "220:50:5"
															},
															"nativeSrc": "217:70:5",
															"nodeType": "YulIf",
															"src": "217:70:5"
														},
														{
															"nativeSrc": "296:15:5",
															"nodeType": "YulAssignment",
															"src": "296:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "306:5:5",
																"nodeType": "YulIdentifier",
																"src": "306:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "296:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:5"
																}
															]
														},
														{
															"nativeSrc": "320:16:5",
															"nodeType": "YulVariableDeclaration",
															"src": "320:16:5",
															"value": {
																"kind": "number",
																"nativeSrc": "335:1:5",
																"nodeType": "YulLiteral",
																"src": "335:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "324:7:5",
																	"nodeType": "YulTypedName",
																	"src": "324:7:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "345:43:5",
															"nodeType": "YulAssignment",
															"src": "345:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "373:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "373:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "384:2:5",
																				"nodeType": "YulLiteral",
																				"src": "384:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "369:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "369:3:5"
																		},
																		"nativeSrc": "369:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "369:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "356:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "356:12:5"
																},
																"nativeSrc": "356:32:5",
																"nodeType": "YulFunctionCall",
																"src": "356:32:5"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "345:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "345:7:5"
																}
															]
														},
														{
															"nativeSrc": "397:17:5",
															"nodeType": "YulAssignment",
															"src": "397:17:5",
															"value": {
																"name": "value_1",
																"nativeSrc": "407:7:5",
																"nodeType": "YulIdentifier",
																"src": "407:7:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "14:406:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "59:9:5",
														"nodeType": "YulTypedName",
														"src": "59:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "70:7:5",
														"nodeType": "YulTypedName",
														"src": "70:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "82:6:5",
														"nodeType": "YulTypedName",
														"src": "82:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "90:6:5",
														"nodeType": "YulTypedName",
														"src": "90:6:5",
														"type": ""
													}
												],
												"src": "14:406:5"
											},
											{
												"body": {
													"nativeSrc": "495:156:5",
													"nodeType": "YulBlock",
													"src": "495:156:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "541:16:5",
																"nodeType": "YulBlock",
																"src": "541:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "550:1:5",
																					"nodeType": "YulLiteral",
																					"src": "550:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "553:1:5",
																					"nodeType": "YulLiteral",
																					"src": "553:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "543:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "543:6:5"
																			},
																			"nativeSrc": "543:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "543:12:5"
																		},
																		"nativeSrc": "543:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "543:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "516:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "525:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "525:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "512:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "512:3:5"
																		},
																		"nativeSrc": "512:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "512:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "537:2:5",
																		"nodeType": "YulLiteral",
																		"src": "537:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "508:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:5"
																},
																"nativeSrc": "508:32:5",
																"nodeType": "YulFunctionCall",
																"src": "508:32:5"
															},
															"nativeSrc": "505:52:5",
															"nodeType": "YulIf",
															"src": "505:52:5"
														},
														{
															"nativeSrc": "566:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "566:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "579:1:5",
																"nodeType": "YulLiteral",
																"src": "579:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "570:5:5",
																	"nodeType": "YulTypedName",
																	"src": "570:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "589:32:5",
															"nodeType": "YulAssignment",
															"src": "589:32:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "611:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "611:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "598:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "598:12:5"
																},
																"nativeSrc": "598:23:5",
																"nodeType": "YulFunctionCall",
																"src": "598:23:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "589:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "589:5:5"
																}
															]
														},
														{
															"nativeSrc": "630:15:5",
															"nodeType": "YulAssignment",
															"src": "630:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "640:5:5",
																"nodeType": "YulIdentifier",
																"src": "640:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "630:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "630:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "425:226:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "461:9:5",
														"nodeType": "YulTypedName",
														"src": "461:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "472:7:5",
														"nodeType": "YulTypedName",
														"src": "472:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "484:6:5",
														"nodeType": "YulTypedName",
														"src": "484:6:5",
														"type": ""
													}
												],
												"src": "425:226:5"
											},
											{
												"body": {
													"nativeSrc": "757:76:5",
													"nodeType": "YulBlock",
													"src": "757:76:5",
													"statements": [
														{
															"nativeSrc": "767:26:5",
															"nodeType": "YulAssignment",
															"src": "767:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "779:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "779:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "790:2:5",
																		"nodeType": "YulLiteral",
																		"src": "790:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "775:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:5"
																},
																"nativeSrc": "775:18:5",
																"nodeType": "YulFunctionCall",
																"src": "775:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "767:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "767:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "809:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "809:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "820:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "820:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "802:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "802:6:5"
																},
																"nativeSrc": "802:25:5",
																"nodeType": "YulFunctionCall",
																"src": "802:25:5"
															},
															"nativeSrc": "802:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "802:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "656:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:5",
														"nodeType": "YulTypedName",
														"src": "726:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "737:6:5",
														"nodeType": "YulTypedName",
														"src": "737:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "748:4:5",
														"nodeType": "YulTypedName",
														"src": "748:4:5",
														"type": ""
													}
												],
												"src": "656:177:5"
											},
											{
												"body": {
													"nativeSrc": "939:102:5",
													"nodeType": "YulBlock",
													"src": "939:102:5",
													"statements": [
														{
															"nativeSrc": "949:26:5",
															"nodeType": "YulAssignment",
															"src": "949:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "961:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "961:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "972:2:5",
																		"nodeType": "YulLiteral",
																		"src": "972:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "957:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "957:3:5"
																},
																"nativeSrc": "957:18:5",
																"nodeType": "YulFunctionCall",
																"src": "957:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "949:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "949:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "991:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "991:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1006:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1006:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1022:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1022:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1027:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1027:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1018:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1018:3:5"
																						},
																						"nativeSrc": "1018:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1018:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1031:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1031:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1014:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1014:3:5"
																				},
																				"nativeSrc": "1014:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1014:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1002:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:5"
																		},
																		"nativeSrc": "1002:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "984:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:5"
																},
																"nativeSrc": "984:51:5",
																"nodeType": "YulFunctionCall",
																"src": "984:51:5"
															},
															"nativeSrc": "984:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "984:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "838:203:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "908:9:5",
														"nodeType": "YulTypedName",
														"src": "908:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "919:6:5",
														"nodeType": "YulTypedName",
														"src": "919:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "930:4:5",
														"nodeType": "YulTypedName",
														"src": "930:4:5",
														"type": ""
													}
												],
												"src": "838:203:5"
											},
											{
												"body": {
													"nativeSrc": "1175:145:5",
													"nodeType": "YulBlock",
													"src": "1175:145:5",
													"statements": [
														{
															"nativeSrc": "1185:26:5",
															"nodeType": "YulAssignment",
															"src": "1185:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1197:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1197:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1208:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1208:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1193:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1193:3:5"
																},
																"nativeSrc": "1193:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1193:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1185:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1185:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1227:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1227:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1242:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1242:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1258:3:5",
																								"nodeType": "YulLiteral",
																								"src": "1258:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1263:1:5",
																								"nodeType": "YulLiteral",
																								"src": "1263:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1254:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1254:3:5"
																						},
																						"nativeSrc": "1254:11:5",
																						"nodeType": "YulFunctionCall",
																						"src": "1254:11:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1267:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1267:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1250:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1250:3:5"
																				},
																				"nativeSrc": "1250:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1250:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1238:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1238:3:5"
																		},
																		"nativeSrc": "1238:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1238:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:5"
																},
																"nativeSrc": "1220:51:5",
																"nodeType": "YulFunctionCall",
																"src": "1220:51:5"
															},
															"nativeSrc": "1220:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "1220:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1291:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1291:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1302:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1302:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1287:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:5"
																		},
																		"nativeSrc": "1287:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:18:5"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1307:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1280:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:5"
																},
																"nativeSrc": "1280:34:5",
																"nodeType": "YulFunctionCall",
																"src": "1280:34:5"
															},
															"nativeSrc": "1280:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "1280:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1046:274:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1136:9:5",
														"nodeType": "YulTypedName",
														"src": "1136:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1147:6:5",
														"nodeType": "YulTypedName",
														"src": "1147:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1155:6:5",
														"nodeType": "YulTypedName",
														"src": "1155:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1166:4:5",
														"nodeType": "YulTypedName",
														"src": "1166:4:5",
														"type": ""
													}
												],
												"src": "1046:274:5"
											},
											{
												"body": {
													"nativeSrc": "1374:176:5",
													"nodeType": "YulBlock",
													"src": "1374:176:5",
													"statements": [
														{
															"nativeSrc": "1384:17:5",
															"nodeType": "YulAssignment",
															"src": "1384:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1396:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1396:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1399:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1399:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1392:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1392:3:5"
																},
																"nativeSrc": "1392:9:5",
																"nodeType": "YulFunctionCall",
																"src": "1392:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1384:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1384:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1433:111:5",
																"nodeType": "YulBlock",
																"src": "1433:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1454:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1454:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1461:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1461:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1466:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1466:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1457:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1457:3:5"
																					},
																					"nativeSrc": "1457:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1457:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1447:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:5"
																			},
																			"nativeSrc": "1447:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1447:31:5"
																		},
																		"nativeSrc": "1447:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1447:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1498:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1501:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1501:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1491:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1491:6:5"
																			},
																			"nativeSrc": "1491:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1491:15:5"
																		},
																		"nativeSrc": "1491:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1491:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1526:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1526:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1529:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1529:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1519:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1519:6:5"
																			},
																			"nativeSrc": "1519:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1519:15:5"
																		},
																		"nativeSrc": "1519:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1519:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1416:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1416:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1422:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "1422:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1413:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1413:2:5"
																},
																"nativeSrc": "1413:11:5",
																"nodeType": "YulFunctionCall",
																"src": "1413:11:5"
															},
															"nativeSrc": "1410:134:5",
															"nodeType": "YulIf",
															"src": "1410:134:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1325:225:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1356:1:5",
														"nodeType": "YulTypedName",
														"src": "1356:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1359:1:5",
														"nodeType": "YulTypedName",
														"src": "1359:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1365:4:5",
														"nodeType": "YulTypedName",
														"src": "1365:4:5",
														"type": ""
													}
												],
												"src": "1325:225:5"
											},
											{
												"body": {
													"nativeSrc": "1587:95:5",
													"nodeType": "YulBlock",
													"src": "1587:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1604:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1604:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1611:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1611:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1616:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1616:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1607:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1607:3:5"
																		},
																		"nativeSrc": "1607:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1607:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:5"
																},
																"nativeSrc": "1597:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1597:31:5"
															},
															"nativeSrc": "1597:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1597:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1644:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1644:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1647:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1647:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1637:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:5"
																},
																"nativeSrc": "1637:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1637:15:5"
															},
															"nativeSrc": "1637:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1637:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1668:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1668:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1671:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1671:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1661:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:5"
																},
																"nativeSrc": "1661:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1661:15:5"
															},
															"nativeSrc": "1661:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1661:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "1555:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:127:5"
											},
											{
												"body": {
													"nativeSrc": "1719:95:5",
													"nodeType": "YulBlock",
													"src": "1719:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1736:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1736:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1743:3:5",
																				"nodeType": "YulLiteral",
																				"src": "1743:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:10:5",
																				"nodeType": "YulLiteral",
																				"src": "1748:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1739:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1739:3:5"
																		},
																		"nativeSrc": "1739:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1739:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:5"
																},
																"nativeSrc": "1729:31:5",
																"nodeType": "YulFunctionCall",
																"src": "1729:31:5"
															},
															"nativeSrc": "1729:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "1729:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1776:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1779:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1779:4:5",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1769:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1769:6:5"
																},
																"nativeSrc": "1769:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1769:15:5"
															},
															"nativeSrc": "1769:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1769:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1800:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1803:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1793:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1793:6:5"
																},
																"nativeSrc": "1793:15:5",
																"nodeType": "YulFunctionCall",
																"src": "1793:15:5"
															},
															"nativeSrc": "1793:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "1793:15:5"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "1687:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "1687:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061003e575f3560e01c806340c10f191461004257806342966c6814610057578063722713f714610076578063a144819414610042575b5f5ffd5b610055610050366004610891565b610095565b005b348015610062575f5ffd5b506100556100713660046108c6565b6100a3565b348015610081575f5ffd5b504760405190815260200160405180910390f35b61009f82826100af565b5050565b6100ac8161011a565b50565b6001600160a01b0382166100dd57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6100e983835f610152565b90506001600160a01b03811615610115576040516339e3563760e11b81525f60048201526024016100d4565b505050565b5f6101265f835f610152565b90506001600160a01b03811661009f57604051637e27328960e01b8152600481018390526024016100d4565b5f5f61015d846102e8565b90506001600160a01b038316156101795761017981848661030d565b6001600160a01b038116156101c2576101945f855f5f610371565b600161019e6104ac565b6001600160a01b0383165f9081526004919091016020526040902080549190910390555b6001600160a01b038516156101fe5760016101db6104ac565b6001600160a01b0387165f90815260049190910160205260409020805490910190555b846102076104ac565b5f868152600391909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551869288811692908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9190a46001600160a01b03811661027e57610279846104d0565b6102a1565b846001600160a01b0316816001600160a01b0316146102a1576102a18185610516565b6001600160a01b0385166102bd576102b88461062d565b6102e0565b846001600160a01b0316816001600160a01b0316146102e0576102e0858561071c565b949350505050565b5f6102f16104ac565b5f9283526003016020525060409020546001600160a01b031690565b61031883838361079f565b610115576001600160a01b03831661034657604051637e27328960e01b8152600481018290526024016100d4565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016100d4565b808061038557506001600160a01b03821615155b15610471575f6103948461082f565b90506001600160a01b038316158015906103c05750826001600160a01b0316816001600160a01b031614155b80156103fe57506103cf6104ac565b6001600160a01b038083165f90815260069290920160209081526040808420928716845291905290205460ff16155b156104275760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016100d4565b811561046f5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8361047a6104ac565b5f948552600501602052604090932080546001600160a01b0319166001600160a01b0390941693909317909255505050565b7ff2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea7890565b6104d86104ac565b600201546104e46104ac565b5f83815260099190910160205260409020556104fe6104ac565b60020180546001810182555f91825260209091200155565b5f61051f6104ac565b6001600160a01b0384165f908152600491909101602052604081205491506105456104ac565b5f848152600891909101602052604090205490508181146105dc575f6105696104ac565b6001600160a01b0386165f9081526007919091016020908152604080832086845290915290205490508061059b6104ac565b6001600160a01b0387165f90815260079190910160209081526040808320868452909152902055816105cb6104ac565b5f9283526008016020526040909120555b6105e46104ac565b5f84815260089190910160205260408120556105fe6104ac565b6001600160a01b039094165f908152600794909401602090815260408086209386529290525082209190915550565b5f60016106386104ac565b6002015461064691906108dd565b90505f6106516104ac565b5f8481526009919091016020526040812054915061066d6104ac565b6002018381548110610681576106816108fc565b905f5260205f2001549050806106956104ac565b60020183815481106106a9576106a96108fc565b5f91825260209091200155816106bd6104ac565b5f83815260099190910160205260409020556106d76104ac565b5f85815260099190910160205260408120556106f16104ac565b60020180548061070357610703610910565b600190038181905f5260205f20015f9055905550505050565b5f60016107276104ac565b6001600160a01b0385165f908152600491909101602052604090205461074d91906108dd565b9050816107586104ac565b6001600160a01b0385165f90815260079190910160209081526040808320858452909152902055806107886104ac565b5f9384526008016020526040909220919091555050565b5f6001600160a01b038316158015906102e05750826001600160a01b0316846001600160a01b0316148061080457506107d66104ac565b6001600160a01b038086165f90815260069290920160209081526040808420928716845291905290205460ff165b806102e05750826001600160a01b031661081d8361086c565b6001600160a01b031614949350505050565b5f5f61083a836102e8565b90506001600160a01b03811661086657604051637e27328960e01b8152600481018490526024016100d4565b92915050565b5f6108756104ac565b5f9283526005016020525060409020546001600160a01b031690565b5f5f604083850312156108a2575f5ffd5b82356001600160a01b03811681146108b8575f5ffd5b946020939093013593505050565b5f602082840312156108d6575f5ffd5b5035919050565b8181038181111561086657634e487b7160e01b5f52601160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52603160045260245ffdfea264697066735822122044970c2beef576ce75e1369d601c7c88e1437d7020be77fc793beebc682190df64736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x42 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x722713F7 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x42 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x55 PUSH2 0x50 CALLDATASIZE PUSH1 0x4 PUSH2 0x891 JUMP JUMPDEST PUSH2 0x95 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x55 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0xA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP SELFBALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F DUP3 DUP3 PUSH2 0xAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAC DUP2 PUSH2 0x11A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDD JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE9 DUP4 DUP4 PUSH0 PUSH2 0x152 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x115 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x126 PUSH0 DUP4 PUSH0 PUSH2 0x152 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x15D DUP5 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 DUP2 DUP5 DUP7 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1C2 JUMPI PUSH2 0x194 PUSH0 DUP6 PUSH0 PUSH0 PUSH2 0x371 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x19E PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP1 SWAP2 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1FE JUMPI PUSH1 0x1 PUSH2 0x1DB PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMPDEST DUP5 PUSH2 0x207 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP7 DUP2 MSTORE PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SSTORE MLOAD DUP7 SWAP3 DUP9 DUP2 AND SWAP3 SWAP1 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 SWAP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x27E JUMPI PUSH2 0x279 DUP5 PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2A1 JUMPI PUSH2 0x2A1 DUP2 DUP6 PUSH2 0x516 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2BD JUMPI PUSH2 0x2B8 DUP5 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x2E0 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2E0 JUMPI PUSH2 0x2E0 DUP6 DUP6 PUSH2 0x71C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2F1 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x3 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x318 DUP4 DUP4 DUP4 PUSH2 0x79F JUMP JUMPDEST PUSH2 0x115 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0xD4 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x385 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x471 JUMPI PUSH0 PUSH2 0x394 DUP5 PUSH2 0x82F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3C0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI POP PUSH2 0x3CF PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x46F JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH2 0x47A PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP5 DUP6 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xF2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78 SWAP1 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0x4E4 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x4FE PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x51F PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0x545 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 EQ PUSH2 0x5DC JUMPI PUSH0 PUSH2 0x569 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 POP DUP1 PUSH2 0x59B PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP2 PUSH2 0x5CB PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SSTORE JUMPDEST PUSH2 0x5E4 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x8 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x5FE PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP5 SWAP1 SWAP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SWAP4 DUP7 MSTORE SWAP3 SWAP1 MSTORE POP DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x638 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD SLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x651 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 POP PUSH2 0x66D PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x681 JUMPI PUSH2 0x681 PUSH2 0x8FC JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH2 0x695 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x6A9 JUMPI PUSH2 0x6A9 PUSH2 0x8FC JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP2 PUSH2 0x6BD PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x6D7 PUSH2 0x4AC JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x9 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x6F1 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x703 JUMPI PUSH2 0x703 PUSH2 0x910 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH2 0x727 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x74D SWAP2 SWAP1 PUSH2 0x8DD JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x758 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE DUP1 PUSH2 0x788 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP4 DUP5 MSTORE PUSH1 0x8 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2E0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x804 JUMPI POP PUSH2 0x7D6 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP3 DUP8 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x2E0 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x81D DUP4 PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x83A DUP4 PUSH2 0x2E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x875 PUSH2 0x4AC JUMP JUMPDEST PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x5 ADD PUSH1 0x20 MSTORE POP PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8A2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO SWAP8 0xC 0x2B 0xEE CREATE2 PUSH23 0xCE75E1369D601C7C88E1437D7020BE77FC793BEEBC6821 SWAP1 0xDF PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "118:473:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;146:111;;;;;;:::i;:::-;;:::i;:::-;;501:85;;;;;;;;;;-1:-1:-1;501:85:1;;;;;:::i;:::-;;:::i;265:105::-;;;;;;;;;;-1:-1:-1;333:21:1;265:105;;802:25:5;;;790:2;775:18;265:105:1;;;;;;;146:111;219:30;235:3;240:8;219:15;:30::i;:::-;146:111;;:::o;501:85::-;553:25;569:8;553:15;:25::i;:::-;501:85;:::o;10866:361:4:-;-1:-1:-1;;;;;10934:16:4;;10930:102;;10974:46;;-1:-1:-1;;;10974:46:4;;11017:1;10974:46;;;984:51:5;957:18;;10974:46:4;;;;;;;;10930:102;11042:21;11066:32;11074:2;11078:7;11095:1;11066:7;:32::i;:::-;11042:56;-1:-1:-1;;;;;;11113:27:4;;;11109:111;;11164:44;;-1:-1:-1;;;11164:44:4;;11205:1;11164:44;;;984:51:5;957:18;;11164:44:4;838:203:5;11109:111:4;10919:308;10866:361;;:::o;12480:245::-;12532:21;12556:40;12572:1;12576:7;12593:1;12556:7;:40::i;:::-;12532:64;-1:-1:-1;;;;;;12611:27:4;;12607:111;;12662:44;;-1:-1:-1;;;12662:44:4;;;;;802:25:5;;;775:18;;12662:44:4;656:177:5;5106:1369:4;5218:7;5238:21;5262:17;5271:7;5262:8;:17::i;:::-;5238:41;-1:-1:-1;;;;;;5342:18:4;;;5338:97;;5377:46;5394:13;5409:4;5415:7;5377:16;:46::i;:::-;-1:-1:-1;;;;;5482:27:4;;;5478:289;;5609:48;5626:1;5630:7;5647:1;5651:5;5609:8;:48::i;:::-;5739:1;5703:8;:6;:8::i;:::-;-1:-1:-1;;;;;5703:32:4;;;;;;:17;;;;;:32;;;;;:37;;;;;;;;5478:289;-1:-1:-1;;;;;5783:16:4;;;5779:119;;5870:1;5845:8;:6;:8::i;:::-;-1:-1:-1;;;;;5845:21:4;;;;;;:17;;;;;:21;;;;;:26;;;;;;;5779:119;5937:2;5910:8;:6;:8::i;:::-;:24;;;;:15;;;;;:24;;;;;;:29;;-1:-1:-1;;;;;;5910:29:4;-1:-1:-1;;;;;5910:29:4;;;;;;5957:49;5910:24;;5957:49;;;;;;;;;;5910:24;5957:49;-1:-1:-1;;;;;6023:27:4;;6019:214;;6067:40;6099:7;6067:31;:40::i;:::-;6019:214;;;6146:2;-1:-1:-1;;;;;6129:19:4;:13;-1:-1:-1;;;;;6129:19:4;;6125:108;;6165:56;6198:13;6213:7;6165:32;:56::i;:::-;-1:-1:-1;;;;;6247:16:4;;6243:192;;6280:45;6317:7;6280:36;:45::i;:::-;6243:192;;;6364:2;-1:-1:-1;;;;;6347:19:4;:13;-1:-1:-1;;;;;6347:19:4;;6343:92;;6383:40;6411:2;6415:7;6383:27;:40::i;:::-;6454:13;5106:1369;-1:-1:-1;;;;5106:1369:4:o;1612:117::-;1670:7;1697:8;:6;:8::i;:::-;:24;;;;:15;;:24;;-1:-1:-1;1697:24:4;;;;-1:-1:-1;;;;;1697:24:4;;1612:117::o;3089:489::-;3228:38;3242:5;3249:7;3258;3228:13;:38::i;:::-;3223:348;;-1:-1:-1;;;;;3287:19:4;;3283:277;;3334:44;;-1:-1:-1;;;3334:44:4;;;;;802:25:5;;;775:18;;3334:44:4;656:177:5;3283:277:4;3426:118;;-1:-1:-1;;;3426:118:4;;-1:-1:-1;;;;;1238:32:5;;3426:118:4;;;1220:51:5;1287:18;;;1280:34;;;1193:18;;3426:118:4;1046:274:5;15983:823:4;16180:9;:31;;;-1:-1:-1;;;;;;16193:18:4;;;;16180:31;16176:573;;;16228:13;16244:22;16258:7;16244:13;:22::i;:::-;16228:38;-1:-1:-1;;;;;;16415:18:4;;;;;;:52;;;16463:4;-1:-1:-1;;;;;16454:13:4;:5;-1:-1:-1;;;;;16454:13:4;;;16415:52;:113;;;;;16489:8;:6;:8::i;:::-;-1:-1:-1;;;;;16489:33:4;;;;;;;:26;;;;;:33;;;;;;;;:39;;;;;;;;;;;;;16488:40;16415:113;16393:233;;;16570:40;;-1:-1:-1;;;16570:40:4;;-1:-1:-1;;;;;1002:32:5;;16570:40:4;;;984:51:5;957:18;;16570:40:4;838:203:5;16393:233:4;16646:9;16642:96;;;16714:7;16710:2;-1:-1:-1;;;;;16681:41:4;16703:5;-1:-1:-1;;;;;16681:41:4;;;;;;;;;;;16642:96;16213:536;16176:573;16796:2;16761:8;:6;:8::i;:::-;:32;;;;:23;;:32;;;;;;:37;;-1:-1:-1;;;;;;16761:37:4;-1:-1:-1;;;;;16761:37:4;;;;;;;;;;-1:-1:-1;;;15983:823:4:o;923:164::-;296:35;;923:164::o;7220:189::-;7333:8;:6;:8::i;:::-;:18;;:25;7298:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;:60;7369:8;:6;:8::i;:::-;:18;;:32;;;;;;;-1:-1:-1;7369:32:4;;;;;;;;;7220:189::o;8036:1059::-;8328:22;8353:8;:6;:8::i;:::-;-1:-1:-1;;;;;8353:23:4;;;;;;:17;;;;;:23;;;;;;;-1:-1:-1;8408:8:4;:6;:8::i;:::-;:34;;;;:25;;;;;:34;;;;;;;-1:-1:-1;8549:28:4;;;8545:352;;8594:19;8616:8;:6;:8::i;:::-;-1:-1:-1;;;;;8616:26:4;;;;;;:20;;;;;:26;;;;;;;;:42;;;;;;;;;;-1:-1:-1;8616:42:4;8675:8;:6;:8::i;:::-;-1:-1:-1;;;;;8675:26:4;;;;;;:20;;;;;:26;;;;;;;;:38;;;;;;;;:52;8702:10;8800:8;:6;:8::i;:::-;:38;;;;:25;;:38;;;;;;:51;8545:352;8993:8;:6;:8::i;:::-;:34;;;;:25;;;;;:34;;;;;8986:41;9045:8;:6;:8::i;:::-;-1:-1:-1;;;;;9045:26:4;;;;;;;:20;;;;;:26;;;;;;;;:42;;;;;;-1:-1:-1;9045:42:4;;9038:49;;;;-1:-1:-1;8036:1059:4:o;9394:1136::-;9648:22;9701:1;9673:8;:6;:8::i;:::-;:18;;:25;:29;;;;:::i;:::-;9648:54;;9713:18;9734:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;;;-1:-1:-1;10115:8:4;:6;:8::i;:::-;:18;;10134:14;10115:34;;;;;;;;:::i;:::-;;;;;;;;;10093:56;;10195:11;10162:8;:6;:8::i;:::-;:18;;10181:10;10162:30;;;;;;;;:::i;:::-;;;;;;;;;;:44;10314:10;10275:8;:6;:8::i;:::-;:36;;;;:23;;;;;:36;;;;;:49;10455:8;:6;:8::i;:::-;:32;;;;:23;;;;;:32;;;;;10448:39;10498:8;:6;:8::i;:::-;:18;;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;9466:1064;;;9394:1136;:::o;6776:243::-;6862:14;6903:1;6879:8;:6;:8::i;:::-;-1:-1:-1;;;;;6879:21:4;;;;;;:17;;;;;:21;;;;;;:25;;;;:::i;:::-;6862:42;;6950:7;6915:8;:6;:8::i;:::-;-1:-1:-1;;;;;6915:24:4;;;;;;:20;;;;;:24;;;;;;;;:32;;;;;;;;:42;6940:6;6968:8;:6;:8::i;:::-;:34;;;;:25;;:34;;;;;;:43;;;;-1:-1:-1;;6776:243:4:o;2299:346::-;2428:4;-1:-1:-1;;;;;2465:21:4;;;;;;:172;;;2513:7;-1:-1:-1;;;;;2504:16:4;:5;-1:-1:-1;;;;;2504:16:4;;:79;;;;2541:8;:6;:8::i;:::-;-1:-1:-1;;;;;2541:33:4;;;;;;;:26;;;;;:33;;;;;;;;:42;;;;;;;;;;;;;2504:79;:132;;;;2629:7;-1:-1:-1;;;;;2604:32:4;:21;2617:7;2604:12;:21::i;:::-;-1:-1:-1;;;;;2604:32:4;;2445:192;2299:346;-1:-1:-1;;;;2299:346:4:o;17646:260::-;17709:7;17729:13;17745:17;17754:7;17745:8;:17::i;:::-;17729:33;-1:-1:-1;;;;;;17777:19:4;;17773:103;;17820:44;;-1:-1:-1;;;17820:44:4;;;;;802:25:5;;;775:18;;17820:44:4;656:177:5;17773:103:4;17893:5;17646:260;-1:-1:-1;;17646:260:4:o;1850:129::-;1912:7;1939:8;:6;:8::i;:::-;:32;;;;:23;;:32;;-1:-1:-1;1939:32:4;;;;-1:-1:-1;;;;;1939:32:4;;1850:129::o;14:406:5:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;185:23;;-1:-1:-1;;;;;237:31:5;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;384:2;369:18;;;;356:32;;-1:-1:-1;;;14:406:5:o;425:226::-;484:6;537:2;525:9;516:7;512:23;508:32;505:52;;;553:1;550;543:12;505:52;-1:-1:-1;598:23:5;;425:226;-1:-1:-1;425:226:5:o;1325:225::-;1392:9;;;1413:11;;;1410:134;;;1466:10;1461:3;1457:20;1454:1;1447:31;1501:4;1498:1;1491:15;1529:4;1526:1;1519:15;1555:127;1616:10;1611:3;1607:20;1604:1;1597:31;1647:4;1644:1;1637:15;1671:4;1668:1;1661:15;1687:127;1748:10;1743:3;1739:20;1736:1;1729:31;1779:4;1776:1;1769:15;1803:4;1800:1;1793:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "478800",
								"executionCost": "509",
								"totalCost": "479309"
							},
							"external": {
								"balanceOf()": "191",
								"burn(uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"safeMint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 118,
									"end": 591,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 118,
									"end": 591,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122044970c2beef576ce75e1369d601c7c88e1437d7020be77fc793beebc682190df64736f6c634300081b0033",
									".code": [
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "40C10F19"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "42966C68"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "722713F7"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "A1448194"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 118,
											"end": 591,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 146,
											"end": 257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 501,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 501,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 333,
											"end": 354,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 802,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 265,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 265,
											"end": 370,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 265,
											"end": 370,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 146,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 219,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 240,
											"end": 248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 219,
											"end": 234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 219,
											"end": 249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 219,
											"end": 249,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 219,
											"end": 249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 146,
											"end": 257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 501,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 553,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 569,
											"end": 577,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 553,
											"end": 568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 553,
											"end": 578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 553,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 553,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 501,
											"end": 586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10866,
											"end": 11227,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 10866,
											"end": 11227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10934,
											"end": 10950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10934,
											"end": 10950,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10930,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 10930,
											"end": 11032,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11017,
											"end": 11018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1035,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 11020,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10930,
											"end": 11032,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 10930,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11074,
											"end": 11076,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11078,
											"end": 11085,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11095,
											"end": 11096,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11066,
											"end": 11073,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 11066,
											"end": 11098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11066,
											"end": 11098,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 11066,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11098,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11113,
											"end": 11140,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11109,
											"end": 11220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 11109,
											"end": 11220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11205,
											"end": 11206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1035,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11164,
											"end": 11208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 838,
											"end": 1041,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11109,
											"end": 11220,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 11109,
											"end": 11220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10919,
											"end": 11227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10866,
											"end": 11227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10866,
											"end": 11227,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10866,
											"end": 11227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12480,
											"end": 12725,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 12480,
											"end": 12725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12532,
											"end": 12553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 12572,
											"end": 12573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12576,
											"end": 12583,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12593,
											"end": 12594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12556,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 12556,
											"end": 12596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12556,
											"end": 12596,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 12556,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12532,
											"end": 12596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12611,
											"end": 12638,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12611,
											"end": 12638,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12607,
											"end": 12718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12607,
											"end": 12718,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 775,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12662,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 656,
											"end": 833,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5218,
											"end": 5225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5238,
											"end": 5259,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5271,
											"end": 5278,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5262,
											"end": 5279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5262,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5238,
											"end": 5279,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5342,
											"end": 5360,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5338,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5338,
											"end": 5435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5394,
											"end": 5407,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5409,
											"end": 5413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5422,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5377,
											"end": 5423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5377,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5509,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5626,
											"end": 5627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5637,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5609,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 5609,
											"end": 5657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5609,
											"end": 5657,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5703,
											"end": 5711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5735,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5703,
											"end": 5740,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 5478,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5783,
											"end": 5799,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 5871,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5845,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5845,
											"end": 5853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 5845,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5845,
											"end": 5871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 5779,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5937,
											"end": 5939,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5910,
											"end": 5918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 5910,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5939,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5957,
											"end": 6006,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6023,
											"end": 6050,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6099,
											"end": 6106,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6067,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6067,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 6019,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6146,
											"end": 6148,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6129,
											"end": 6148,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6125,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6125,
											"end": 6233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6198,
											"end": 6211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6165,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 6165,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6247,
											"end": 6263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6317,
											"end": 6324,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6280,
											"end": 6325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 6280,
											"end": 6325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 6243,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6366,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6343,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6343,
											"end": 6435,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6383,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 6383,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6454,
											"end": 6467,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5106,
											"end": 6475,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 6475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1612,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1670,
											"end": 1677,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1697,
											"end": 1705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1697,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1697,
											"end": 1712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3578,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3089,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3228,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3228,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3223,
											"end": 3571,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3287,
											"end": 3306,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 827,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 775,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3334,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 656,
											"end": 833,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 3283,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1271,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1287,
											"end": 1305,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1280,
											"end": 1314,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1193,
											"end": 1211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1046,
											"end": 1320,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15983,
											"end": 16806,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 15983,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16180,
											"end": 16189,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16193,
											"end": 16211,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 16180,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16228,
											"end": 16241,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 16258,
											"end": 16265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16244,
											"end": 16257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 16244,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 16244,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16228,
											"end": 16266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16463,
											"end": 16467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16454,
											"end": 16459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 16454,
											"end": 16467,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 16415,
											"end": 16467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 16489,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 16489,
											"end": 16497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 16489,
											"end": 16497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16522,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 16489,
											"end": 16528,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16488,
											"end": 16528,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 16415,
											"end": 16528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1034,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1002,
											"end": 1034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 984,
											"end": 1035,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 957,
											"end": 975,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 957,
											"end": 975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16570,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 838,
											"end": 1041,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 16393,
											"end": 16626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16714,
											"end": 16721,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16710,
											"end": 16712,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16703,
											"end": 16708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16681,
											"end": 16722,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 16642,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16213,
											"end": 16749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 16176,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16796,
											"end": 16798,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 16761,
											"end": 16767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 16761,
											"end": 16769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 16761,
											"end": 16769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16784,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 16761,
											"end": 16784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16793,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 16761,
											"end": 16798,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15983,
											"end": 16806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1087,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 923,
											"end": 1087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 296,
											"end": 331,
											"name": "PUSH",
											"source": 4,
											"value": "F2DEC0ACAEF95DE6625646379D631ADFF4DB9F6C79B84A31ADCB9A23BF6CEA78"
										},
										{
											"begin": 296,
											"end": 331,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 923,
											"end": 1087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7409,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7220,
											"end": 7409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7333,
											"end": 7341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 7333,
											"end": 7341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7358,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7298,
											"end": 7304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7298,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 7298,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7321,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7330,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7358,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7369,
											"end": 7375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7369,
											"end": 7377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 7369,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7369,
											"end": 7387,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7369,
											"end": 7401,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7220,
											"end": 7409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 9095,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 8036,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8328,
											"end": 8350,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8353,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 8353,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8353,
											"end": 8376,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8408,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 8408,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8433,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8549,
											"end": 8577,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8594,
											"end": 8613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8616,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8616,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8616,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8642,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8616,
											"end": 8658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8675,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8675,
											"end": 8683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8675,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8701,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8713,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8675,
											"end": 8727,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8702,
											"end": 8712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8800,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8800,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8825,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 8800,
											"end": 8825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8838,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8800,
											"end": 8851,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 8545,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 8993,
											"end": 9001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8993,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8993,
											"end": 9027,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8986,
											"end": 9027,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9045,
											"end": 9051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 9045,
											"end": 9053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9045,
											"end": 9053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9065,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9071,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9045,
											"end": 9087,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9038,
											"end": 9087,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8036,
											"end": 9095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9670,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9673,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 9673,
											"end": 9681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9673,
											"end": 9691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9698,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 9673,
											"end": 9702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 9673,
											"end": 9702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9648,
											"end": 9702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9713,
											"end": 9731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9734,
											"end": 9740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 9734,
											"end": 9742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 9734,
											"end": 9742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9757,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9734,
											"end": 9766,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10115,
											"end": 10121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10115,
											"end": 10123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 10115,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10115,
											"end": 10133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 10115,
											"end": 10149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10115,
											"end": 10149,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10093,
											"end": 10149,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10093,
											"end": 10149,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10195,
											"end": 10206,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10162,
											"end": 10168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10162,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 10162,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10162,
											"end": 10180,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10181,
											"end": 10191,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 10162,
											"end": 10192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10206,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10314,
											"end": 10324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10275,
											"end": 10283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 10275,
											"end": 10283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10311,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10275,
											"end": 10324,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10455,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 10455,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10478,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10455,
											"end": 10487,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10448,
											"end": 10487,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 10498,
											"end": 10506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10498,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10498,
											"end": 10516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 10498,
											"end": 10522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10522,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 10530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9394,
											"end": 10530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9394,
											"end": 10530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6776,
											"end": 7019,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 6776,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6876,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6879,
											"end": 6885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 6879,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6879,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6896,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6900,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 6879,
											"end": 6904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6879,
											"end": 6904,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6904,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6950,
											"end": 6957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6915,
											"end": 6921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 6915,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 6915,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6935,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6939,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6947,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6915,
											"end": 6957,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6940,
											"end": 6946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6968,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 6968,
											"end": 6976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6968,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 6993,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 6968,
											"end": 6993,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6968,
											"end": 7011,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6776,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2432,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2465,
											"end": 2637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2509,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2520,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2541,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2541,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2541,
											"end": 2583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2504,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2604,
											"end": 2625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2604,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2637,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2299,
											"end": 2645,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2299,
											"end": 2645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17646,
											"end": 17906,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 17646,
											"end": 17906,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17709,
											"end": 17716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17729,
											"end": 17742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 17754,
											"end": 17761,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17745,
											"end": 17753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 17745,
											"end": 17762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 17745,
											"end": 17762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17729,
											"end": 17762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17777,
											"end": 17796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17777,
											"end": 17796,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 802,
											"end": 827,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 802,
											"end": 827,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 775,
											"end": 793,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 775,
											"end": 793,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17820,
											"end": 17864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 656,
											"end": 833,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 17773,
											"end": 17876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17893,
											"end": 17898,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17646,
											"end": 17906,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17646,
											"end": 17906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1979,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1850,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1912,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1939,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1939,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1939,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1939,
											"end": 1962,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 1971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 420,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 88,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 90,
											"end": 96,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 131,
											"end": 140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 122,
											"end": 129,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 118,
											"end": 141,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 114,
											"end": 146,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 111,
											"end": 163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 159,
											"end": 160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 156,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 161,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 163,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 111,
											"end": 163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 185,
											"end": 208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 185,
											"end": 208,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 237,
											"end": 268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 237,
											"end": 268,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 227,
											"end": 269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 227,
											"end": 269,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 217,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 217,
											"end": 287,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 283,
											"end": 284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 281,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 273,
											"end": 285,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 217,
											"end": 287,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 217,
											"end": 287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 311,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 384,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 387,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 369,
											"end": 387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 369,
											"end": 387,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 369,
											"end": 387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 356,
											"end": 388,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 356,
											"end": 388,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 425,
											"end": 651,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 425,
											"end": 651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 534,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 516,
											"end": 523,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 512,
											"end": 535,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 508,
											"end": 540,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 505,
											"end": 557,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 505,
											"end": 557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 505,
											"end": 557,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 553,
											"end": 554,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 555,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 505,
											"end": 557,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 505,
											"end": 557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 598,
											"end": 621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 425,
											"end": 651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 425,
											"end": 651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1325,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1325,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1392,
											"end": 1401,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1413,
											"end": 1424,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1410,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1410,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1461,
											"end": 1464,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1457,
											"end": 1477,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1447,
											"end": 1478,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1491,
											"end": 1506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1533,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1526,
											"end": 1527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1534,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1682,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1555,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1616,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1611,
											"end": 1614,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1607,
											"end": 1627,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1628,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1651,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1637,
											"end": 1652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1675,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1676,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1814,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1687,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1758,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1739,
											"end": 1759,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1737,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 1760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1808,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/facets/MintFacet.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf()": "722713f7",
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19",
							"safeMint(address,uint256)": "a1448194"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/facets/MintFacet.sol\":\"MintFacet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"contracts/facets/MintFacet.sol\":{\"keccak256\":\"0x401a4c00ab48818959ce93538560e994236c07c6b2dca545f6b0a1d63e87c101\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3159934b2df995dd96bedb8119682217bd9c7929b7c3b1ce9cded3c668c9c878\",\"dweb:/ipfs/QmbgRtnzABCpwv77TK1Vc8qQxgUxcBHx9FyUdZ5TfuHTQq\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]},\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]},\"contracts/libraries/LibERC721.sol\":{\"keccak256\":\"0x1d4edd38cf9ec01672aba91cbd8be26257d765c02b7e35ba9d33fa2a2289c12b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb2bdaa6fc0d68af4d38e1f57b279bdbeb185129de97895fdb9f22c48f97948\",\"dweb:/ipfs/QmXJWB4qyVTW1c2SD6nvp6Q3gQRDvg8sNQTzdLeaTCdZVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Errors.sol": {
				"ERC721Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC721EnumerableForbiddenBatchMint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "ERC721OutOfBoundsIndex",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721EnumerableForbiddenBatchMint()": [
								{
									"details": "Batch mint is not allowed."
								}
							],
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721OutOfBoundsIndex(address,uint256)": [
								{
									"details": "An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Errors.sol\":142:2637  library ERC721Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Errors.sol\":142:2637  library ERC721Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH6 0x51FC37E6DB28 0xF 0xF7 RETURNDATACOPY 0xDE LOG3 0xCB XOR EQ 0x29 0x2C DUP6 EXTCODECOPY STATICCALL 0xA8 0xBF LOG0 0xCE CALL SWAP2 NOT 0xF9 0xAC PUSH12 0x1464736F6C634300081B0033 ",
							"sourceMap": "142:2495:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;142:2495:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH6 0x51FC37E6DB28 0xF 0xF7 RETURNDATACOPY 0xDE LOG3 0xCB XOR EQ 0x29 0x2C DUP6 EXTCODECOPY STATICCALL 0xA8 0xBF LOG0 0xCE CALL SWAP2 NOT 0xF9 0xAC PUSH12 0x1464736F6C634300081B0033 ",
							"sourceMap": "142:2495:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 142,
									"end": 2637,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220176551fc37e6db280ff73edea3cb1814292c853cfaa8bfa0cef19119f9ac6b1464736f6c634300081b0033",
									".code": [
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2637,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/facets/MintFacet.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC721EnumerableForbiddenBatchMint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ERC721OutOfBoundsIndex\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"ERC721EnumerableForbiddenBatchMint()\":[{\"details\":\"Batch mint is not allowed.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721OutOfBoundsIndex(address,uint256)\":[{\"details\":\"An `owner`'s token query was out of bounds for `index`. NOTE: The owner being `address(0)` indicates a global out of bounds index.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Errors.sol\":\"ERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/Events.sol": {
				"ERC721Events": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/Events.sol\":139:867  library ERC721Events {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/Events.sol\":139:867  library ERC721Events {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 NOT 0x29 PUSH31 0xAD2D3F0A0F13DCFF657C6BE2D4CA4A66259C669C3C655160D72EA64736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "139:728:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;139:728:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 NOT 0x29 PUSH31 0xAD2D3F0A0F13DCFF657C6BE2D4CA4A66259C669C3C655160D72EA64736F6C PUSH4 0x4300081B STOP CALLER ",
							"sourceMap": "139:728:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 139,
									"end": 867,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038c219297e0ad2d3f0a0f13dcff657c6be2d4ca4a66259c669c3c655160d72ea64736f6c634300081b0033",
									".code": [
										{
											"begin": 139,
											"end": 867,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 139,
											"end": 867,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 139,
											"end": 867,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 867,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/facets/MintFacet.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/Events.sol\":\"ERC721Events\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/LibERC721.sol": {
				"LibERC721": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/LibERC721.sol\":221:19575  library LibERC721 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/LibERC721.sol\":221:19575  library LibERC721 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xCA EXTCODESIZE SMOD EXP LOG1 0xB4 0xE 0xED 0xE6 0xFC PUSH29 0x7FAED3A2A998F9BA3A44A01582610C263F0F5E8064736F6C634300081B STOP CALLER ",
							"sourceMap": "221:19354:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;221:19354:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0xCA EXTCODESIZE SMOD EXP LOG1 0xB4 0xE 0xED 0xE6 0xFC PUSH29 0x7FAED3A2A998F9BA3A44A01582610C263F0F5E8064736F6C634300081B STOP CALLER ",
							"sourceMap": "221:19354:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_addTokenToAllTokensEnumeration(uint256)": "infinite",
								"_addTokenToOwnerEnumeration(address,uint256)": "infinite",
								"_approve(address,uint256,address)": "infinite",
								"_approve(address,uint256,address,bool)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkAuthorized(address,address,uint256)": "infinite",
								"_getApproved(uint256)": "infinite",
								"_increaseBalance(address,uint128)": "infinite",
								"_isAuthorized(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_removeTokenFromAllTokensEnumeration(uint256)": "infinite",
								"_removeTokenFromOwnerEnumeration(address,uint256)": "infinite",
								"_requireOwned(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_update(address,uint256,address)": "infinite",
								"checkOnERC721Received(address,address,address,uint256,bytes memory)": "infinite",
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 221,
									"end": 19575,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122092ca3b070aa1b40eede6fc7c7faed3a2a998f9ba3a44a01582610c263f0f5e8064736f6c634300081b0033",
									".code": [
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 19575,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"contracts/facets/MintFacet.sol",
								"contracts/libraries/Errors.sol",
								"contracts/libraries/Events.sol",
								"contracts/libraries/LibERC721.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/LibERC721.sol\":\"LibERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"contracts/libraries/Errors.sol\":{\"keccak256\":\"0xffadb5360169726256d34c6be53acb748245ca7ed6aec7973baf108a67032753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d399df9e9ad49261f7675088c379a09d6f27ffccd7e851039979519e9555ce8\",\"dweb:/ipfs/QmZCAGkdogzNomA6WeSgzF1wRYVmpQVPmVroMzAezRo1qS\"]},\"contracts/libraries/Events.sol\":{\"keccak256\":\"0x7f048288924f87a10d72c4d42d76b2afa7901bc96d5b7cf118e94581918e0757\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2b696cd0e1fe5b5b806461dc8dbec3581e24060875d33a848d911267edc3839\",\"dweb:/ipfs/QmSJU6iTr6E9S4vS1G33paXWVNda2WeXhQ7JZ35uvW16yq\"]},\"contracts/libraries/LibERC721.sol\":{\"keccak256\":\"0x1d4edd38cf9ec01672aba91cbd8be26257d765c02b7e35ba9d33fa2a2289c12b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8eb2bdaa6fc0d68af4d38e1f57b279bdbeb185129de97895fdb9f22c48f97948\",\"dweb:/ipfs/QmXJWB4qyVTW1c2SD6nvp6Q3gQRDvg8sNQTzdLeaTCdZVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							17
						]
					},
					"id": 18,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "867:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "893:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "940:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 10,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "984:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 13,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:0"
									},
									"scope": 17,
									"src": "832:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 18,
							"src": "295:699:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:0"
				},
				"id": 0
			},
			"contracts/facets/MintFacet.sol": {
				"ast": {
					"absolutePath": "contracts/facets/MintFacet.sol",
					"exportedSymbols": {
						"LibERC721": [
							1191
						],
						"MintFacet": [
							76
						]
					},
					"id": 77,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 19,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "contracts/libraries/LibERC721.sol",
							"file": "../libraries/LibERC721.sol",
							"id": 21,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 77,
							"sourceUnit": 1192,
							"src": "61:53:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 20,
										"name": "LibERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1191,
										"src": "69:9:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MintFacet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "MintFacet",
							"nameLocation": "127:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "208:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 31,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "235:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 32,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "240:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 28,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "219:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$1191_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "229:5:1",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "219:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "219:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "219:30:1"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "155:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "168:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "160:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "181:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "173:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "173:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:31:1"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "208:0:1"
									},
									"scope": 76,
									"src": "146:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "315:55:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 43,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "341:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MintFacet_$76",
																	"typeString": "contract MintFacet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_MintFacet_$76",
																	"typeString": "contract MintFacet"
																}
															],
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 41,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "333:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "333:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "347:7:1",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "333:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 46,
												"nodeType": "Return",
												"src": "326:28:1"
											}
										]
									},
									"functionSelector": "722713f7",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "274:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "283:2:1"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "309:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:6:1"
									},
									"scope": 76,
									"src": "265:105:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "444:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 58,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "471:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 59,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "476:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 55,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "455:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$1191_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "465:5:1",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 764,
														"src": "455:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "455:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "455:30:1"
											}
										]
									},
									"functionSelector": "a1448194",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "387:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "404:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "396:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "417:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "409:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "395:31:1"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "444:0:1"
									},
									"scope": 76,
									"src": "378:115:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "542:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 71,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 65,
															"src": "569:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 68,
															"name": "LibERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "553:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibERC721_$1191_$",
																"typeString": "type(library LibERC721)"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "563:5:1",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 842,
														"src": "553:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "553:25:1"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 75,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "510:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "523:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "515:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:18:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:0:1"
									},
									"scope": 76,
									"src": "501:85:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 77,
							"src": "118:473:1",
							"usedErrors": [
								88,
								102,
								107,
								114,
								119
							],
							"usedEvents": [
								146,
								155
							]
						}
					],
					"src": "33:558:1"
				},
				"id": 1
			},
			"contracts/libraries/Errors.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Errors.sol",
					"exportedSymbols": {
						"ERC721Errors": [
							135
						]
					},
					"id": 136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 135,
							"linearizedBaseContracts": [
								135
							],
							"name": "ERC721Errors",
							"nameLocation": "150:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "170:223:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 83,
									"name": "ERC721InvalidOwner",
									"nameLocation": "405:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "432:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "424:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "424:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:2"
									},
									"src": "399:40:2"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "447:135:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 88,
									"name": "ERC721NonexistentToken",
									"nameLocation": "594:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "625:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "617:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:17:2"
									},
									"src": "588:46:2"
								},
								{
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "642:294:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 97,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "948:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "977:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "969:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "993:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "985:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1010:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1002:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:48:2"
									},
									"src": "942:75:2"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "1025:155:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 102,
									"name": "ERC721InvalidSender",
									"nameLocation": "1192:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1220:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1212:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1211:16:2"
									},
									"src": "1186:42:2"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "1236:162:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 107,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "1410:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1440:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1432:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:18:2"
									},
									"src": "1404:46:2"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "1458:251:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 114,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "1721:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1756:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1748:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1774:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "1766:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:35:2"
									},
									"src": "1715:68:2"
								},
								{
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "1791:177:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 119,
									"name": "ERC721InvalidApprover",
									"nameLocation": "1980:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "2010:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "2002:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2001:18:2"
									},
									"src": "1974:46:2"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "2028:200:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 124,
									"name": "ERC721InvalidOperator",
									"nameLocation": "2240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "2262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:18:2"
									},
									"src": "2234:46:2"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "2288:172:2",
										"text": " @dev An `owner`'s token query was out of bounds for `index`.\n NOTE: The owner being `address(0)` indicates a global out of bounds index."
									},
									"errorSelector": "a57d13dc",
									"id": 131,
									"name": "ERC721OutOfBoundsIndex",
									"nameLocation": "2472:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2503:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2495:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2495:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2518:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2510:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2510:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2494:30:2"
									},
									"src": "2466:59:2"
								},
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "2533:52:2",
										"text": " @dev Batch mint is not allowed."
									},
									"errorSelector": "59171fc1",
									"id": 134,
									"name": "ERC721EnumerableForbiddenBatchMint",
									"nameLocation": "2597:34:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2631:2:2"
									},
									"src": "2591:43:2"
								}
							],
							"scope": 136,
							"src": "142:2495:2",
							"usedErrors": [
								83,
								88,
								97,
								102,
								107,
								114,
								119,
								124,
								131,
								134
							],
							"usedEvents": []
						}
					],
					"src": "114:2523:2"
				},
				"id": 2
			},
			"contracts/libraries/Events.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/Events.sol",
					"exportedSymbols": {
						"ERC721Events": [
							165
						]
					},
					"id": 166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "111:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721Events",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 165,
							"linearizedBaseContracts": [
								165
							],
							"name": "ERC721Events",
							"nameLocation": "147:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "167:90:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 146,
									"name": "Transfer",
									"nameLocation": "269:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "304:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "288:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "335:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "319:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "364:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "348:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:101:3"
									},
									"src": "263:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "387:96:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 155,
									"name": "Approval",
									"nameLocation": "495:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "530:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "514:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "514:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "562:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "546:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "597:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "581:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:108:3"
									},
									"src": "489:123:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "620:119:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 164,
									"name": "ApprovalForAll",
									"nameLocation": "751:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "792:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "776:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "824:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "808:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "848:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "843:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "843:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:98:3"
									},
									"src": "745:119:3"
								}
							],
							"scope": 166,
							"src": "139:728:3",
							"usedErrors": [],
							"usedEvents": [
								146,
								155,
								164
							]
						}
					],
					"src": "111:756:3"
				},
				"id": 3
			},
			"contracts/libraries/LibERC721.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/LibERC721.sol",
					"exportedSymbols": {
						"ERC721Errors": [
							135
						],
						"ERC721Events": [
							165
						],
						"IERC721Receiver": [
							17
						],
						"LibERC721": [
							1191
						]
					},
					"id": 1192,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 18,
							"src": "63:66:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Errors.sol",
							"file": "./Errors.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 136,
							"src": "131:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 169,
										"name": "ERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 135,
										"src": "139:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/Events.sol",
							"file": "./Events.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1192,
							"sourceUnit": 166,
							"src": "175:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "ERC721Events",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 165,
										"src": "183:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibERC721",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1191,
							"linearizedBaseContracts": [
								1191
							],
							"name": "LibERC721",
							"nameLocation": "229:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 177,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "272:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1191,
									"src": "246:85:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 173,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "246:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e73746f726167652e657263373231",
												"id": 175,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "306:24:4",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_f2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78",
													"typeString": "literal_string \"diamond.storage.erc721\""
												},
												"value": "diamond.storage.erc721"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_f2dec0acaef95de6625646379d631adff4db9f6c79b84a31adcb9a23bf6cea78",
													"typeString": "literal_string \"diamond.storage.erc721\""
												}
											],
											"id": 174,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "296:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 176,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "296:35:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibERC721.Layout",
									"id": 221,
									"members": [
										{
											"constant": false,
											"id": 179,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "372:4:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "365:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 178,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "365:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 181,
											"mutability": "mutable",
											"name": "symbol",
											"nameLocation": "394:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "387:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 180,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "387:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 184,
											"mutability": "mutable",
											"name": "allTokens",
											"nameLocation": "421:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "411:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ArrayTypeName",
												"src": "411:9:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 188,
											"mutability": "mutable",
											"name": "owners",
											"nameLocation": "477:6:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "441:42:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 187,
												"keyName": "tokenId",
												"keyNameLocation": "457:7:4",
												"keyType": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "441:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "balances",
											"nameLocation": "525:8:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "494:39:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 191,
												"keyName": "owner",
												"keyNameLocation": "510:5:4",
												"keyType": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "502:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "494:30:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "519:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "tokenApprovals",
											"nameLocation": "580:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "544:50:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
												"typeString": "mapping(uint256 => address)"
											},
											"typeName": {
												"id": 195,
												"keyName": "tokenId",
												"keyNameLocation": "560:7:4",
												"keyType": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "544:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
													"typeString": "mapping(uint256 => address)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 202,
											"mutability": "mutable",
											"name": "operatorApprovals",
											"nameLocation": "664:17:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "605:76:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
												"typeString": "mapping(address => mapping(address => bool))"
											},
											"typeName": {
												"id": 201,
												"keyName": "owner",
												"keyNameLocation": "621:5:4",
												"keyType": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "605:58:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
													"typeString": "mapping(address => mapping(address => bool))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 200,
													"keyName": "oprator",
													"keyNameLocation": "646:7:4",
													"keyType": {
														"id": 198,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "638:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "630:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 199,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "657:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 208,
											"mutability": "mutable",
											"name": "ownedTokens",
											"nameLocation": "752:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "692:71:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint256 => uint256))"
											},
											"typeName": {
												"id": 207,
												"keyName": "owner",
												"keyNameLocation": "708:5:4",
												"keyType": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "692:59:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint256 => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 206,
													"keyName": "index",
													"keyNameLocation": "733:5:4",
													"keyType": {
														"id": 204,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "725:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Mapping",
													"src": "717:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
														"typeString": "mapping(uint256 => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 205,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "742:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "ownedTokensIndex",
											"nameLocation": "802:16:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "774:44:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 211,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "774:27:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "allTokensIndex",
											"nameLocation": "865:14:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "829:50:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"typeName": {
												"id": 215,
												"keyName": "tokenId",
												"keyNameLocation": "845:7:4",
												"keyType": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "829:35:4",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
													"typeString": "mapping(uint256 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "_gaps",
											"nameLocation": "902:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 221,
											"src": "890:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$88_storage_ptr",
												"typeString": "uint256[88]"
											},
											"typeName": {
												"baseType": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"length": {
													"hexValue": "3838",
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "898:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_88_by_1",
														"typeString": "int_const 88"
													},
													"value": "88"
												},
												"nodeType": "ArrayTypeName",
												"src": "890:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$88_storage_ptr",
													"typeString": "uint256[88]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "347:6:4",
									"nodeType": "StructDefinition",
									"scope": 1191,
									"src": "340:575:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "982:105:4",
										"statements": [
											{
												"assignments": [
													228
												],
												"declarations": [
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "1001:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 232,
														"src": "993:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 227,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "993:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"id": 229,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 177,
													"src": "1008:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "993:27:4"
											},
											{
												"AST": {
													"nativeSrc": "1040:40:4",
													"nodeType": "YulBlock",
													"src": "1040:40:4",
													"statements": [
														{
															"nativeSrc": "1055:14:4",
															"nodeType": "YulAssignment",
															"src": "1055:14:4",
															"value": {
																"name": "slot",
																"nativeSrc": "1065:4:4",
																"nodeType": "YulIdentifier",
																"src": "1065:4:4"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "1055:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1055:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 225,
														"isOffset": false,
														"isSlot": true,
														"src": "1055:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 228,
														"isOffset": false,
														"isSlot": false,
														"src": "1065:4:4",
														"valueSize": 1
													}
												],
												"id": 231,
												"nodeType": "InlineAssembly",
												"src": "1031:49:4"
											}
										]
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "932:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:2:4"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "979:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "964:16:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
													"typeString": "struct LibERC721.Layout"
												},
												"typeName": {
													"id": 224,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 223,
														"name": "Layout",
														"nameLocations": [
															"964:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 221,
														"src": "964:6:4"
													},
													"referencedDeclaration": 221,
													"src": "964:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
														"typeString": "struct LibERC721.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:18:4"
									},
									"scope": 1191,
									"src": "923:164:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "1679:50:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 241,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1697:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1697:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1706:6:4",
														"memberName": "owners",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 188,
														"src": "1697:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 245,
													"indexExpression": {
														"id": 244,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1713:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1697:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 240,
												"id": 246,
												"nodeType": "Return",
												"src": "1690:31:4"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1095:511:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "1621:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1638:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1630:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:17:4"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1670:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:9:4"
									},
									"scope": 1191,
									"src": "1612:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "1921:58:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 256,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1939:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1939:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1948:14:4",
														"memberName": "tokenApprovals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 196,
														"src": "1939:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 260,
													"indexExpression": {
														"id": 259,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "1963:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1939:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 255,
												"id": 261,
												"nodeType": "Return",
												"src": "1932:39:4"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1737:107:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "1859:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1880:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1872:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:17:4"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "1912:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1912:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1911:9:4"
									},
									"scope": 1191,
									"src": "1850:129:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2434:211:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 275,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2465:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2484:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2476:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2476:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2476:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2465:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 281,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 266,
																			"src": "2504:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 282,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "2513:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "2504:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 284,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 233,
																						"src": "2541:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2541:8:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 286,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2550:17:4",
																				"memberName": "operatorApprovals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 202,
																				"src": "2541:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 288,
																			"indexExpression": {
																				"id": 287,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "2568:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2541:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 290,
																		"indexExpression": {
																			"id": 289,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "2575:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2541:42:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "2504:79:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 293,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 270,
																				"src": "2617:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 292,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2604:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2604:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 295,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "2629:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2604:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2504:132:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 298,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2503:134:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2465:172:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 274,
												"id": 300,
												"nodeType": "Return",
												"src": "2445:192:4"
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "1987:306:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "2308:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2340:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2332:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2364:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2356:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2356:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2390:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2382:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2382:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:83:4"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2428:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2428:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:6:4"
									},
									"scope": 1191,
									"src": "2299:346:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3212:366:4",
										"statements": [
											{
												"condition": {
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3227:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 313,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "3242:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 314,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "3249:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 315,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "3258:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 312,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3228:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3228:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "3223:348:4",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "3268:303:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 318,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3287:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3304:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3296:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 319,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3296:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3296:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3287:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 338,
																"nodeType": "Block",
																"src": "3400:160:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 334,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 307,
																					"src": "3488:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 335,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3518:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 331,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 135,
																					"src": "3426:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 333,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3439:26:4",
																				"memberName": "ERC721InsufficientApproval",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 114,
																				"src": "3426:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 336,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3426:118:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 337,
																		"nodeType": "RevertStatement",
																		"src": "3419:125:4"
																	}
																]
															},
															"id": 339,
															"nodeType": "IfStatement",
															"src": "3283:277:4",
															"trueBody": {
																"id": 330,
																"nodeType": "Block",
																"src": "3308:86:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 327,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 309,
																					"src": "3370:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 324,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 135,
																					"src": "3334:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3347:22:4",
																				"memberName": "ERC721NonexistentToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 88,
																				"src": "3334:35:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3334:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 329,
																		"nodeType": "RevertStatement",
																		"src": "3327:51:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2653:430:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "3098:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3133:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3125:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3125:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3157:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3149:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3183:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3175:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3114:83:4"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3212:0:4"
									},
									"scope": 1191,
									"src": "3089:489:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "4300:200:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 351,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "4315:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4324:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4315:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 360,
												"nodeType": "IfStatement",
												"src": "4311:99:4",
												"trueBody": {
													"id": 359,
													"nodeType": "Block",
													"src": "4327:83:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 354,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "4349:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4362:34:4",
																	"memberName": "ERC721EnumerableForbiddenBatchMint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "4349:47:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4349:49:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 358,
															"nodeType": "RevertStatement",
															"src": "4342:56:4"
														}
													]
												}
											},
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "4420:73:4",
												"statements": [
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 361,
																			"name": "layout",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "4445:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																				"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																			}
																		},
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4445:8:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																			"typeString": "struct LibERC721.Layout storage pointer"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4454:8:4",
																	"memberName": "balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "4445:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 365,
																"indexExpression": {
																	"id": 364,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "4463:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4445:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 366,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "4475:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "4445:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "4445:36:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3586:640:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "4241:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4266:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "4258:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4283:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "4275:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 347,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:33:4"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4300:0:4"
									},
									"scope": 1191,
									"src": "4232:268:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "5227:1248:4",
										"statements": [
											{
												"assignments": [
													384
												],
												"declarations": [
													{
														"constant": false,
														"id": 384,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "5246:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "5238:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 383,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5238:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"arguments": [
														{
															"id": 386,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5271:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 385,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "5262:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5262:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5238:41:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 389,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 378,
														"src": "5342:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5358:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5350:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 390,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5350:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5350:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5342:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "5338:97:4",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "5362:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 396,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "5394:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 397,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "5409:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 398,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5415:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 395,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "5377:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5377:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "5377:46:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "5482:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5507:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5499:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 404,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5499:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5499:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5482:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "5478:289:4",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "5511:256:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5626:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5618:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 410,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5618:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5618:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 414,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "5630:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5647:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5639:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5639:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5639:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5651:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 409,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		972,
																		1047
																	],
																	"referencedDeclaration": 1047,
																	"src": "5609:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5609:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "ExpressionStatement",
															"src": "5609:48:4"
														},
														{
															"id": 430,
															"nodeType": "UncheckedBlock",
															"src": "5674:82:4",
															"statements": [
																{
																	"expression": {
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 422,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 233,
																						"src": "5703:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 423,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5703:8:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 424,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5712:8:4",
																				"memberName": "balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 192,
																				"src": "5703:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 426,
																			"indexExpression": {
																				"id": 425,
																				"name": "previousOwner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "5721:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5703:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5739:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5703:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 429,
																	"nodeType": "ExpressionStatement",
																	"src": "5703:37:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5783:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5797:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5789:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 434,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5789:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5789:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5783:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 449,
												"nodeType": "IfStatement",
												"src": "5779:119:4",
												"trueBody": {
													"id": 448,
													"nodeType": "Block",
													"src": "5801:97:4",
													"statements": [
														{
															"id": 447,
															"nodeType": "UncheckedBlock",
															"src": "5816:71:4",
															"statements": [
																{
																	"expression": {
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 439,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 233,
																						"src": "5845:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5845:8:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 441,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5854:8:4",
																				"memberName": "balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 192,
																				"src": "5845:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 443,
																			"indexExpression": {
																				"id": 442,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 374,
																				"src": "5863:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "5845:21:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5870:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5845:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 446,
																	"nodeType": "ExpressionStatement",
																	"src": "5845:26:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 450,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "5910:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5910:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 452,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5919:6:4",
															"memberName": "owners",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 188,
															"src": "5910:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 454,
														"indexExpression": {
															"id": 453,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5926:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5910:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "5937:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5910:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "5910:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 461,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "5979:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5994:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "5998:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 458,
															"name": "ERC721Events",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5957:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Events_$165_$",
																"typeString": "type(library ERC721Events)"
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5970:8:4",
														"memberName": "Transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "5957:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5957:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "EmitStatement",
												"src": "5952:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6023:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6048:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6040:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6040:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6040:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6023:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 477,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6129:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6129:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 486,
													"nodeType": "IfStatement",
													"src": "6125:108:4",
													"trueBody": {
														"id": 485,
														"nodeType": "Block",
														"src": "6150:83:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 481,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 384,
																			"src": "6198:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 482,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "6213:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 480,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "6165:32:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6165:56:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 484,
																"nodeType": "ExpressionStatement",
																"src": "6165:56:4"
															}
														]
													}
												},
												"id": 487,
												"nodeType": "IfStatement",
												"src": "6019:214:4",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "6052:67:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 473,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "6099:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 472,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "6067:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6067:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 475,
															"nodeType": "ExpressionStatement",
															"src": "6067:40:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "6247:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6261:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6253:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 489,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6253:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6247:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 499,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "6347:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 500,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "6364:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6347:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 508,
													"nodeType": "IfStatement",
													"src": "6343:92:4",
													"trueBody": {
														"id": 507,
														"nodeType": "Block",
														"src": "6368:67:4",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 503,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 374,
																			"src": "6411:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 504,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 376,
																			"src": "6415:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 502,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "6383:27:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6383:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 506,
																"nodeType": "ExpressionStatement",
																"src": "6383:40:4"
															}
														]
													}
												},
												"id": 509,
												"nodeType": "IfStatement",
												"src": "6243:192:4",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "6265:72:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 495,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "6317:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 494,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "6280:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6280:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "ExpressionStatement",
															"src": "6280:45:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 510,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 384,
													"src": "6454:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 382,
												"id": 511,
												"nodeType": "Return",
												"src": "6447:20:4"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "4508:592:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5115:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5141:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5133:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5133:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5162:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5154:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5154:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "5188:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5180:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5122:77:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "5218:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5218:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5217:9:4"
									},
									"scope": 1191,
									"src": "5106:1369:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "6851:168:4",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6870:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "6862:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6862:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 523,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "6879:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6879:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6888:8:4",
															"memberName": "balances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 192,
															"src": "6879:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 527,
														"indexExpression": {
															"id": 526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "6897:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6879:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6903:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6879:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6862:42:4"
											},
											{
												"expression": {
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 531,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "6915:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6915:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6924:11:4",
																"memberName": "ownedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 208,
																"src": "6915:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 535,
															"indexExpression": {
																"id": 534,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "6936:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6915:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 537,
														"indexExpression": {
															"id": 536,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6940:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6915:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "6950:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6915:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "6915:42:4"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 541,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "6968:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6968:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6977:16:4",
															"memberName": "ownedTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "6968:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 545,
														"indexExpression": {
															"id": 544,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "6994:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6968:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 546,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "7005:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6968:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "6968:43:4"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "6483:287:4",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "6785:27:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6821:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6813:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6833:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "6825:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6812:29:4"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6851:0:4"
									},
									"scope": 1191,
									"src": "6776:243:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "7287:122:4",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7298:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7298:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7307:14:4",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 216,
															"src": "7298:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 560,
														"indexExpression": {
															"id": 559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7322:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7298:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 561,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7333:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7333:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 563,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7342:9:4",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "7333:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7352:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7333:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7298:60:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "7298:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7393:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 567,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "7369:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7369:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7378:9:4",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "7369:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7388:4:4",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7369:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7369:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "7369:32:4"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "7027:187:4",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "7229:31:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7269:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "7261:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7260:17:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7287:0:4"
									},
									"scope": 1191,
									"src": "7220:189:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "8143:952:4",
										"statements": [
											{
												"assignments": [
													584
												],
												"declarations": [
													{
														"constant": false,
														"id": 584,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "8336:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8328:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 585,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "8353:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8353:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8362:8:4",
														"memberName": "balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 192,
														"src": "8353:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 589,
													"indexExpression": {
														"id": 588,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "8371:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8353:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8328:48:4"
											},
											{
												"assignments": [
													592
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "8395:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8387:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 591,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 593,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "8408:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8408:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8417:16:4",
														"memberName": "ownedTokensIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "8408:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 597,
													"indexExpression": {
														"id": 596,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "8434:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8408:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8387:55:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 599,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "8549:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 600,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8549:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 631,
												"nodeType": "IfStatement",
												"src": "8545:352:4",
												"trueBody": {
													"id": 630,
													"nodeType": "Block",
													"src": "8579:318:4",
													"statements": [
														{
															"assignments": [
																603
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 603,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "8602:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 630,
																	"src": "8594:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 602,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8594:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 611,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 604,
																				"name": "layout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "8616:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																					"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																				}
																			},
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8616:8:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																				"typeString": "struct LibERC721.Layout storage pointer"
																			}
																		},
																		"id": 606,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8625:11:4",
																		"memberName": "ownedTokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 208,
																		"src": "8616:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 608,
																	"indexExpression": {
																		"id": 607,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "8637:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8616:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 610,
																"indexExpression": {
																	"id": 609,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "8643:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8616:42:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8594:64:4"
														},
														{
															"expression": {
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 612,
																					"name": "layout",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 233,
																					"src": "8675:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																						"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8675:8:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																					"typeString": "struct LibERC721.Layout storage pointer"
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8684:11:4",
																			"memberName": "ownedTokens",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 208,
																			"src": "8675:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 616,
																		"indexExpression": {
																			"id": 615,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "8696:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8675:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 618,
																	"indexExpression": {
																		"id": 617,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "8702:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8675:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 619,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "8716:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8675:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 621,
															"nodeType": "ExpressionStatement",
															"src": "8675:52:4"
														},
														{
															"expression": {
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 622,
																				"name": "layout",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 233,
																				"src": "8800:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																					"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8800:8:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																				"typeString": "struct LibERC721.Layout storage pointer"
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8809:16:4",
																		"memberName": "ownedTokensIndex",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 212,
																		"src": "8800:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"id": 625,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 603,
																		"src": "8826:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8800:38:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 627,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 592,
																	"src": "8841:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8800:51:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 629,
															"nodeType": "ExpressionStatement",
															"src": "8800:51:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "8986:41:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 632,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "8993:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8993:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9002:16:4",
															"memberName": "ownedTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "8993:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 636,
														"indexExpression": {
															"id": 635,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "9019:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8993:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "8986:41:4"
											},
											{
												"expression": {
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9038:49:4",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 639,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "9045:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9045:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9054:11:4",
																"memberName": "ownedTokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 208,
																"src": "9045:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 643,
															"indexExpression": {
																"id": 642,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "9066:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9045:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 645,
														"indexExpression": {
															"id": 644,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "9072:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9045:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "9038:49:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "7417:613:4",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "8045:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8096:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8088:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8119:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "8111:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8077:56:4"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8143:0:4"
									},
									"scope": 1191,
									"src": "8036:1059:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "9466:1064:4",
										"statements": [
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "9656:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "9648:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9648:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 657,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "9673:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9673:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9682:9:4",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "9673:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9692:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9673:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9701:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9673:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9648:54:4"
											},
											{
												"assignments": [
													665
												],
												"declarations": [
													{
														"constant": false,
														"id": 665,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "9721:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "9713:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 664,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 666,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "9734:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9734:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9743:14:4",
														"memberName": "allTokensIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 216,
														"src": "9734:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 670,
													"indexExpression": {
														"id": 669,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "9758:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9734:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:53:4"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "10101:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 709,
														"src": "10093:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10093:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 674,
																"name": "layout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "10115:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																	"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																}
															},
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10115:8:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																"typeString": "struct LibERC721.Layout storage pointer"
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10124:9:4",
														"memberName": "allTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "10115:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 678,
													"indexExpression": {
														"id": 677,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "10134:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10115:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10093:56:4"
											},
											{
												"expression": {
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 680,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10162:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10162:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10171:9:4",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "10162:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 684,
														"indexExpression": {
															"id": 683,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "10181:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10162:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 685,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "10195:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10162:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "10162:44:4"
											},
											{
												"expression": {
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 688,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10275:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10275:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10284:14:4",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 216,
															"src": "10275:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 692,
														"indexExpression": {
															"id": 691,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "10299:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10275:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 693,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "10314:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10275:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "10275:49:4"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10448:39:4",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 696,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10455:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10455:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10464:14:4",
															"memberName": "allTokensIndex",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 216,
															"src": "10455:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 700,
														"indexExpression": {
															"id": 699,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "10479:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10455:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "10448:39:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 703,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "10498:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10498:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10507:9:4",
															"memberName": "allTokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 184,
															"src": "10498:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10517:3:4",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "10498:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10498:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "10498:24:4"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "9107:281:4",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "9403:36:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9448:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "9440:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9439:17:4"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9466:0:4"
									},
									"scope": 1191,
									"src": "9394:1136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "10919:308:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 718,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "10934:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10948:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10940:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 719,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10940:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10940:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10934:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 734,
												"nodeType": "IfStatement",
												"src": "10930:102:4",
												"trueBody": {
													"id": 733,
													"nodeType": "Block",
													"src": "10952:80:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11017:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11009:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 727,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11009:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11009:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 724,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "10974:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10987:21:4",
																	"memberName": "ERC721InvalidReceiver",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "10974:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10974:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 732,
															"nodeType": "RevertStatement",
															"src": "10967:53:4"
														}
													]
												}
											},
											{
												"assignments": [
													736
												],
												"declarations": [
													{
														"constant": false,
														"id": 736,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11050:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "11042:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 735,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11042:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"arguments": [
														{
															"id": 738,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "11074:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "11078:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11095:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11087:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11087:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11087:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "11066:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11066:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11042:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 746,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "11113:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11138:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11130:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 747,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11130:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11130:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11113:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 762,
												"nodeType": "IfStatement",
												"src": "11109:111:4",
												"trueBody": {
													"id": 761,
													"nodeType": "Block",
													"src": "11142:78:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 757,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11205:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 756,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11197:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 755,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11197:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11197:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 752,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "11164:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11177:19:4",
																	"memberName": "ERC721InvalidSender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 102,
																	"src": "11164:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11164:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 760,
															"nodeType": "RevertStatement",
															"src": "11157:51:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "10538:322:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10875:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10889:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "10881:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10881:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10901:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "10893:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10880:29:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10919:0:4"
									},
									"scope": 1191,
									"src": "10866:361:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "11647:45:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "11668:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "11672:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11681:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 772,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															779,
															807
														],
														"referencedDeclaration": 807,
														"src": "11658:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11658:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "11658:26:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "11235:349:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11599:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11617:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "11609:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "11621:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11608:29:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11647:0:4"
									},
									"scope": 1191,
									"src": "11590:102:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "12029:112:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "12046:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "12050:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "12040:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "12040:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 795,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12091:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12095:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12091:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12111:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12103:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 797,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12103:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12103:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "12115:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 802,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "12119:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 803,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "12128:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 794,
														"name": "checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "12069:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12069:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "12069:64:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "11700:213:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11928:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11956:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "11948:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11977:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "11969:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11969:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12008:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "11995:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11995:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11937:82:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12029:0:4"
									},
									"scope": 1191,
									"src": "11919:222:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "12521:204:4",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12540:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 841,
														"src": "12532:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12532:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12572:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12564:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 816,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12564:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12564:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "12576:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12593:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 822,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12585:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 821,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12585:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12585:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 815,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "12556:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12556:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12532:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 827,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "12611:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12636:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12628:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 828,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12628:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12628:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12611:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "12607:111:4",
												"trueBody": {
													"id": 839,
													"nodeType": "Block",
													"src": "12640:78:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 836,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "12698:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 833,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "12662:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12675:22:4",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 88,
																	"src": "12662:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12662:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 838,
															"nodeType": "RevertStatement",
															"src": "12655:51:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "12149:325:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12489:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12503:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "12495:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12494:17:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12521:0:4"
									},
									"scope": 1191,
									"src": "12480:245:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "13133:504:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 852,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "13148:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13162:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13154:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 853,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13154:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13154:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13148:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 868,
												"nodeType": "IfStatement",
												"src": "13144:102:4",
												"trueBody": {
													"id": 867,
													"nodeType": "Block",
													"src": "13166:80:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 861,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 858,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "13188:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13201:21:4",
																	"memberName": "ERC721InvalidReceiver",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "13188:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13188:46:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 866,
															"nodeType": "RevertStatement",
															"src": "13181:53:4"
														}
													]
												}
											},
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "13264:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 907,
														"src": "13256:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13256:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"id": 872,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "13288:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "13292:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13309:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13301:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 874,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13301:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13301:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 871,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "13280:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13280:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13256:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 880,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "13327:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13352:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13344:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13344:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13344:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13327:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 893,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "13444:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 894,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "13461:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "13444:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 905,
													"nodeType": "IfStatement",
													"src": "13440:190:4",
													"trueBody": {
														"id": 904,
														"nodeType": "Block",
														"src": "13467:163:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 899,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 845,
																			"src": "13541:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 900,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 849,
																			"src": "13564:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 901,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 870,
																			"src": "13590:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 896,
																			"name": "ERC721Errors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 135,
																			"src": "13489:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																				"typeString": "type(library ERC721Errors)"
																			}
																		},
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "13502:20:4",
																		"memberName": "ERC721IncorrectOwner",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 97,
																		"src": "13489:33:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13489:129:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 903,
																"nodeType": "RevertStatement",
																"src": "13482:136:4"
															}
														]
													}
												},
												"id": 906,
												"nodeType": "IfStatement",
												"src": "13323:307:4",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "13356:78:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 889,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 849,
																		"src": "13414:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 886,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "13378:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13391:22:4",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 88,
																	"src": "13378:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13378:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 891,
															"nodeType": "RevertStatement",
															"src": "13371:51:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "12733:323:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "13071:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13089:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13081:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13081:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13103:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13095:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13095:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13115:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13107:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13107:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13080:43:4"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13133:0:4"
									},
									"scope": 1191,
									"src": "13062:575:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 925,
										"nodeType": "Block",
										"src": "14667:55:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 919,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "14692:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "14698:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "14702:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14711:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 918,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															926,
															954
														],
														"referencedDeclaration": 954,
														"src": "14678:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14678:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "14678:36:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "13645:941:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14601:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14623:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "14615:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14615:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14637:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "14629:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14649:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 926,
												"src": "14641:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14641:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14614:43:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14667:0:4"
									},
									"scope": 1191,
									"src": "14592:130:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "15102:116:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "15123:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "15129:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "15133:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 938,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "15113:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15113:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "15113:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15174:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15178:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15174:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "15186:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 948,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "15192:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "15196:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "15205:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 944,
														"name": "checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "15152:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,bytes memory)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15152:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "15152:58:4"
											}
										]
									},
									"documentation": {
										"id": 927,
										"nodeType": "StructuredDocumentation",
										"src": "14730:229:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "14974:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "14998:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14998:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15029:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "15021:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15021:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15050:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "15042:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15042:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15081:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "15068:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15068:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14987:105:4"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15102:0:4"
									},
									"scope": 1191,
									"src": "14965:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "15743:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 965,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "15763:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 966,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "15767:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 967,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "15776:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15782:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 964,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															972,
															1047
														],
														"referencedDeclaration": 1047,
														"src": "15754:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15754:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "15754:33:4"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "15226:441:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15682:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15699:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "15691:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15691:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "15703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15703:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "15728:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "15720:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15720:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15690:43:4"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15743:0:4"
									},
									"scope": 1191,
									"src": "15673:122:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "16112:694:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 984,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "16180:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 985,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "16193:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16209:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16201:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 986,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "16201:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16201:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "16193:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16180:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "16176:573:4",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "16213:536:4",
													"statements": [
														{
															"assignments": [
																993
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 993,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "16236:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1036,
																	"src": "16228:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 992,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "16228:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 997,
															"initialValue": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "16258:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 994,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "16244:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16244:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "16228:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 998,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "16415:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "16431:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "16423:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 999,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "16423:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16423:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16415:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1006,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1004,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 993,
																			"src": "16454:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1005,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "16463:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "16454:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "16415:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "16488:40:4",
																	"subExpression": {
																		"baseExpression": {
																			"baseExpression": {
																				"expression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1008,
																						"name": "layout",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 233,
																						"src": "16489:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																							"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																						}
																					},
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "16489:8:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																						"typeString": "struct LibERC721.Layout storage pointer"
																					}
																				},
																				"id": 1010,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16498:17:4",
																				"memberName": "operatorApprovals",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 202,
																				"src": "16489:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(address => bool))"
																				}
																			},
																			"id": 1012,
																			"indexExpression": {
																				"id": 1011,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 993,
																				"src": "16516:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16489:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																				"typeString": "mapping(address => bool)"
																			}
																		},
																		"id": 1014,
																		"indexExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 979,
																			"src": "16523:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "16489:39:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "16415:113:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1024,
															"nodeType": "IfStatement",
															"src": "16393:233:4",
															"trueBody": {
																"id": 1023,
																"nodeType": "Block",
																"src": "16544:82:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1020,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 979,
																					"src": "16605:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1017,
																					"name": "ERC721Errors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 135,
																					"src": "16570:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																						"typeString": "type(library ERC721Errors)"
																					}
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16583:21:4",
																				"memberName": "ERC721InvalidApprover",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 119,
																				"src": "16570:34:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16570:40:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1022,
																		"nodeType": "RevertStatement",
																		"src": "16563:47:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1025,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "16646:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1035,
															"nodeType": "IfStatement",
															"src": "16642:96:4",
															"trueBody": {
																"id": 1034,
																"nodeType": "Block",
																"src": "16657:81:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1029,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "16703:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1030,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 975,
																					"src": "16710:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 977,
																					"src": "16714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1026,
																					"name": "ERC721Events",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 165,
																					"src": "16681:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_ERC721Events_$165_$",
																						"typeString": "type(library ERC721Events)"
																					}
																				},
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "16694:8:4",
																				"memberName": "Approval",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 155,
																				"src": "16681:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16681:41:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1033,
																		"nodeType": "EmitStatement",
																		"src": "16676:46:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1038,
																	"name": "layout",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "16761:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																		"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16761:8:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																	"typeString": "struct LibERC721.Layout storage pointer"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16770:14:4",
															"memberName": "tokenApprovals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 196,
															"src": "16761:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1041,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "16785:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16761:32:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "16796:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16761:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "16761:37:4"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "15803:174:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15992:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16019:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "16011:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16040:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "16032:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "16066:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "16058:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16058:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "16086:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "16081:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 980,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16081:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16000:102:4"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16112:0:4"
									},
									"scope": 1191,
									"src": "15983:823:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "17144:259:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1057,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "17159:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17179:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17171:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1058,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17171:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17171:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17159:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1070,
												"nodeType": "IfStatement",
												"src": "17155:106:4",
												"trueBody": {
													"id": 1069,
													"nodeType": "Block",
													"src": "17183:78:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1066,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1052,
																		"src": "17240:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1063,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "17205:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17218:21:4",
																	"memberName": "ERC721InvalidOperator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "17205:34:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17205:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1068,
															"nodeType": "RevertStatement",
															"src": "17198:51:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1071,
																		"name": "layout",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "17271:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$221_storage_ptr_$",
																			"typeString": "function () pure returns (struct LibERC721.Layout storage pointer)"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "17271:8:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$221_storage_ptr",
																		"typeString": "struct LibERC721.Layout storage pointer"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "17280:17:4",
																"memberName": "operatorApprovals",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "17271:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1075,
															"indexExpression": {
																"id": 1074,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "17298:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17271:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1077,
														"indexExpression": {
															"id": 1076,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "17305:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "17271:43:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1078,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "17317:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17271:54:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "17271:54:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1084,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "17369:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "17376:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "17386:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"expression": {
															"id": 1081,
															"name": "ERC721Events",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "17341:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721Events_$165_$",
																"typeString": "type(library ERC721Events)"
															}
														},
														"id": 1083,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17354:14:4",
														"memberName": "ApprovalForAll",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 164,
														"src": "17341:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17341:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "EmitStatement",
												"src": "17336:59:4"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "16814:205:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "17034:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17071:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "17063:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17063:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "17095:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "17087:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17087:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "17119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "17114:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1053,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17114:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17052:82:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17144:0:4"
									},
									"scope": 1191,
									"src": "17025:378:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "17718:188:4",
										"statements": [
											{
												"assignments": [
													1099
												],
												"declarations": [
													{
														"constant": false,
														"id": 1099,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "17737:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "17729:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1098,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "17729:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1103,
												"initialValue": {
													"arguments": [
														{
															"id": 1101,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "17754:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "17745:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17745:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17729:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1104,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "17777:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17794:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17786:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1105,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17786:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17786:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17777:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "17773:103:4",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "17798:78:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1113,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "17856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1110,
																		"name": "ERC721Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "17820:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																			"typeString": "type(library ERC721Errors)"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17833:22:4",
																	"memberName": "ERC721NonexistentToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 88,
																	"src": "17820:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17820:44:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1115,
															"nodeType": "RevertStatement",
															"src": "17813:51:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1118,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1099,
													"src": "17893:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1119,
												"nodeType": "Return",
												"src": "17886:12:4"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "17411:229:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "17655:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17677:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "17669:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17669:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17668:17:4"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "17709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17708:9:4"
									},
									"scope": 1191,
									"src": "17646:260:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1189,
										"nodeType": "Block",
										"src": "18625:947:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1135,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "18640:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18643:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "18640:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18648:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "18640:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18657:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18640:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "18636:929:4",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "18660:905:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1165,
																		"nodeType": "Block",
																		"src": "18904:218:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1152,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1150,
																						"src": "18927:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1153,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 17,
																								"src": "18937:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1154,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "18953:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 16,
																							"src": "18937:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1155,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "18970:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "18937:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "18927:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1164,
																				"nodeType": "IfStatement",
																				"src": "18923:184:4",
																				"trueBody": {
																					"id": 1163,
																					"nodeType": "Block",
																					"src": "18980:127:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1160,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1128,
																										"src": "19084:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1157,
																										"name": "ERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 135,
																										"src": "19049:12:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																											"typeString": "type(library ERC721Errors)"
																										}
																									},
																									"id": 1159,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "19062:21:4",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 107,
																									"src": "19049:34:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1161,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19049:38:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1162,
																							"nodeType": "RevertStatement",
																							"src": "19042:45:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1166,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "18896:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1166,
																				"src": "18889:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "18889:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "18888:15:4"
																	},
																	"src": "18880:242:4"
																},
																{
																	"block": {
																		"id": 1184,
																		"nodeType": "Block",
																		"src": "19151:403:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1173,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1170,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1168,
																							"src": "19174:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1171,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "19181:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "19174:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1172,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "19191:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "19174:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1182,
																					"nodeType": "Block",
																					"src": "19344:195:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "19432:88:4",
																								"nodeType": "YulBlock",
																								"src": "19432:88:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "19470:2:4",
																															"nodeType": "YulLiteral",
																															"src": "19470:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "19474:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "19474:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "19466:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "19466:3:4"
																													},
																													"nativeSrc": "19466:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "19466:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "19489:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "19489:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "19483:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "19483:5:4"
																													},
																													"nativeSrc": "19483:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "19483:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "19459:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "19459:6:4"
																											},
																											"nativeSrc": "19459:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "19459:38:4"
																										},
																										"nativeSrc": "19459:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "19459:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1168,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19474:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1168,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "19489:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1181,
																							"nodeType": "InlineAssembly",
																							"src": "19423:97:4"
																						}
																					]
																				},
																				"id": 1183,
																				"nodeType": "IfStatement",
																				"src": "19170:369:4",
																				"trueBody": {
																					"id": 1180,
																					"nodeType": "Block",
																					"src": "19194:144:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1177,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1128,
																										"src": "19315:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"expression": {
																										"id": 1174,
																										"name": "ERC721Errors",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 135,
																										"src": "19280:12:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_ERC721Errors_$135_$",
																											"typeString": "type(library ERC721Errors)"
																										}
																									},
																									"id": 1176,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "19293:21:4",
																									"memberName": "ERC721InvalidReceiver",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 107,
																									"src": "19280:34:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1178,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "19280:38:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1179,
																							"nodeType": "RevertStatement",
																							"src": "19273:45:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1185,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1169,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1168,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "19143:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1185,
																				"src": "19130:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1167,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "19130:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "19129:21:4"
																	},
																	"src": "19123:431:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1144,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "18755:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1145,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1126,
																		"src": "18786:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1146,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1130,
																		"src": "18813:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1147,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "18843:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1141,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "18712:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1140,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 17,
																			"src": "18696:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18696:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$17",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18716:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "18696:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18696:170:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1186,
															"nodeType": "TryStatement",
															"src": "18675:879:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "17914:533:4",
										"text": " @dev Performs an acceptance check for the provided `operator` by calling {IERC721-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address is doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."
									},
									"id": 1190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkOnERC721Received",
									"nameLocation": "18462:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18502:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "18494:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18494:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18529:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "18521:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18521:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18552:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "18544:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18544:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18573:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "18565:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18565:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18604:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "18591:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18591:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18483:132:4"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18625:0:4"
									},
									"scope": 1191,
									"src": "18453:1119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1192,
							"src": "221:19354:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:19540:4"
				},
				"id": 4
			}
		}
	}
}